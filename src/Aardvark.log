 0: initializing aardvark ........................................................................
 0:   System Information:
 0:     System:      Microsoft Windows 10.0.18362
 0:     Processor:   4 core x64
 0:     Process:     x64
 0:     Framework:   .NET Core 3.1.4
 0:   Loading native dependencies for Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: linux/AMD64/libglfw.so.3
 0:     found: mac/AMD64/libglfw.3.dylib
 0:     found: windows/AMD64/glfw3.dll
 0:     copy glfw3.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Application.Slim.GL-32f42d4c-4cb0-88cf-a5d3-8c852c69d925-64\glfw3.dll
 0:     found: windows/x86/glfw3.dll
 0:   Loading native dependencies for Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 0.006 s
 0:   Loading native dependencies for Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: linux/AMD64/glvm.so
 0:     found: mac/AMD64/glvm.dylib
 0:     found: windows/AMD64/glvm.dll
 0:     copy glvm.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.dll
 0:     found: windows/AMD64/glvm.exp
 0:     copy glvm.exp to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.exp
 0:     found: windows/AMD64/glvm.iobj
 0:     copy glvm.iobj to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.iobj
 0:     found: windows/AMD64/glvm.ipdb
 0:     copy glvm.ipdb to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.ipdb
 0:     found: windows/AMD64/glvm.lib
 0:     copy glvm.lib to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.lib
 0:     found: windows/AMD64/glvm.pdb
 0:     copy glvm.pdb to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.pdb
 0:     found: windows/x86/glvm.dll
 0:     found: windows/x86/glvm.exp
 0:     found: windows/x86/glvm.iobj
 0:     found: windows/x86/glvm.ipdb
 0:     found: windows/x86/glvm.lib
 0:     found: windows/x86/glvm.pdb
 0:   Loading native dependencies for Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 0.000 s
 0:   Loading native dependencies for Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: remap.xml
 0:     found: linux/AMD64/libturbojpeg.so
 0:     found: mac/AMD64/libturbojpeg.dylib
 0:     found: windows/AMD64/turbojpeg.dll
 0:     copy turbojpeg.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Service-6c07790d-9ae8-a533-bcc3-f89762a0781f-64\turbojpeg.dll
 0:     found: windows/x86/turbojpeg.dll
 0:   Loading native dependencies for Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 0.035 s
 0:   Loading plugins ............................................................................
 0:     [LoadPlugins] Using plugin cache file name: C:\Users\Stefan\AppData\Roaming\Aardvark\cache\AardvarkRenderDemo_plugins.bin
 0:     [ReadCacheFile] loaded cache file: C:\Users\Stefan\AppData\Roaming\Aardvark\cache\AardvarkRenderDemo_plugins.bin
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardium.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Application.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Application.Slim.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Application.Slim.GL.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Application.Slim.Vulkan.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.Essentials.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.FSharp.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.Incremental.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.Rendering.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.Runtime.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.Telemetry.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.TypeProviders.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.GPGPU.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Rendering.GL.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Rendering.Vulkan.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.SceneGraph.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.SceneGraph.IO.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Service.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.UI.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.UI.Primitives.dll
 0:     [GetPluginAssemblyPaths] retrying to load because not in cache D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\AardvarkRenderDemo.dll
 0:     [GetPluginAssemblyPaths] retrying to load because not in cache D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\AardvarkRenderDemo.exe
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Adaptify.Core.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\AssimpNet.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\DevILSharp.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FShade.Core.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FShade.GLSL.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FShade.Imperative.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FShade.SpirV.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FSharp.Core.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FSharp.Data.Adaptive.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FsPickler.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FsPickler.Json.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\GLSLangSharp.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Microsoft.DotNet.PlatformAbstractions.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Microsoft.Extensions.DependencyModel.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Newtonsoft.Json.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\OpenTK.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Silk.NET.Core.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Silk.NET.GLFW.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Suave.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\System.Collections.Immutable.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\System.Reactive.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\System.Runtime.CompilerServices.Unsafe.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\System.Text.Json.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Ultz.SuperInvoke.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Ultz.SuperInvoke.Loader.dll
 0:   Loading plugins .................................................................... 0.128 s
 0:   using cache dir: C:\Users\Stefan\AppData\Roaming\Aardvark\cache
 0:   Loading native dependencies for DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: remap.xml
 0:     found: mac/AMD64/libDevIL.dylib
 0:     found: mac/AMD64/libILU.dylib
 0:     found: mac/AMD64/libILUT.dylib
 0:     found: windows/AMD64/DevIL.dll
 0:     copy DevIL.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64\DevIL.dll
 0:     found: windows/AMD64/ILU.dll
 0:     copy ILU.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64\ILU.dll
 0:     found: windows/AMD64/ILUT.dll
 0:     copy ILUT.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64\ILUT.dll
 0:     found: windows/x86/DevIL.dll
 0:     found: windows/x86/ILU.dll
 0:     found: windows/x86/ILUT.dll
 0:   Loading native dependencies for DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null 0.000 s
 0:   Loading native dependencies for Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: remap.xml
 0:     found: linux/AMD64/libvkvm.so
 0:     found: windows/AMD64/vkvm.dll
 0:     copy vkvm.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64\vkvm.dll
 0:     found: windows/AMD64/vkvm.exp
 0:     copy vkvm.exp to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64\vkvm.exp
 0:     found: windows/AMD64/vkvm.lib
 0:     copy vkvm.lib to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64\vkvm.lib
 0:     found: windows/AMD64/vkvm.pdb
 0:     copy vkvm.pdb to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64\vkvm.pdb
 0:     found: windows/x86/vkvm.dll
 0:     found: windows/x86/vkvm.exp
 0:     found: windows/x86/vkvm.lib
 0:     found: windows/x86/vkvm.pdb
 0:   Loading native dependencies for Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 0.000 s
 0:   Loading native dependencies for GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: linux/AMD64/libGLSLangNative.so
 0:     found: windows/AMD64/GLSLangNative.dll
 0:     copy GLSLangNative.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.dll
 0:     found: windows/AMD64/GLSLangNative.exp
 0:     copy GLSLangNative.exp to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.exp
 0:     found: windows/AMD64/GLSLangNative.iobj
 0:     copy GLSLangNative.iobj to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.iobj
 0:     found: windows/AMD64/GLSLangNative.ipdb
 0:     copy GLSLangNative.ipdb to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.ipdb
 0:     found: windows/AMD64/GLSLangNative.lib
 0:     copy GLSLangNative.lib to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.lib
 0:     found: windows/AMD64/GLSLangNative.pdb
 0:     copy GLSLangNative.pdb to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.pdb
 0:   Loading native dependencies for GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null 0.000 s
 0:   Loading native dependencies for AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: linux/AMD64/libassimp.so
 0:     found: mac/AMD64/libassimp.dylib
 0:     found: windows/AMD64/Assimp64.dll
 0:     copy Assimp64.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64\Assimp64.dll
 0:     found: windows/x86/Assimp32.dll
 0:   Loading native dependencies for AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null 0.003 s
 0:   [cache miss] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:   [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:   [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   initializing PixImageDevil .................................................................
 0:     probing paths for DevIL
 0:       D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:       C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64
 0:     [Introspection] loaded native library DevIL from C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64\DevIL.dll
 0:   initializing PixImageDevil ......................................................... 0.028 s
 0:   [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   initializing CustomPicklerProvider .........................................................
 0:     [cache miss] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     installing pickler: Aardvark.Base.Picklers.AdaptivePicklers
 0:   initializing CustomPicklerProvider ................................................. 0.052 s
 0:   [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   initializing SceneGraphCompletenessCheck ...................................................
 0:     [cache miss] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache miss] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   initializing SceneGraphCompletenessCheck ........................................... 0.146 s
 0:   [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:   [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.SceneGraph.IO, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   initializing Loader ................................................................ 0.000 s
 0: initializing aardvark ................................................................ 1.008 s
 0: probing paths for nvapi64
 0:   D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Application.Slim.GL-32f42d4c-4cb0-88cf-a5d3-8c852c69d925-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Service-6c07790d-9ae8-a533-bcc3-f89762a0781f-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64
 0: [Introspection] could not load native library nvapi64.dll
 0: trying to resolve native library libEGL.dll
 0: probing paths for libEGL
 0:   D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Application.Slim.GL-32f42d4c-4cb0-88cf-a5d3-8c852c69d925-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Service-6c07790d-9ae8-a533-bcc3-f89762a0781f-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64
 0: [Introspection] could not load native library libEGL.dll
 0: OpenGL 4.5 working
 0: backbuffer
 0:   color: R8G8B8A8
 0:   depth: D24S8
 0: probing paths for glvm
 0:   D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0: [Introspection] loaded native library glvm from C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.dll
 0: backbuffer
 0:   color: R8G8B8A8
 0:   depth: D24S8
 0: initializing OpenGL runtime ..................................................................
 0:   probing paths for glvm
 0:     D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Application.Slim.GL-32f42d4c-4cb0-88cf-a5d3-8c852c69d925-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Service-6c07790d-9ae8-a533-bcc3-f89762a0781f-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64
 0:   [Introspection] loaded native library glvm from C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.dll
 0:   probing paths for Opengl32
 0:     D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Application.Slim.GL-32f42d4c-4cb0-88cf-a5d3-8c852c69d925-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Service-6c07790d-9ae8-a533-bcc3-f89762a0781f-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64
 0:   [Introspection] loaded native library Opengl32.dll from Opengl32.dll
 0:   probing paths for opengl32
 0:     D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:   [Introspection] loaded native library opengl32.dll from opengl32.dll
 0:   probing paths for kernel32
 0:     D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:   [Introspection] loaded native library kernel32.dll from kernel32.dll
 0:   vendor:   "ATI Technologies Inc."
 0:   renderer: "AMD Radeon (TM) R9 380 Series"
 0:   version:  OpenGL 4.5.13559 / GLSL 4.6
 0: initializing OpenGL runtime .......................................................... 0.132 s
 0: WARNING: load
 0: probing paths for kernel32
 0:   D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64
 0: [Introspection] loaded native library kernel32.dll from kernel32.dll
 0: Aardvark.UI serves template.html
 0: Aardvark.UI serves favicon.ico
 0: WARNING: [aardvark.media] currently ThreadPool.MinThreads is (4,4)
 0: WARNING: [aardvark.media] unfortunately, currently we need to adjust this to at least (12,12) due to an open issue https://github.com/aardvark-platform/aardvark.media/issues/19
 0: Aardvark.Service serves aardvark.js
 0: Aardvark.Service serves rgbcolor.js
 0: Aardvark.Service serves docking.js
 0: Aardvark.Service serves semantic.js
 0: Aardvark.Service serves jquery-3-3-1.js
 0: Aardvark.Service serves touchstick.js
 0: Aardvark.Service serves aardfs.js
 0: Aardvark.Service serves essentialstuff.js
 0: Aardvark.Service serves aardvark.css
 0: Aardvark.Service serves docking.css
 0: Aardvark.Service serves semantic.css
 0: Aardvark.Service serves aardfs.css
 0: Aardvark.Service serves semantic-overrides.css
 0: Aardvark.Service serves fonts.css
 0: Aardvark.Service serves index.html
 0: Aardvark.Service serves stats.html
 0: Aardvark.Service serves aardvark-light.svg
 0: Aardvark.Service serves aardvark.svg
 0: Aardvark.Service serves brand-icons.woff2
 0: Aardvark.Service serves outline-icons.woff2
 0: Aardvark.Service serves icons.woff2
 0: Aardvark.Service serves S6u8w4BMUTPHjxsAUi-qJCY.woff2
 0: Aardvark.Service serves S6u8w4BMUTPHjxsAXC-q.woff2
 0: Aardvark.Service serves S6u9w4BMUTPHh6UVSwaPGR_p.woff2
 0: Aardvark.Service serves S6u9w4BMUTPHh6UVSwiPGQ.woff2
 0: Aardvark.Service serves S6uyw4BMUTPHjx4wXg.woff2
 0: Aardvark.Service serves S6uyw4BMUTPHjxAwXjeu.woff2
 0: Aardvark.Service serves S6u_w4BMUTPHjxsI5wq_FQft1dw.woff2
 0: Aardvark.Service serves S6u_w4BMUTPHjxsI5wq_Gwft.woff2
 0: Aardvark.UI serves template.html
 0: Aardvark.UI serves favicon.ico
 0: Aardvark.UI.Primitives serves spectrum.css
 0: Aardvark.UI.Primitives serves spectrum.js
 1: [Server] created client for (4d0f7af4-b9ca-c154-6376-8a5e07176147/n7), mapping enabled
 1: [Client] 1: running n7
 2: [Scene] n7: created
 2: texture created
 2: result created
 2: texture created
 2: result created
 2: texture created
 2: result created
 2: texture created
 2: result created
 2: texture created
 2: result created
 2: WARNING: load
 2: result created
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: [GL] RenderObjects: +1/-0 (411ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (3ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (3ms)
 2: using optimized native program
 2: [GL] RenderObjects: +61/-0 (1156ms)
 2: using optimized native program
 2: texture created
 2: [GL] RenderObjects: +1/-0 (1203ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1218ms)
 2: using optimized native program
 2: texture created
 2: texture created
 2: result created
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: [GL] RenderObjects: +1/-0 (3ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (3ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: texture created
 2: result created
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: [GL] RenderObjects: +1/-0 (11ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (37ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (7ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (18ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (4ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (36ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (3ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (5ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (5ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (7ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (3ms)
 2: using optimized native program
 2: texture created
 2: result created
 2: [GL] RenderObjects: +1/-0 (4ms)
 2: using optimized native program
 2: texture created
 2: WARNING: load
 2: [GL] RenderObjects: +60/-0 (14ms)
 2: using optimized native program
 2: [GL] RenderObjects: +2/-0 (2052ms)
 2: using optimized native program
 2: texture created
 2: result created
 2: texture created
 2: result created
 2: texture created
 2: result created
 2: [GL] RenderObjects: +1/-0 (3ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (17ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (50ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2130ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2191ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (3005ms)
 2: using optimized native program
 2: Compiling shader:
  1: #version 460
  2: #define __SHADER_STAGE__
  3: 
  4: 
  5: 
  6: 
  7: struct tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double
  8: {
  9:     bool Item0;
 10:     vec3 Item1;
 11:     vec3 Item2;
 12:     float Item3;
 13: };
 14: 
 15: struct SLEAardvarkRenderDemo_SLEUniform_Light
 16: {
 17:     int lightType;
 18:     vec4 lightPosition;
 19:     vec4 lightDirection;
 20:     vec3 color;
 21:     bool castsShadow;
 22:     float cutOffInner;
 23:     float cutOffOuter;
 24:     float radius;
 25:     vec3 virtualPos;
 26:     vec3 virtualPos2;
 27:     vec3 p1;
 28:     vec3 p2;
 29:     vec3 p3;
 30:     vec3 p4;
 31:     mat4x4 toWorld;
 32:     mat4x4 fromWorld;
 33: };
 34: 
 35: layout(std140, binding = 0)
 36: uniform PerView
 37: {
 38:     vec3 CameraLocation;
 39: };
 40: 
 41: 
 42: layout(std140, binding = 1)
 43: uniform Global
 44: {
 45:     SLEAardvarkRenderDemo_SLEUniform_Light Light;
 46: };
 47: 
 48: 
 49: layout(binding = 0)
 50: uniform sampler2D clearCoat;
 51: 
 52: layout(binding = 1)
 53: uniform sampler2D color;
 54: 
 55: layout(binding = 2)
 56: uniform sampler2D normal;
 57: 
 58: layout(binding = 3)
 59: uniform sampler2D wPos;
 60: 
 61: float SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(vec3 o, vec3 d, vec3 planeOrigin, vec3 planeNormal)
 62: {
 63:     return (dot(planeNormal, (planeOrigin - o)) / dot(planeNormal, d));
 64: }
 65: 
 66: 
 67: float SLEAardvarkRenderDemo_PBR_traceTriangle_3zyeXtvfi2Azicu3TsfTxQ(vec3 o, vec3 d, vec3 A, vec3 B, vec3 C)
 68: {
 69:     vec3 p = (o + (d * SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(o, d, A, normalize(cross((B - A), (C - B))))));
 70:     vec3 n2 = normalize(cross((C - B), (p - C)));
 71:     if(((dot(normalize(cross((B - A), (p - B))), n2) > 0.999) && (dot(n2, normalize(cross((A - C), (p - A)))) > 0.999)))
 72:     {
 73:         return 1.0;
 74:     }
 75:     else
 76:     {
 77:         return 0.0;
 78:     }
 79: }
 80: 
 81: 
 82: float SLEAardvarkRenderDemo_PBR_traceRectangle_OSdnOpnvoOU8tTrcn6w3JA(vec3 o, vec3 d, vec3 A, vec3 B, vec3 C, vec3 D)
 83: {
 84:     return max(SLEAardvarkRenderDemo_PBR_traceTriangle_3zyeXtvfi2Azicu3TsfTxQ(o, d, A, B, C), SLEAardvarkRenderDemo_PBR_traceTriangle_3zyeXtvfi2Azicu3TsfTxQ(o, d, C, D, A));
 85: }
 86: 
 87: 
 88: float SLEAardvarkRenderDemo_PBR_rectangleSolidAngle_yk0LnyTP2qLGhxTZr4oSHw(vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4)
 89: {
 90:     vec3 v1 = (p1 - wPos);
 91:     vec3 v2 = (p2 - wPos);
 92:     vec3 v3 = (p3 - wPos);
 93:     vec3 v4 = (p4 - wPos);
 94:     vec3 n1 = normalize(cross(v1, v2));
 95:     vec3 n2 = normalize(cross(v2, v3));
 96:     vec3 n3 = normalize(cross(v3, v4));
 97:     vec3 n4 = normalize(cross(v4, v1));
 98:     return ((((acos(dot((-n1), n2)) + acos(dot((-n2), n3))) + acos(dot((-n3), n4))) + acos(dot((-n4), n1))) - 6.283185307179586);
 99: }
100: 
101: 
102: float SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(vec3 lDir, vec3 ln, float cutOffInner, float cutOffOuter)
103: {
104:     return clamp(((dot(lDir, (-ln)) - cutOffOuter) / (cutOffInner - cutOffOuter)), 0, 1);
105: }
106: 
107: 
108: float SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceDisk_3Fm00pFf99CfR9hPbaGPImw(float radius)
109: {
110:     return (1.0 / (((radius * radius) * 3.141592653589793) * 3.141592653589793));
111: }
112: 
113: 
114: vec3 SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(vec3 n, vec3 v, float roughness)
115: {
116:     return normalize(mix(n, (-reflect(n, v)), (1.0 - roughness)));
117: }
118: 
119: 
120: vec3 SLEAardvarkRenderDemo_PBR_representativePointSpehre_OBJfz00NlqX4woYAFs00nVKQ(vec3 n, vec3 v, float roughness, vec3 lUnnorm, float radius)
121: {
122:     vec3 r = SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
123:     vec3 centerToRay = ((dot(lUnnorm, r) * r) - lUnnorm);
124:     return normalize((lUnnorm + (centerToRay * clamp((radius / length(centerToRay)), 0.0, 1.0))));
125: }
126: 
127: 
128: float helper1(float cosTheta, float sinSigmaSqr, float sinTheta)
129: {
130:     float x = sqrt(((1.0 / sinSigmaSqr) - 1.0));
131:     float y = ((-x) * (cosTheta / sinTheta));
132:     float sinThetaSqrtY = (sinTheta * sqrt((1.0 - (y * y))));
133:     return ((((cosTheta * acos(y)) - (x * sinThetaSqrtY)) * sinSigmaSqr) + atan((sinThetaSqrtY / x)));
134: }
135: 
136: 
137: tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(bool item0, vec3 item1, vec3 item2, float item3)
138: {
139:     tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double res;
140:     res.Item0 = item0;
141:     res.Item1 = item1;
142:     res.Item2 = item2;
143:     res.Item3 = item3;
144:     return res;
145: }
146: 
147: 
148: float SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(float dist)
149: {
150:     float d = max(dist, 0.01);
151:     return (1.0 / (d * d));
152: }
153: 
154: 
155: float SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceRectangle_CSsH8PY0AZ5Q9fWUXd5VQ(vec3 p1, vec3 p2, vec3 p4)
156: {
157:     return (1.0 / ((abs(length((p1 - p2))) * abs(length((p1 - p4)))) * 3.141592653589793));
158: }
159: 
160: 
161: vec3 SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(vec3 a, vec3 b, vec3 c)
162: {
163:     vec3 ab = (b - a);
164:     return (a + (clamp((dot((c - a), ab) / dot(ab, ab)), 0, 1) * ab));
165: }
166: 
167: 
168: float SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceSphere_UrX1ctp5f0mkaCN8lcAp4g(float radius)
169: {
170:     return (1.0 / ((((radius * radius) * 4.0) * 3.141592653589793) * 3.141592653589793));
171: }
172: 
173: 
174: float helper(float roughness)
175: {
176:     float r = (roughness + 1.0);
177:     return ((r * r) / 8.0);
178: }
179: 
180: 
181: float SLEAardvarkRenderDemo_BRDF_DistributionGGX_9rKdY223uBS_NUz8TxOtw(vec3 n, vec3 h, float roughness)
182: {
183:     float a = (roughness * roughness);
184:     float a2 = (a * a);
185:     float nDotH = max(0.0, dot(n, h));
186:     float deno = (((nDotH * nDotH) * (a2 - 1.0)) + 1.0);
187:     return (a2 / ((3.141592653589793 * deno) * deno));
188: }
189: 
190: 
191: vec3 SLEAardvarkRenderDemo_BRDF_fresnelSchlick_p2rPA4e4MFUMqGJ0C14Tng(vec3 f0, float cosTheta)
192: {
193:     return (f0 + ((1.0 - f0) * pow((1.0 - cosTheta), 5.0)));
194: }
195: 
196: 
197: vec3 SLEAardvarkRenderDemo_PBR_f0ClearCoatToSurface_Yt_fON0CP96EVMGbQBIX3w(vec3 f0Base)
198: {
199:     vec3 sqrootBase = sqrt(f0Base);
200:     vec3 baseIOR = ((1.0 + sqrootBase) / (1.0 - sqrootBase));
201:     return (((baseIOR - 1.5) / (baseIOR + 1.5)) * ((baseIOR - 1.5) / (baseIOR + 1.5)));
202: }
203: 
204: 
205: float SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(bool ilb, float nDotV, float roughness)
206: {
207:     float k = (ilb ? ((roughness * roughness) / 2.0) : helper(roughness));
208:     return (nDotV / ((nDotV * (1.0 - k)) + k));
209: }
210: 
211: 
212: float SLEAardvarkRenderDemo_BRDF_GeometrySmith_VXZTTP5v1N8YmBKR5NO9ZQ(bool ilb, vec3 n, vec3 v, vec3 l, float roughness)
213: {
214:     return (SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(ilb, max(0.0, dot(n, l)), roughness) * SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(ilb, max(0.0, dot(n, v)), roughness));
215: }
216: 
217: 
218: vec3 SLEAardvarkRenderDemo_PBR_representativePointRectangle_RhNDGSMx9lhdbAUaPy333A(vec3 r, vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4, vec3 ln, vec3 lightPosition)
219: {
220:     if((SLEAardvarkRenderDemo_PBR_traceRectangle_OSdnOpnvoOU8tTrcn6w3JA(wPos, r, p1, p2, p3, p4) > 0.0))
221:     {
222:         return r;
223:     }
224:     else
225:     {
226:         vec3 tracedPlane = (wPos + (r * SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(wPos, r, lightPosition, ln)));
227:         vec3 pc1 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p1, p2, tracedPlane);
228:         vec3 pc2 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p2, p3, tracedPlane);
229:         vec3 pc3 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p3, p4, tracedPlane);
230:         vec3 pc4 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p4, p1, tracedPlane);
231:         float d2 = distance(pc2, tracedPlane);
232:         float d3 = distance(pc3, tracedPlane);
233:         float minDist = distance(pc1, tracedPlane);
234:         vec3 p = pc1;
235:         if((d2 < minDist))
236:         {
237:             minDist = d2;
238:             p = pc2;
239:         }
240:         if((d3 < minDist))
241:         {
242:             minDist = d3;
243:             p = pc3;
244:         }
245:         if((distance(pc4, tracedPlane) < minDist))
246:         {
247:             p = pc4;
248:         }
249:         return normalize((p - wPos));
250:     }
251: }
252: 
253: 
254: float SLEAardvarkRenderDemo_PBR_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(float cosTheta, float sinSigmaSqr)
255: {
256:     float sinTheta = sqrt((1.0 - (cosTheta * cosTheta)));
257:     return max(0.0, (((cosTheta * cosTheta) > sinSigmaSqr) ? ((3.141592653589793 * sinSigmaSqr) * clamp(cosTheta, 0.0, 1.0)) : helper1(cosTheta, sinSigmaSqr, sinTheta)));
258: }
259: 
260: 
261: float SLEAardvarkRenderDemo_PBR_attenuationSphere_Wj2p65IzIRidr79fESSIcg(vec3 lUnnorm, float radius, vec3 n, vec3 lDir)
262: {
263:     return SLEAardvarkRenderDemo_PBR_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(clamp(dot(n, lDir), -0.999, 0.999), min(0.9999, ((radius * radius) / dot(lUnnorm, lUnnorm))));
264: }
265: 
266: 
267: float SLEAardvarkRenderDemo_PBR_attenuationDisk_U9LOD_bTSjagdDPGUR_Y5Q(vec3 lUnnorm, float radius, vec3 n, vec3 lDir, vec3 ln)
268: {
269:     float radius2 = (radius * radius);
270:     return (SLEAardvarkRenderDemo_PBR_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(clamp(dot(n, lDir), -0.999, 0.999), (radius2 / (radius2 + max(radius2, dot(lUnnorm, lUnnorm))))) * clamp(dot(ln, (-lDir)), 0, 1));
271: }
272: 
273: 
274: float SLEAardvarkRenderDemo_PBR_attenuationRectangle_rv8niFPySJx9fZLgTLeI9A(vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4, vec3 lUnnorm, vec3 ln, vec3 n)
275: {
276:     if((dot((-lUnnorm), ln) > 0.0))
277:     {
278:         return ((max(0.0, SLEAardvarkRenderDemo_PBR_rectangleSolidAngle_yk0LnyTP2qLGhxTZr4oSHw(wPos, p1, p2, p3, p4)) * 0.2) * ((((clamp(dot(n, normalize(lUnnorm)), 0, 1) + clamp(dot(n, normalize((p1 - wPos))), 0, 1)) + clamp(dot(n, normalize((p2 - wPos))), 0, 1)) + clamp(dot(n, normalize((p3 - wPos))), 0, 1)) + clamp(dot(n, normalize((p4 - wPos))), 0, 1)));
279:     }
280:     else
281:     {
282:         return 0.0;
283:     }
284: }
285: 
286: 
287: vec3 SLEAardvarkRenderDemo_PBR_representativePointDisk_2JPHvvLUgcbUkMatH00ra00Q(vec3 r, vec3 wPos, float radius, vec3 ln, vec3 lightPosition, vec3 lUnnorm)
288: {
289:     vec3 centerToRay = ((wPos + (r * SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(wPos, r, lightPosition, ln))) - lightPosition);
290:     return normalize((lUnnorm + (centerToRay * clamp((radius / length(centerToRay)), 0, 1))));
291: }
292: 
293: 
294: tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double SLEAardvarkRenderDemo_PBR_getLightParams_W004900tZOOSxYNA8ygbu8uA(SLEAardvarkRenderDemo_SLEUniform_Light light, vec3 wPos, vec3 n, vec3 v, float roughness)
295: {
296:     if((light.lightType == 0))
297:     {
298:         return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(false, vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), 1.0);
299:     }
300:     else
301:     {
302:         if((light.lightType == 1))
303:         {
304:             return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, normalize((-light.lightDirection.xyz)), light.color, 1.0);
305:         }
306:         else
307:         {
308:             if((light.lightType == 2))
309:             {
310:                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, normalize((light.lightPosition.xyz - wPos)), ((light.color * SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))) * 0.07957747154594767), 1.0);
311:             }
312:             else
313:             {
314:                 if((light.lightType == 3))
315:                 {
316:                     vec3 lDir = normalize((light.lightPosition.xyz - wPos));
317:                     return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, lDir, (((light.color * SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(lDir, normalize(light.lightDirection.xyz), light.cutOffInner, light.cutOffOuter)) * SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))) * 0.3183098861837907), 1.0);
318:                 }
319:                 else
320:                 {
321:                     if((light.lightType == 4))
322:                     {
323:                         vec3 lUnnorm = (light.lightPosition.xyz - wPos);
324:                         return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, SLEAardvarkRenderDemo_PBR_representativePointSpehre_OBJfz00NlqX4woYAFs00nVKQ(n, v, roughness, lUnnorm, light.radius), ((light.color * SLEAardvarkRenderDemo_PBR_attenuationSphere_Wj2p65IzIRidr79fESSIcg(lUnnorm, light.radius, n, normalize(lUnnorm))) * SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceSphere_UrX1ctp5f0mkaCN8lcAp4g(light.radius)), 1.0);
325:                     }
326:                     else
327:                     {
328:                         if((light.lightType == 5))
329:                         {
330:                             vec3 lUnnorm1 = (light.lightPosition.xyz - wPos);
331:                             vec3 ln = normalize(light.lightDirection.xyz);
332:                             vec3 r = SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
333:                             return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, SLEAardvarkRenderDemo_PBR_representativePointDisk_2JPHvvLUgcbUkMatH00ra00Q(r, wPos, light.radius, ln, light.lightPosition.xyz, lUnnorm1), (((light.color * SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize((light.virtualPos.xyz - wPos)), ln, light.cutOffInner, light.cutOffOuter)) * SLEAardvarkRenderDemo_PBR_attenuationDisk_U9LOD_bTSjagdDPGUR_Y5Q(lUnnorm1, light.radius, n, normalize(lUnnorm1), ln)) * SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceDisk_3Fm00pFf99CfR9hPbaGPImw(light.radius)), clamp(abs(dot(ln, r)), 0, 1));
334:                         }
335:                         else
336:                         {
337:                             if((light.lightType == 6))
338:                             {
339:                                 vec3 ln1 = normalize(light.lightDirection.xyz);
340:                                 vec4 d1 = (vec4(normalize((light.virtualPos.xyz - wPos)), 0.0) * light.fromWorld);
341:                                 vec4 d3 = (vec4(normalize((light.virtualPos2.xyz - wPos)), 0.0) * light.fromWorld);
342:                                 vec3 r1 = SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
343:                                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, SLEAardvarkRenderDemo_PBR_representativePointRectangle_RhNDGSMx9lhdbAUaPy333A(r1, wPos, light.p1, light.p2, light.p3, light.p4, ln1, light.lightPosition.xyz), (((light.color * (SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize(vec3(d1.x, d1.y, 0.0)), vec3(0.0, 1.0, 0.0), light.cutOffInner, light.cutOffOuter) * SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize(vec3(0.0, d3.y, d3.z)), vec3(0.0, 1.0, 0.0), light.cutOffInner, light.cutOffOuter))) * SLEAardvarkRenderDemo_PBR_attenuationRectangle_rv8niFPySJx9fZLgTLeI9A(wPos, light.p1, light.p2, light.p3, light.p4, (light.lightPosition.xyz - wPos), ln1, n)) * SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceRectangle_CSsH8PY0AZ5Q9fWUXd5VQ(light.p1, light.p2, light.p4)), clamp(abs(dot(ln1, r1)), 0, 1));
344:                             }
345:                             else
346:                             {
347:                                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(false, vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), 1.0);
348:                             }
349:                         }
350:                     }
351:                 }
352:             }
353:         }
354:     }
355: }
356: 
357: 
358: vec3 SLEAardvarkRenderDemo_PBR_pbrDirect_bwqFUjv2IoJDhPzhH002SXQ(vec3 f0, float roughness, float metallic, vec3 albedo, vec4 wPos, vec3 v, vec3 n, float nDotV, SLEAardvarkRenderDemo_SLEUniform_Light light, float clearCoat, float clearCoatRoughness)
359: {
360:     tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double patternInput = SLEAardvarkRenderDemo_PBR_getLightParams_W004900tZOOSxYNA8ygbu8uA(light, wPos.xyz, n, v, roughness);
361:     if(patternInput.Item0)
362:     {
363:         vec3 h = normalize((v + patternInput.Item1));
364:         float hDotV = max(0.0, dot(h, v));
365:         vec3 kS = SLEAardvarkRenderDemo_BRDF_fresnelSchlick_p2rPA4e4MFUMqGJ0C14Tng(f0, hDotV);
366:         float nDotL = max(0.0, dot(n, patternInput.Item1));
367:         vec3 diffuse = ((((1.0 - metallic) * (vec3(1.0, 1.0, 1.0) - kS)) * albedo) / 3.141592653589793);
368:         float denominator = max(0.001, ((4.0 * nDotV) * nDotL));
369:         vec3 specular = (((SLEAardvarkRenderDemo_BRDF_DistributionGGX_9rKdY223uBS_NUz8TxOtw(n, h, roughness) * SLEAardvarkRenderDemo_BRDF_GeometrySmith_VXZTTP5v1N8YmBKR5NO9ZQ(false, n, v, patternInput.Item1, roughness)) * kS) / denominator);
370:         if((clearCoat == 0.0))
371:         {
372:             return (((diffuse + (specular * patternInput.Item3)) * patternInput.Item2) * nDotL);
373:         }
374:         else
375:         {
376:             vec3 clearCoatKS = (clearCoat * SLEAardvarkRenderDemo_BRDF_fresnelSchlick_p2rPA4e4MFUMqGJ0C14Tng(vec3(0.04, 0.04, 0.04), hDotV));
377:             return (((((diffuse + (specular * patternInput.Item3)) * (vec3(1.0, 1.0, 1.0) - clearCoatKS)) + (((SLEAardvarkRenderDemo_BRDF_DistributionGGX_9rKdY223uBS_NUz8TxOtw(n, h, clearCoatRoughness) * SLEAardvarkRenderDemo_BRDF_GeometrySmith_VXZTTP5v1N8YmBKR5NO9ZQ(false, n, v, patternInput.Item1, clearCoatRoughness)) * clearCoatKS) / denominator)) * patternInput.Item2) * nDotL);
378:         }
379:     }
380:     else
381:     {
382:         return vec3(0.0, 0.0, 0.0);
383:     }
384: }
385: 
386: 
387: 
388: #ifdef Vertex
389: layout(location = 0) in vec2 DiffuseColorCoordinates;
390: layout(location = 1) in vec4 Positions;
391: layout(location = 0) out vec2 fs_DiffuseColorCoordinates;
392: void main()
393: {
394:     fs_DiffuseColorCoordinates = DiffuseColorCoordinates;
395:     gl_Position = Positions;
396: }
397: 
398: #endif
399: 
400: 
401: 
402: #ifdef Fragment
403: 
404: vec3 SLEAardvarkRenderDemo_PBR_pBRLightning_UKa5xgHDwGxZ6400a9fstaw(float metallic, float roughness, vec3 albedo, vec3 n, vec4 wPos, float clearCoat, float clearCoatRoughness)
405: {
406:     vec3 v = normalize((CameraLocation - wPos.xyz));
407:     vec3 f0Base = mix(vec3(0.04, 0.04, 0.04), albedo, metallic);
408:     return SLEAardvarkRenderDemo_PBR_pbrDirect_bwqFUjv2IoJDhPzhH002SXQ(mix(f0Base, SLEAardvarkRenderDemo_PBR_f0ClearCoatToSurface_Yt_fON0CP96EVMGbQBIX3w(f0Base), clearCoat), roughness, metallic, albedo, wPos, v, n, max(0.0, dot(n, v)), Light, clearCoat, clearCoatRoughness);
409: }
410: 
411: layout(location = 0) in vec2 fs_DiffuseColorCoordinates;
412: layout(location = 0) out vec4 ColorsOut;
413: void main()
414: {
415:     vec4 albedo = texture(color, fs_DiffuseColorCoordinates);
416:     vec4 nr = texture(normal, fs_DiffuseColorCoordinates);
417:     vec2 cc = texture(clearCoat, fs_DiffuseColorCoordinates).xy;
418:     ColorsOut = vec4(((albedo.w < 0.0) ? vec3(0.0, 0.0, 0.0) : SLEAardvarkRenderDemo_PBR_pBRLightning_UKa5xgHDwGxZ6400a9fstaw(albedo.w, nr.w, vec4(albedo.xyz, 1.0).xyz, normalize(nr.xyz), texture(wPos, fs_DiffuseColorCoordinates), cc.x, cc.y)), 1.0);
419: }
420: 
421: #endif

 2: p1 [4.5, 6.57, 2.95] p2 [2.5, 6.57, 2.9499999999999997] p3 [2.5, 6.57, 3.05] p4 [4.5, 6.57, 3.0500000000000003]
 2: WARNING: load
 2: WARNING: load
 2: WARNING: load
 2: WARNING: load
 2: [GL] RenderObjects: +299/-0 (518ms)
 2: using optimized native program
 2: p1 [-1.9999999999999998, 6.57, -7.05] p2 [-4, 6.57, -7.05] p3 [-4, 6.57, -6.95] p4 [-1.9999999999999998, 6.57, -6.95]
 2: [GL] RenderObjects: +299/-0 (55ms)
 2: using optimized native program
 2: p1 [-1.9999999999999998, 6.57, 2.95] p2 [-4, 6.57, 2.9499999999999997] p3 [-4, 6.57, 3.05] p4 [-1.9999999999999998, 6.57, 3.0500000000000003]
 2: [GL] RenderObjects: +299/-0 (64ms)
 2: using optimized native program
 2: p1 [-7, 6.57, -1.0499999999999998] p2 [-9, 6.57, -1.0500000000000003] p3 [-9, 6.57, -0.9500000000000002] p4 [-7, 6.57, -0.9499999999999997]
 2: [GL] RenderObjects: +299/-0 (54ms)
 2: using optimized native program
 2: p1 [4.5, 6.57, -7.05] p2 [2.5, 6.57, -7.05] p3 [2.5, 6.57, -6.95] p4 [4.5, 6.57, -6.95]
 2: [GL] RenderObjects: +299/-0 (74ms)
 2: using optimized native program
 2: p1 [4.5, 6.57, 7.95] p2 [2.5, 6.57, 7.95] p3 [2.5, 6.57, 8.049999999999999] p4 [4.5, 6.57, 8.05]
 2: [GL] RenderObjects: +299/-0 (51ms)
 2: using optimized native program
 2: p1 [-1.9999999999999998, 6.57, 7.95] p2 [-4, 6.57, 7.95] p3 [-4, 6.57, 8.049999999999999] p4 [-1.9999999999999998, 6.57, 8.05]
 2: [GL] RenderObjects: +299/-0 (71ms)
 2: using optimized native program
 2: p1 [-1.9999999999999998, 6.57, -1.0499999999999998] p2 [-4, 6.57, -1.0500000000000003] p3 [-4, 6.57, -0.9500000000000002] p4 [-1.9999999999999998, 6.57, -0.9499999999999997]
 2: [GL] RenderObjects: +299/-0 (61ms)
 2: using optimized native program
 2: p1 [4.5, 6.57, -1.0499999999999998] p2 [2.5, 6.57, -1.0500000000000003] p3 [2.5, 6.57, -0.9500000000000002] p4 [4.5, 6.57, -0.9499999999999997]
 2: [GL] RenderObjects: +299/-0 (52ms)
 2: using optimized native program
 2: p1 [-7, 6.57, -7.05] p2 [-9, 6.57, -7.05] p3 [-9, 6.57, -6.95] p4 [-7, 6.57, -6.95]
 2: [GL] RenderObjects: +299/-0 (67ms)
 2: using optimized native program
 2: p1 [-7, 6.57, 2.95] p2 [-9, 6.57, 2.9499999999999997] p3 [-9, 6.57, 3.05] p4 [-7, 6.57, 3.0500000000000003]
 2: [GL] RenderObjects: +299/-0 (52ms)
 2: using optimized native program
 2: [GL] RenderObjects: +21/-1 (6409ms)
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: Compiling shader:
  1: #version 460
  2: #define __SHADER_STAGE__
  3: 
  4: 
  5: 
  6: 
  7: struct tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double
  8: {
  9:     bool Item0;
 10:     vec3 Item1;
 11:     vec3 Item2;
 12:     float Item3;
 13: };
 14: 
 15: struct SLEAardvarkRenderDemo_SLEUniform_Light
 16: {
 17:     int lightType;
 18:     vec4 lightPosition;
 19:     vec4 lightDirection;
 20:     vec3 color;
 21:     bool castsShadow;
 22:     float cutOffInner;
 23:     float cutOffOuter;
 24:     float radius;
 25:     vec3 virtualPos;
 26:     vec3 virtualPos2;
 27:     vec3 p1;
 28:     vec3 p2;
 29:     vec3 p3;
 30:     vec3 p4;
 31:     mat4x4 toWorld;
 32:     mat4x4 fromWorld;
 33: };
 34: 
 35: layout(std140, binding = 0)
 36: uniform PerView
 37: {
 38:     vec3 CameraLocation;
 39: };
 40: 
 41: 
 42: layout(std140, binding = 1)
 43: uniform Global
 44: {
 45:     SLEAardvarkRenderDemo_SLEUniform_Light Light;
 46: };
 47: 
 48: 
 49: layout(binding = 0)
 50: uniform sampler2D clearCoat;
 51: 
 52: layout(binding = 1)
 53: uniform sampler2D color;
 54: 
 55: layout(binding = 2)
 56: uniform sampler2D normal;
 57: 
 58: layout(binding = 3)
 59: uniform sampler2D wPos;
 60: 
 61: vec3 SLEAardvarkRenderDemo_PBR_f0ClearCoatToSurface_Yt_fON0CP96EVMGbQBIX3w(vec3 f0Base)
 62: {
 63:     vec3 sqrootBase = sqrt(f0Base);
 64:     vec3 baseIOR = ((1.0 + sqrootBase) / (1.0 - sqrootBase));
 65:     return (((baseIOR - 1.5) / (baseIOR + 1.5)) * ((baseIOR - 1.5) / (baseIOR + 1.5)));
 66: }
 67: 
 68: 
 69: vec3 SLEAardvarkRenderDemo_BRDF_fresnelSchlick_p2rPA4e4MFUMqGJ0C14Tng(vec3 f0, float cosTheta)
 70: {
 71:     return (f0 + ((1.0 - f0) * pow((1.0 - cosTheta), 5.0)));
 72: }
 73: 
 74: 
 75: float SLEAardvarkRenderDemo_BRDF_DistributionGGX_9rKdY223uBS_NUz8TxOtw(vec3 n, vec3 h, float roughness)
 76: {
 77:     float a = (roughness * roughness);
 78:     float a2 = (a * a);
 79:     float nDotH = max(0.0, dot(n, h));
 80:     float deno = (((nDotH * nDotH) * (a2 - 1.0)) + 1.0);
 81:     return (a2 / ((3.141592653589793 * deno) * deno));
 82: }
 83: 
 84: 
 85: vec3 SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(vec3 n, vec3 v, float roughness)
 86: {
 87:     return normalize(mix(n, (-reflect(n, v)), (1.0 - roughness)));
 88: }
 89: 
 90: 
 91: tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(bool item0, vec3 item1, vec3 item2, float item3)
 92: {
 93:     tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double res;
 94:     res.Item0 = item0;
 95:     res.Item1 = item1;
 96:     res.Item2 = item2;
 97:     res.Item3 = item3;
 98:     return res;
 99: }
100: 
101: 
102: float SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(vec3 o, vec3 d, vec3 planeOrigin, vec3 planeNormal)
103: {
104:     return (dot(planeNormal, (planeOrigin - o)) / dot(planeNormal, d));
105: }
106: 
107: 
108: vec3 SLEAardvarkRenderDemo_PBR_representativePointDisk_2JPHvvLUgcbUkMatH00ra00Q(vec3 r, vec3 wPos, float radius, vec3 ln, vec3 lightPosition, vec3 lUnnorm)
109: {
110:     vec3 centerToRay = ((wPos + (r * SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(wPos, r, lightPosition, ln))) - lightPosition);
111:     return normalize((lUnnorm + (centerToRay * clamp((radius / length(centerToRay)), 0, 1))));
112: }
113: 
114: 
115: vec3 SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(vec3 a, vec3 b, vec3 c)
116: {
117:     vec3 ab = (b - a);
118:     return (a + (clamp((dot((c - a), ab) / dot(ab, ab)), 0, 1) * ab));
119: }
120: 
121: 
122: float SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceRectangle_CSsH8PY0AZ5Q9fWUXd5VQ(vec3 p1, vec3 p2, vec3 p4)
123: {
124:     return (1.0 / ((abs(length((p1 - p2))) * abs(length((p1 - p4)))) * 3.141592653589793));
125: }
126: 
127: 
128: float SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(float dist)
129: {
130:     float d = max(dist, 0.01);
131:     return (1.0 / (d * d));
132: }
133: 
134: 
135: float SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceSphere_UrX1ctp5f0mkaCN8lcAp4g(float radius)
136: {
137:     return (1.0 / ((((radius * radius) * 4.0) * 3.141592653589793) * 3.141592653589793));
138: }
139: 
140: 
141: float SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(vec3 lDir, vec3 ln, float cutOffInner, float cutOffOuter)
142: {
143:     return clamp(((dot(lDir, (-ln)) - cutOffOuter) / (cutOffInner - cutOffOuter)), 0, 1);
144: }
145: 
146: 
147: float SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceDisk_3Fm00pFf99CfR9hPbaGPImw(float radius)
148: {
149:     return (1.0 / (((radius * radius) * 3.141592653589793) * 3.141592653589793));
150: }
151: 
152: 
153: float helper1(float cosTheta, float sinSigmaSqr, float sinTheta)
154: {
155:     float x = sqrt(((1.0 / sinSigmaSqr) - 1.0));
156:     float y = ((-x) * (cosTheta / sinTheta));
157:     float sinThetaSqrtY = (sinTheta * sqrt((1.0 - (y * y))));
158:     return ((((cosTheta * acos(y)) - (x * sinThetaSqrtY)) * sinSigmaSqr) + atan((sinThetaSqrtY / x)));
159: }
160: 
161: 
162: float SLEAardvarkRenderDemo_PBR_rectangleSolidAngle_yk0LnyTP2qLGhxTZr4oSHw(vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4)
163: {
164:     vec3 v1 = (p1 - wPos);
165:     vec3 v2 = (p2 - wPos);
166:     vec3 v3 = (p3 - wPos);
167:     vec3 v4 = (p4 - wPos);
168:     vec3 n1 = normalize(cross(v1, v2));
169:     vec3 n2 = normalize(cross(v2, v3));
170:     vec3 n3 = normalize(cross(v3, v4));
171:     vec3 n4 = normalize(cross(v4, v1));
172:     return ((((acos(dot((-n1), n2)) + acos(dot((-n2), n3))) + acos(dot((-n3), n4))) + acos(dot((-n4), n1))) - 6.283185307179586);
173: }
174: 
175: 
176: float helper(float roughness)
177: {
178:     float r = (roughness + 1.0);
179:     return ((r * r) / 8.0);
180: }
181: 
182: 
183: float SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(bool ilb, float nDotV, float roughness)
184: {
185:     float k = (ilb ? ((roughness * roughness) / 2.0) : helper(roughness));
186:     return (nDotV / ((nDotV * (1.0 - k)) + k));
187: }
188: 
189: 
190: float SLEAardvarkRenderDemo_BRDF_GeometrySmith_VXZTTP5v1N8YmBKR5NO9ZQ(bool ilb, vec3 n, vec3 v, vec3 l, float roughness)
191: {
192:     return (SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(ilb, max(0.0, dot(n, l)), roughness) * SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(ilb, max(0.0, dot(n, v)), roughness));
193: }
194: 
195: 
196: float SLEAardvarkRenderDemo_PBR_attenuationRectangle_rv8niFPySJx9fZLgTLeI9A(vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4, vec3 lUnnorm, vec3 ln, vec3 n)
197: {
198:     if((dot((-lUnnorm), ln) > 0.0))
199:     {
200:         return ((max(0.0, SLEAardvarkRenderDemo_PBR_rectangleSolidAngle_yk0LnyTP2qLGhxTZr4oSHw(wPos, p1, p2, p3, p4)) * 0.2) * ((((clamp(dot(n, normalize(lUnnorm)), 0, 1) + clamp(dot(n, normalize((p1 - wPos))), 0, 1)) + clamp(dot(n, normalize((p2 - wPos))), 0, 1)) + clamp(dot(n, normalize((p3 - wPos))), 0, 1)) + clamp(dot(n, normalize((p4 - wPos))), 0, 1)));
201:     }
202:     else
203:     {
204:         return 0.0;
205:     }
206: }
207: 
208: 
209: float SLEAardvarkRenderDemo_PBR_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(float cosTheta, float sinSigmaSqr)
210: {
211:     float sinTheta = sqrt((1.0 - (cosTheta * cosTheta)));
212:     return max(0.0, (((cosTheta * cosTheta) > sinSigmaSqr) ? ((3.141592653589793 * sinSigmaSqr) * clamp(cosTheta, 0.0, 1.0)) : helper1(cosTheta, sinSigmaSqr, sinTheta)));
213: }
214: 
215: 
216: float SLEAardvarkRenderDemo_PBR_attenuationSphere_Wj2p65IzIRidr79fESSIcg(vec3 lUnnorm, float radius, vec3 n, vec3 lDir)
217: {
218:     return SLEAardvarkRenderDemo_PBR_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(clamp(dot(n, lDir), -0.999, 0.999), min(0.9999, ((radius * radius) / dot(lUnnorm, lUnnorm))));
219: }
220: 
221: 
222: float SLEAardvarkRenderDemo_PBR_attenuationDisk_U9LOD_bTSjagdDPGUR_Y5Q(vec3 lUnnorm, float radius, vec3 n, vec3 lDir, vec3 ln)
223: {
224:     float radius2 = (radius * radius);
225:     return (SLEAardvarkRenderDemo_PBR_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(clamp(dot(n, lDir), -0.999, 0.999), (radius2 / (radius2 + max(radius2, dot(lUnnorm, lUnnorm))))) * clamp(dot(ln, (-lDir)), 0, 1));
226: }
227: 
228: 
229: float SLEAardvarkRenderDemo_PBR_traceTriangle_3zyeXtvfi2Azicu3TsfTxQ(vec3 o, vec3 d, vec3 A, vec3 B, vec3 C)
230: {
231:     vec3 p = (o + (d * SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(o, d, A, normalize(cross((B - A), (C - B))))));
232:     vec3 n2 = normalize(cross((C - B), (p - C)));
233:     if(((dot(normalize(cross((B - A), (p - B))), n2) > 0.999) && (dot(n2, normalize(cross((A - C), (p - A)))) > 0.999)))
234:     {
235:         return 1.0;
236:     }
237:     else
238:     {
239:         return 0.0;
240:     }
241: }
242: 
243: 
244: float SLEAardvarkRenderDemo_PBR_traceRectangle_OSdnOpnvoOU8tTrcn6w3JA(vec3 o, vec3 d, vec3 A, vec3 B, vec3 C, vec3 D)
245: {
246:     return max(SLEAardvarkRenderDemo_PBR_traceTriangle_3zyeXtvfi2Azicu3TsfTxQ(o, d, A, B, C), SLEAardvarkRenderDemo_PBR_traceTriangle_3zyeXtvfi2Azicu3TsfTxQ(o, d, C, D, A));
247: }
248: 
249: 
250: vec3 SLEAardvarkRenderDemo_PBR_representativePointRectangle_RhNDGSMx9lhdbAUaPy333A(vec3 r, vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4, vec3 ln, vec3 lightPosition)
251: {
252:     if((SLEAardvarkRenderDemo_PBR_traceRectangle_OSdnOpnvoOU8tTrcn6w3JA(wPos, r, p1, p2, p3, p4) > 0.0))
253:     {
254:         return r;
255:     }
256:     else
257:     {
258:         vec3 tracedPlane = (wPos + (r * SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(wPos, r, lightPosition, ln)));
259:         vec3 pc1 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p1, p2, tracedPlane);
260:         vec3 pc2 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p2, p3, tracedPlane);
261:         vec3 pc3 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p3, p4, tracedPlane);
262:         vec3 pc4 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p4, p1, tracedPlane);
263:         float d2 = distance(pc2, tracedPlane);
264:         float d3 = distance(pc3, tracedPlane);
265:         float minDist = distance(pc1, tracedPlane);
266:         vec3 p = pc1;
267:         if((d2 < minDist))
268:         {
269:             minDist = d2;
270:             p = pc2;
271:         }
272:         if((d3 < minDist))
273:         {
274:             minDist = d3;
275:             p = pc3;
276:         }
277:         if((distance(pc4, tracedPlane) < minDist))
278:         {
279:             p = pc4;
280:         }
281:         return normalize((p - wPos));
282:     }
283: }
284: 
285: 
286: vec3 SLEAardvarkRenderDemo_PBR_representativePointSpehre_OBJfz00NlqX4woYAFs00nVKQ(vec3 n, vec3 v, float roughness, vec3 lUnnorm, float radius)
287: {
288:     vec3 r = SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
289:     vec3 centerToRay = ((dot(lUnnorm, r) * r) - lUnnorm);
290:     return normalize((lUnnorm + (centerToRay * clamp((radius / length(centerToRay)), 0.0, 1.0))));
291: }
292: 
293: 
294: tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double SLEAardvarkRenderDemo_PBR_getLightParams_W004900tZOOSxYNA8ygbu8uA(SLEAardvarkRenderDemo_SLEUniform_Light light, vec3 wPos, vec3 n, vec3 v, float roughness)
295: {
296:     if((light.lightType == 0))
297:     {
298:         return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(false, vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), 1.0);
299:     }
300:     else
301:     {
302:         if((light.lightType == 1))
303:         {
304:             return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, normalize((-light.lightDirection.xyz)), light.color, 1.0);
305:         }
306:         else
307:         {
308:             if((light.lightType == 2))
309:             {
310:                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, normalize((light.lightPosition.xyz - wPos)), ((light.color * SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))) * 0.07957747154594767), 1.0);
311:             }
312:             else
313:             {
314:                 if((light.lightType == 3))
315:                 {
316:                     vec3 lDir = normalize((light.lightPosition.xyz - wPos));
317:                     return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, lDir, (((light.color * SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(lDir, normalize(light.lightDirection.xyz), light.cutOffInner, light.cutOffOuter)) * SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))) * 0.3183098861837907), 1.0);
318:                 }
319:                 else
320:                 {
321:                     if((light.lightType == 4))
322:                     {
323:                         vec3 lUnnorm = (light.lightPosition.xyz - wPos);
324:                         return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, SLEAardvarkRenderDemo_PBR_representativePointSpehre_OBJfz00NlqX4woYAFs00nVKQ(n, v, roughness, lUnnorm, light.radius), ((light.color * SLEAardvarkRenderDemo_PBR_attenuationSphere_Wj2p65IzIRidr79fESSIcg(lUnnorm, light.radius, n, normalize(lUnnorm))) * SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceSphere_UrX1ctp5f0mkaCN8lcAp4g(light.radius)), 1.0);
325:                     }
326:                     else
327:                     {
328:                         if((light.lightType == 5))
329:                         {
330:                             vec3 lUnnorm1 = (light.lightPosition.xyz - wPos);
331:                             vec3 ln = normalize(light.lightDirection.xyz);
332:                             vec3 r = SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
333:                             return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, SLEAardvarkRenderDemo_PBR_representativePointDisk_2JPHvvLUgcbUkMatH00ra00Q(r, wPos, light.radius, ln, light.lightPosition.xyz, lUnnorm1), (((light.color * SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize((light.virtualPos.xyz - wPos)), ln, light.cutOffInner, light.cutOffOuter)) * SLEAardvarkRenderDemo_PBR_attenuationDisk_U9LOD_bTSjagdDPGUR_Y5Q(lUnnorm1, light.radius, n, normalize(lUnnorm1), ln)) * SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceDisk_3Fm00pFf99CfR9hPbaGPImw(light.radius)), clamp(abs(dot(ln, r)), 0, 1));
334:                         }
335:                         else
336:                         {
337:                             if((light.lightType == 6))
338:                             {
339:                                 vec3 ln1 = normalize(light.lightDirection.xyz);
340:                                 vec4 d1 = (vec4(normalize((light.virtualPos.xyz - wPos)), 0.0) * light.fromWorld);
341:                                 vec4 d3 = (vec4(normalize((light.virtualPos2.xyz - wPos)), 0.0) * light.fromWorld);
342:                                 vec3 r1 = SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
343:                                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, SLEAardvarkRenderDemo_PBR_representativePointRectangle_RhNDGSMx9lhdbAUaPy333A(r1, wPos, light.p1, light.p2, light.p3, light.p4, ln1, light.lightPosition.xyz), (((light.color * (SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize(vec3(d1.x, d1.y, 0.0)), vec3(0.0, 1.0, 0.0), light.cutOffInner, light.cutOffOuter) * SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize(vec3(0.0, d3.y, d3.z)), vec3(0.0, 1.0, 0.0), light.cutOffInner, light.cutOffOuter))) * SLEAardvarkRenderDemo_PBR_attenuationRectangle_rv8niFPySJx9fZLgTLeI9A(wPos, light.p1, light.p2, light.p3, light.p4, (light.lightPosition.xyz - wPos), ln1, n)) * SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceRectangle_CSsH8PY0AZ5Q9fWUXd5VQ(light.p1, light.p2, light.p4)), clamp(abs(dot(ln1, r1)), 0, 1));
344:                             }
345:                             else
346:                             {
347:                                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(false, vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), 1.0);
348:                             }
349:                         }
350:                     }
351:                 }
352:             }
353:         }
354:     }
355: }
356: 
357: 
358: vec3 SLEAardvarkRenderDemo_PBR_pbrDirect_bwqFUjv2IoJDhPzhH002SXQ(vec3 f0, float roughness, float metallic, vec3 albedo, vec4 wPos, vec3 v, vec3 n, float nDotV, SLEAardvarkRenderDemo_SLEUniform_Light light, float clearCoat, float clearCoatRoughness)
359: {
360:     tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double patternInput = SLEAardvarkRenderDemo_PBR_getLightParams_W004900tZOOSxYNA8ygbu8uA(light, wPos.xyz, n, v, roughness);
361:     if(patternInput.Item0)
362:     {
363:         vec3 h = normalize((v + patternInput.Item1));
364:         float hDotV = max(0.0, dot(h, v));
365:         vec3 kS = SLEAardvarkRenderDemo_BRDF_fresnelSchlick_p2rPA4e4MFUMqGJ0C14Tng(f0, hDotV);
366:         float nDotL = max(0.0, dot(n, patternInput.Item1));
367:         vec3 diffuse = ((((1.0 - metallic) * (vec3(1.0, 1.0, 1.0) - kS)) * albedo) / 3.141592653589793);
368:         float denominator = max(0.001, ((4.0 * nDotV) * nDotL));
369:         vec3 specular = (((SLEAardvarkRenderDemo_BRDF_DistributionGGX_9rKdY223uBS_NUz8TxOtw(n, h, roughness) * SLEAardvarkRenderDemo_BRDF_GeometrySmith_VXZTTP5v1N8YmBKR5NO9ZQ(false, n, v, patternInput.Item1, roughness)) * kS) / denominator);
370:         if((clearCoat == 0.0))
371:         {
372:             return (((diffuse + (specular * patternInput.Item3)) * patternInput.Item2) * nDotL);
373:         }
374:         else
375:         {
376:             vec3 clearCoatKS = (clearCoat * SLEAardvarkRenderDemo_BRDF_fresnelSchlick_p2rPA4e4MFUMqGJ0C14Tng(vec3(0.04, 0.04, 0.04), hDotV));
377:             return (((((diffuse + (specular * patternInput.Item3)) * (vec3(1.0, 1.0, 1.0) - clearCoatKS)) + (((SLEAardvarkRenderDemo_BRDF_DistributionGGX_9rKdY223uBS_NUz8TxOtw(n, h, clearCoatRoughness) * SLEAardvarkRenderDemo_BRDF_GeometrySmith_VXZTTP5v1N8YmBKR5NO9ZQ(false, n, v, patternInput.Item1, clearCoatRoughness)) * clearCoatKS) / denominator)) * patternInput.Item2) * nDotL);
378:         }
379:     }
380:     else
381:     {
382:         return vec3(0.0, 0.0, 0.0);
383:     }
384: }
385: 
386: 
387: 
388: #ifdef Vertex
389: layout(location = 0) in vec2 DiffuseColorCoordinates;
390: layout(location = 1) in vec4 Positions;
391: layout(location = 0) out vec2 fs_DiffuseColorCoordinates;
392: void main()
393: {
394:     fs_DiffuseColorCoordinates = DiffuseColorCoordinates;
395:     gl_Position = Positions;
396: }
397: 
398: #endif
399: 
400: 
401: 
402: #ifdef Fragment
403: 
404: vec3 SLEAardvarkRenderDemo_PBR_pBRLightning_UKa5xgHDwGxZ6400a9fstaw(float metallic, float roughness, vec3 albedo, vec3 n, vec4 wPos, float clearCoat, float clearCoatRoughness)
405: {
406:     vec3 v = normalize((CameraLocation - wPos.xyz));
407:     vec3 f0Base = mix(vec3(0.04, 0.04, 0.04), albedo, metallic);
408:     return SLEAardvarkRenderDemo_PBR_pbrDirect_bwqFUjv2IoJDhPzhH002SXQ(mix(f0Base, SLEAardvarkRenderDemo_PBR_f0ClearCoatToSurface_Yt_fON0CP96EVMGbQBIX3w(f0Base), clearCoat), roughness, metallic, albedo, wPos, v, n, max(0.0, dot(n, v)), Light, clearCoat, clearCoatRoughness);
409: }
410: 
411: layout(location = 0) in vec2 fs_DiffuseColorCoordinates;
412: layout(location = 0) out vec4 ColorsOut;
413: void main()
414: {
415:     vec4 albedo = texture(color, fs_DiffuseColorCoordinates);
416:     vec4 nr = texture(normal, fs_DiffuseColorCoordinates);
417:     vec2 cc = texture(clearCoat, fs_DiffuseColorCoordinates).xy;
418:     ColorsOut = vec4(((albedo.w < 0.0) ? vec3(0.0, 0.0, 0.0) : SLEAardvarkRenderDemo_PBR_pBRLightning_UKa5xgHDwGxZ6400a9fstaw(albedo.w, nr.w, vec4(albedo.xyz, 1.0).xyz, normalize(nr.xyz), texture(wPos, fs_DiffuseColorCoordinates), cc.x, cc.y)), 1.0);
419: }
420: 
421: #endif

 2: texture created
 2: result created
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: [GL] RenderObjects: +300/-0 (4924ms)
 2: using optimized native program
 2: texture created
 2: texture created
 2: Compiling shader:
  1: #version 460
  2: #define __SHADER_STAGE__
  3: 
  4: 
  5: 
  6: 
  7: struct tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double
  8: {
  9:     bool Item0;
 10:     vec3 Item1;
 11:     vec3 Item2;
 12:     float Item3;
 13: };
 14: 
 15: struct SLEAardvarkRenderDemo_SLEUniform_Light
 16: {
 17:     int lightType;
 18:     vec4 lightPosition;
 19:     vec4 lightDirection;
 20:     vec3 color;
 21:     bool castsShadow;
 22:     float cutOffInner;
 23:     float cutOffOuter;
 24:     float radius;
 25:     vec3 virtualPos;
 26:     vec3 virtualPos2;
 27:     vec3 p1;
 28:     vec3 p2;
 29:     vec3 p3;
 30:     vec3 p4;
 31:     mat4x4 toWorld;
 32:     mat4x4 fromWorld;
 33: };
 34: 
 35: layout(std140, binding = 0)
 36: uniform PerView
 37: {
 38:     vec3 CameraLocation;
 39: };
 40: 
 41: 
 42: layout(std140, binding = 1)
 43: uniform Global
 44: {
 45:     SLEAardvarkRenderDemo_SLEUniform_Light Light;
 46:     mat4x4 LightViewMatrix;
 47: };
 48: 
 49: 
 50: layout(binding = 0)
 51: uniform sampler2D clearCoat;
 52: 
 53: layout(binding = 1)
 54: uniform sampler2D color;
 55: 
 56: layout(binding = 2)
 57: uniform sampler2D normal;
 58: 
 59: layout(binding = 3)
 60: uniform sampler2DShadow samplerShadowMap;
 61: 
 62: layout(binding = 4)
 63: uniform sampler2D samplerShadowMapTex;
 64: 
 65: layout(binding = 5)
 66: uniform sampler2D wPos;
 67: 
 68: vec3 SLEAardvarkRenderDemo_PBR_f0ClearCoatToSurface_Yt_fON0CP96EVMGbQBIX3w(vec3 f0Base)
 69: {
 70:     vec3 sqrootBase = sqrt(f0Base);
 71:     vec3 baseIOR = ((1.0 + sqrootBase) / (1.0 - sqrootBase));
 72:     return (((baseIOR - 1.5) / (baseIOR + 1.5)) * ((baseIOR - 1.5) / (baseIOR + 1.5)));
 73: }
 74: 
 75: 
 76: float helper(float roughness)
 77: {
 78:     float r = (roughness + 1.0);
 79:     return ((r * r) / 8.0);
 80: }
 81: 
 82: 
 83: vec3 SLEAardvarkRenderDemo_BRDF_fresnelSchlick_p2rPA4e4MFUMqGJ0C14Tng(vec3 f0, float cosTheta)
 84: {
 85:     return (f0 + ((1.0 - f0) * pow((1.0 - cosTheta), 5.0)));
 86: }
 87: 
 88: 
 89: float SLEAardvarkRenderDemo_BRDF_DistributionGGX_9rKdY223uBS_NUz8TxOtw(vec3 n, vec3 h, float roughness)
 90: {
 91:     float a = (roughness * roughness);
 92:     float a2 = (a * a);
 93:     float nDotH = max(0.0, dot(n, h));
 94:     float deno = (((nDotH * nDotH) * (a2 - 1.0)) + 1.0);
 95:     return (a2 / ((3.141592653589793 * deno) * deno));
 96: }
 97: 
 98: 
 99: float helper1(float cosTheta, float sinSigmaSqr, float sinTheta)
100: {
101:     float x = sqrt(((1.0 / sinSigmaSqr) - 1.0));
102:     float y = ((-x) * (cosTheta / sinTheta));
103:     float sinThetaSqrtY = (sinTheta * sqrt((1.0 - (y * y))));
104:     return ((((cosTheta * acos(y)) - (x * sinThetaSqrtY)) * sinSigmaSqr) + atan((sinThetaSqrtY / x)));
105: }
106: 
107: 
108: float SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceRectangle_CSsH8PY0AZ5Q9fWUXd5VQ(vec3 p1, vec3 p2, vec3 p4)
109: {
110:     return (1.0 / ((abs(length((p1 - p2))) * abs(length((p1 - p4)))) * 3.141592653589793));
111: }
112: 
113: 
114: float SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceDisk_3Fm00pFf99CfR9hPbaGPImw(float radius)
115: {
116:     return (1.0 / (((radius * radius) * 3.141592653589793) * 3.141592653589793));
117: }
118: 
119: 
120: float SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(float dist)
121: {
122:     float d = max(dist, 0.01);
123:     return (1.0 / (d * d));
124: }
125: 
126: 
127: float SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(vec3 lDir, vec3 ln, float cutOffInner, float cutOffOuter)
128: {
129:     return clamp(((dot(lDir, (-ln)) - cutOffOuter) / (cutOffInner - cutOffOuter)), 0, 1);
130: }
131: 
132: 
133: float SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(vec3 o, vec3 d, vec3 planeOrigin, vec3 planeNormal)
134: {
135:     return (dot(planeNormal, (planeOrigin - o)) / dot(planeNormal, d));
136: }
137: 
138: 
139: vec3 SLEAardvarkRenderDemo_PBR_representativePointDisk_2JPHvvLUgcbUkMatH00ra00Q(vec3 r, vec3 wPos, float radius, vec3 ln, vec3 lightPosition, vec3 lUnnorm)
140: {
141:     vec3 centerToRay = ((wPos + (r * SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(wPos, r, lightPosition, ln))) - lightPosition);
142:     return normalize((lUnnorm + (centerToRay * clamp((radius / length(centerToRay)), 0, 1))));
143: }
144: 
145: 
146: float SLEAardvarkRenderDemo_PBR_traceTriangle_3zyeXtvfi2Azicu3TsfTxQ(vec3 o, vec3 d, vec3 A, vec3 B, vec3 C)
147: {
148:     vec3 p = (o + (d * SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(o, d, A, normalize(cross((B - A), (C - B))))));
149:     vec3 n2 = normalize(cross((C - B), (p - C)));
150:     if(((dot(normalize(cross((B - A), (p - B))), n2) > 0.999) && (dot(n2, normalize(cross((A - C), (p - A)))) > 0.999)))
151:     {
152:         return 1.0;
153:     }
154:     else
155:     {
156:         return 0.0;
157:     }
158: }
159: 
160: 
161: float SLEAardvarkRenderDemo_PBR_traceRectangle_OSdnOpnvoOU8tTrcn6w3JA(vec3 o, vec3 d, vec3 A, vec3 B, vec3 C, vec3 D)
162: {
163:     return max(SLEAardvarkRenderDemo_PBR_traceTriangle_3zyeXtvfi2Azicu3TsfTxQ(o, d, A, B, C), SLEAardvarkRenderDemo_PBR_traceTriangle_3zyeXtvfi2Azicu3TsfTxQ(o, d, C, D, A));
164: }
165: 
166: 
167: vec3 SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(vec3 a, vec3 b, vec3 c)
168: {
169:     vec3 ab = (b - a);
170:     return (a + (clamp((dot((c - a), ab) / dot(ab, ab)), 0, 1) * ab));
171: }
172: 
173: 
174: vec3 SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(vec3 n, vec3 v, float roughness)
175: {
176:     return normalize(mix(n, (-reflect(n, v)), (1.0 - roughness)));
177: }
178: 
179: 
180: float SLEAardvarkRenderDemo_PBR_rectangleSolidAngle_yk0LnyTP2qLGhxTZr4oSHw(vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4)
181: {
182:     vec3 v1 = (p1 - wPos);
183:     vec3 v2 = (p2 - wPos);
184:     vec3 v3 = (p3 - wPos);
185:     vec3 v4 = (p4 - wPos);
186:     vec3 n1 = normalize(cross(v1, v2));
187:     vec3 n2 = normalize(cross(v2, v3));
188:     vec3 n3 = normalize(cross(v3, v4));
189:     vec3 n4 = normalize(cross(v4, v1));
190:     return ((((acos(dot((-n1), n2)) + acos(dot((-n2), n3))) + acos(dot((-n3), n4))) + acos(dot((-n4), n1))) - 6.283185307179586);
191: }
192: 
193: 
194: tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(bool item0, vec3 item1, vec3 item2, float item3)
195: {
196:     tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double res;
197:     res.Item0 = item0;
198:     res.Item1 = item1;
199:     res.Item2 = item2;
200:     res.Item3 = item3;
201:     return res;
202: }
203: 
204: 
205: float SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceSphere_UrX1ctp5f0mkaCN8lcAp4g(float radius)
206: {
207:     return (1.0 / ((((radius * radius) * 4.0) * 3.141592653589793) * 3.141592653589793));
208: }
209: 
210: 
211: vec2 SLEAardvarkRenderDemo_Shadow_vogelDiskOffset_cR3OqSYynaKjhFMpTsd8fQ(int sampleIndex, int sampleCount, float phi)
212: {
213:     float r = (sqrt((float(sampleIndex) + 0.5)) / sqrt(float(sampleCount)));
214:     float theta = ((float(sampleIndex) * 2.39996) + phi);
215:     return vec2((r * cos(theta)), (r * sin(theta)));
216: }
217: 
218: 
219: vec2 SLEAardvarkRenderDemo_Shadow_avgBlockersDepthToPenumbra_ntc5ns5VYYuiRbvrmwQQGw(vec2 lightSize, float surfaceDepth, float avgBlockersDepth)
220: {
221:     return ((lightSize * (surfaceDepth - avgBlockersDepth)) / avgBlockersDepth);
222: }
223: 
224: 
225: float SLEAardvarkRenderDemo_Shadow_random_1MN50IO3BjRacQVcNxGOSw(vec4 seed)
226: {
227:     return fract((sin(dot(seed, vec4(12.9898, 78.233, 45.164, 94.673))) * 43758.5453));
228: }
229: 
230: 
231: float SLEAardvarkRenderDemo_PBR_attenuationRectangle_rv8niFPySJx9fZLgTLeI9A(vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4, vec3 lUnnorm, vec3 ln, vec3 n)
232: {
233:     if((dot((-lUnnorm), ln) > 0.0))
234:     {
235:         return ((max(0.0, SLEAardvarkRenderDemo_PBR_rectangleSolidAngle_yk0LnyTP2qLGhxTZr4oSHw(wPos, p1, p2, p3, p4)) * 0.2) * ((((clamp(dot(n, normalize(lUnnorm)), 0, 1) + clamp(dot(n, normalize((p1 - wPos))), 0, 1)) + clamp(dot(n, normalize((p2 - wPos))), 0, 1)) + clamp(dot(n, normalize((p3 - wPos))), 0, 1)) + clamp(dot(n, normalize((p4 - wPos))), 0, 1)));
236:     }
237:     else
238:     {
239:         return 0.0;
240:     }
241: }
242: 
243: 
244: vec3 SLEAardvarkRenderDemo_PBR_representativePointSpehre_OBJfz00NlqX4woYAFs00nVKQ(vec3 n, vec3 v, float roughness, vec3 lUnnorm, float radius)
245: {
246:     vec3 r = SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
247:     vec3 centerToRay = ((dot(lUnnorm, r) * r) - lUnnorm);
248:     return normalize((lUnnorm + (centerToRay * clamp((radius / length(centerToRay)), 0.0, 1.0))));
249: }
250: 
251: 
252: vec3 SLEAardvarkRenderDemo_PBR_representativePointRectangle_RhNDGSMx9lhdbAUaPy333A(vec3 r, vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4, vec3 ln, vec3 lightPosition)
253: {
254:     if((SLEAardvarkRenderDemo_PBR_traceRectangle_OSdnOpnvoOU8tTrcn6w3JA(wPos, r, p1, p2, p3, p4) > 0.0))
255:     {
256:         return r;
257:     }
258:     else
259:     {
260:         vec3 tracedPlane = (wPos + (r * SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(wPos, r, lightPosition, ln)));
261:         vec3 pc1 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p1, p2, tracedPlane);
262:         vec3 pc2 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p2, p3, tracedPlane);
263:         vec3 pc3 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p3, p4, tracedPlane);
264:         vec3 pc4 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p4, p1, tracedPlane);
265:         float d2 = distance(pc2, tracedPlane);
266:         float d3 = distance(pc3, tracedPlane);
267:         float minDist = distance(pc1, tracedPlane);
268:         vec3 p = pc1;
269:         if((d2 < minDist))
270:         {
271:             minDist = d2;
272:             p = pc2;
273:         }
274:         if((d3 < minDist))
275:         {
276:             minDist = d3;
277:             p = pc3;
278:         }
279:         if((distance(pc4, tracedPlane) < minDist))
280:         {
281:             p = pc4;
282:         }
283:         return normalize((p - wPos));
284:     }
285: }
286: 
287: 
288: float SLEAardvarkRenderDemo_PBR_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(float cosTheta, float sinSigmaSqr)
289: {
290:     float sinTheta = sqrt((1.0 - (cosTheta * cosTheta)));
291:     return max(0.0, (((cosTheta * cosTheta) > sinSigmaSqr) ? ((3.141592653589793 * sinSigmaSqr) * clamp(cosTheta, 0.0, 1.0)) : helper1(cosTheta, sinSigmaSqr, sinTheta)));
292: }
293: 
294: 
295: float SLEAardvarkRenderDemo_PBR_attenuationDisk_U9LOD_bTSjagdDPGUR_Y5Q(vec3 lUnnorm, float radius, vec3 n, vec3 lDir, vec3 ln)
296: {
297:     float radius2 = (radius * radius);
298:     return (SLEAardvarkRenderDemo_PBR_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(clamp(dot(n, lDir), -0.999, 0.999), (radius2 / (radius2 + max(radius2, dot(lUnnorm, lUnnorm))))) * clamp(dot(ln, (-lDir)), 0, 1));
299: }
300: 
301: 
302: float SLEAardvarkRenderDemo_PBR_attenuationSphere_Wj2p65IzIRidr79fESSIcg(vec3 lUnnorm, float radius, vec3 n, vec3 lDir)
303: {
304:     return SLEAardvarkRenderDemo_PBR_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(clamp(dot(n, lDir), -0.999, 0.999), min(0.9999, ((radius * radius) / dot(lUnnorm, lUnnorm))));
305: }
306: 
307: 
308: tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double SLEAardvarkRenderDemo_PBR_getLightParams_W004900tZOOSxYNA8ygbu8uA(SLEAardvarkRenderDemo_SLEUniform_Light light, vec3 wPos, vec3 n, vec3 v, float roughness)
309: {
310:     if((light.lightType == 0))
311:     {
312:         return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(false, vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), 1.0);
313:     }
314:     else
315:     {
316:         if((light.lightType == 1))
317:         {
318:             return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, normalize((-light.lightDirection.xyz)), light.color, 1.0);
319:         }
320:         else
321:         {
322:             if((light.lightType == 2))
323:             {
324:                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, normalize((light.lightPosition.xyz - wPos)), ((light.color * SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))) * 0.07957747154594767), 1.0);
325:             }
326:             else
327:             {
328:                 if((light.lightType == 3))
329:                 {
330:                     vec3 lDir = normalize((light.lightPosition.xyz - wPos));
331:                     return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, lDir, (((light.color * SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(lDir, normalize(light.lightDirection.xyz), light.cutOffInner, light.cutOffOuter)) * SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))) * 0.3183098861837907), 1.0);
332:                 }
333:                 else
334:                 {
335:                     if((light.lightType == 4))
336:                     {
337:                         vec3 lUnnorm = (light.lightPosition.xyz - wPos);
338:                         return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, SLEAardvarkRenderDemo_PBR_representativePointSpehre_OBJfz00NlqX4woYAFs00nVKQ(n, v, roughness, lUnnorm, light.radius), ((light.color * SLEAardvarkRenderDemo_PBR_attenuationSphere_Wj2p65IzIRidr79fESSIcg(lUnnorm, light.radius, n, normalize(lUnnorm))) * SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceSphere_UrX1ctp5f0mkaCN8lcAp4g(light.radius)), 1.0);
339:                     }
340:                     else
341:                     {
342:                         if((light.lightType == 5))
343:                         {
344:                             vec3 lUnnorm1 = (light.lightPosition.xyz - wPos);
345:                             vec3 ln = normalize(light.lightDirection.xyz);
346:                             vec3 r = SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
347:                             return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, SLEAardvarkRenderDemo_PBR_representativePointDisk_2JPHvvLUgcbUkMatH00ra00Q(r, wPos, light.radius, ln, light.lightPosition.xyz, lUnnorm1), (((light.color * SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize((light.virtualPos.xyz - wPos)), ln, light.cutOffInner, light.cutOffOuter)) * SLEAardvarkRenderDemo_PBR_attenuationDisk_U9LOD_bTSjagdDPGUR_Y5Q(lUnnorm1, light.radius, n, normalize(lUnnorm1), ln)) * SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceDisk_3Fm00pFf99CfR9hPbaGPImw(light.radius)), clamp(abs(dot(ln, r)), 0, 1));
348:                         }
349:                         else
350:                         {
351:                             if((light.lightType == 6))
352:                             {
353:                                 vec3 ln1 = normalize(light.lightDirection.xyz);
354:                                 vec4 d1 = (vec4(normalize((light.virtualPos.xyz - wPos)), 0.0) * light.fromWorld);
355:                                 vec4 d3 = (vec4(normalize((light.virtualPos2.xyz - wPos)), 0.0) * light.fromWorld);
356:                                 vec3 r1 = SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
357:                                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, SLEAardvarkRenderDemo_PBR_representativePointRectangle_RhNDGSMx9lhdbAUaPy333A(r1, wPos, light.p1, light.p2, light.p3, light.p4, ln1, light.lightPosition.xyz), (((light.color * (SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize(vec3(d1.x, d1.y, 0.0)), vec3(0.0, 1.0, 0.0), light.cutOffInner, light.cutOffOuter) * SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize(vec3(0.0, d3.y, d3.z)), vec3(0.0, 1.0, 0.0), light.cutOffInner, light.cutOffOuter))) * SLEAardvarkRenderDemo_PBR_attenuationRectangle_rv8niFPySJx9fZLgTLeI9A(wPos, light.p1, light.p2, light.p3, light.p4, (light.lightPosition.xyz - wPos), ln1, n)) * SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceRectangle_CSsH8PY0AZ5Q9fWUXd5VQ(light.p1, light.p2, light.p4)), clamp(abs(dot(ln1, r1)), 0, 1));
358:                             }
359:                             else
360:                             {
361:                                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(false, vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), 1.0);
362:                             }
363:                         }
364:                     }
365:                 }
366:             }
367:         }
368:     }
369: }
370: 
371: 
372: float SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(bool ilb, float nDotV, float roughness)
373: {
374:     float k = (ilb ? ((roughness * roughness) / 2.0) : helper(roughness));
375:     return (nDotV / ((nDotV * (1.0 - k)) + k));
376: }
377: 
378: 
379: float SLEAardvarkRenderDemo_BRDF_GeometrySmith_VXZTTP5v1N8YmBKR5NO9ZQ(bool ilb, vec3 n, vec3 v, vec3 l, float roughness)
380: {
381:     return (SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(ilb, max(0.0, dot(n, l)), roughness) * SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(ilb, max(0.0, dot(n, v)), roughness));
382: }
383: 
384: 
385: vec3 SLEAardvarkRenderDemo_PBR_pbrDirect_bwqFUjv2IoJDhPzhH002SXQ(vec3 f0, float roughness, float metallic, vec3 albedo, vec4 wPos, vec3 v, vec3 n, float nDotV, SLEAardvarkRenderDemo_SLEUniform_Light light, float clearCoat, float clearCoatRoughness)
386: {
387:     tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double patternInput = SLEAardvarkRenderDemo_PBR_getLightParams_W004900tZOOSxYNA8ygbu8uA(light, wPos.xyz, n, v, roughness);
388:     if(patternInput.Item0)
389:     {
390:         vec3 h = normalize((v + patternInput.Item1));
391:         float hDotV = max(0.0, dot(h, v));
392:         vec3 kS = SLEAardvarkRenderDemo_BRDF_fresnelSchlick_p2rPA4e4MFUMqGJ0C14Tng(f0, hDotV);
393:         float nDotL = max(0.0, dot(n, patternInput.Item1));
394:         vec3 diffuse = ((((1.0 - metallic) * (vec3(1.0, 1.0, 1.0) - kS)) * albedo) / 3.141592653589793);
395:         float denominator = max(0.001, ((4.0 * nDotV) * nDotL));
396:         vec3 specular = (((SLEAardvarkRenderDemo_BRDF_DistributionGGX_9rKdY223uBS_NUz8TxOtw(n, h, roughness) * SLEAardvarkRenderDemo_BRDF_GeometrySmith_VXZTTP5v1N8YmBKR5NO9ZQ(false, n, v, patternInput.Item1, roughness)) * kS) / denominator);
397:         if((clearCoat == 0.0))
398:         {
399:             return (((diffuse + (specular * patternInput.Item3)) * patternInput.Item2) * nDotL);
400:         }
401:         else
402:         {
403:             vec3 clearCoatKS = (clearCoat * SLEAardvarkRenderDemo_BRDF_fresnelSchlick_p2rPA4e4MFUMqGJ0C14Tng(vec3(0.04, 0.04, 0.04), hDotV));
404:             return (((((diffuse + (specular * patternInput.Item3)) * (vec3(1.0, 1.0, 1.0) - clearCoatKS)) + (((SLEAardvarkRenderDemo_BRDF_DistributionGGX_9rKdY223uBS_NUz8TxOtw(n, h, clearCoatRoughness) * SLEAardvarkRenderDemo_BRDF_GeometrySmith_VXZTTP5v1N8YmBKR5NO9ZQ(false, n, v, patternInput.Item1, clearCoatRoughness)) * clearCoatKS) / denominator)) * patternInput.Item2) * nDotL);
405:         }
406:     }
407:     else
408:     {
409:         return vec3(0.0, 0.0, 0.0);
410:     }
411: }
412: 
413: 
414: 
415: #ifdef Vertex
416: layout(location = 0) in vec2 DiffuseColorCoordinates;
417: layout(location = 1) in vec4 Positions;
418: layout(location = 0) out vec2 fs_DiffuseColorCoordinates;
419: void main()
420: {
421:     fs_DiffuseColorCoordinates = DiffuseColorCoordinates;
422:     gl_Position = Positions;
423: }
424: 
425: #endif
426: 
427: 
428: 
429: #ifdef Fragment
430: 
431: vec2 SLEAardvarkRenderDemo_Shadow_penumbra_xPgf541Zi7aStHEY_SGbgw(float noise, vec2 shadowMapUV, float surfaceDepth, vec2 lightSize)
432: {
433:     float avgBlockersDepth = 0.0;
434:     float blockersCount = 0.0;
435:     for(int i = 0; (i < 16); i++)
436:     {
437:         float sampleDepth = texture(samplerShadowMapTex, (shadowMapUV + (SLEAardvarkRenderDemo_Shadow_vogelDiskOffset_cR3OqSYynaKjhFMpTsd8fQ(i, 16, noise) / 100.0))).x;
438:         if((sampleDepth < surfaceDepth))
439:         {
440:             avgBlockersDepth = (avgBlockersDepth + sampleDepth);
441:             blockersCount = (blockersCount + 1.0);
442:         }
443:     }
444:     if((blockersCount > 0.0))
445:     {
446:         avgBlockersDepth = (avgBlockersDepth / blockersCount);
447:         return SLEAardvarkRenderDemo_Shadow_avgBlockersDepthToPenumbra_ntc5ns5VYYuiRbvrmwQQGw(lightSize, surfaceDepth, avgBlockersDepth);
448:     }
449:     else
450:     {
451:         return vec2(0.0, 0.0);
452:     }
453: }
454: 
455: vec2 SLEAardvarkRenderDemo_Shadow_lightWidth_LXD3gVwklkgvV5JWo3yVwg()
456: {
457:     if((Light.lightType == 0))
458:     {
459:         return vec2(0.01, 0.01);
460:     }
461:     else
462:     {
463:         if((Light.lightType == 1))
464:         {
465:             return vec2(0.01, 0.01);
466:         }
467:         else
468:         {
469:             if((Light.lightType == 2))
470:             {
471:                 return vec2(0.01, 0.01);
472:             }
473:             else
474:             {
475:                 if((Light.lightType == 3))
476:                 {
477:                     return vec2(0.01, 0.01);
478:                 }
479:                 else
480:                 {
481:                     if((Light.lightType == 4))
482:                     {
483:                         return vec2(max(0.01, (Light.radius * 2.0)));
484:                     }
485:                     else
486:                     {
487:                         if((Light.lightType == 5))
488:                         {
489:                             return vec2(max(0.01, (Light.radius * 2.0)));
490:                         }
491:                         else
492:                         {
493:                             if((Light.lightType == 6))
494:                             {
495:                                 return vec2(max(0.01, length((Light.p1 - Light.p4))), max(0.01, length((Light.p1 - Light.p2))));
496:                             }
497:                             else
498:                             {
499:                                 return vec2(0.01, 0.01);
500:                             }
501:                         }
502:                     }
503:                 }
504:             }
505:         }
506:     }
507: }
508: 
509: float SLEAardvarkRenderDemo_Shadow_vogelDiskSampling_lwchxL5jglAwqwkoagx25Q(float noise, vec4 pos, vec2 spread)
510: {
511:     float vis = 0.0;
512:     for(int i = 0; (i < 16); i++)
513:     {
514:         vec4 p = (pos + vec4((SLEAardvarkRenderDemo_Shadow_vogelDiskOffset_cR3OqSYynaKjhFMpTsd8fQ(i, 16, noise) * spread), 0.0, 0.0));
515:         vec4 samplePos = (0.5 + (0.5 * (p / p.w)));
516:         vis = (vis + (texture(samplerShadowMap, vec3(samplePos.xy, (samplePos.z - 0.005))) / 16.0));
517:     }
518:     return vis;
519: }
520: 
521: float SLEAardvarkRenderDemo_Shadow_getShadow_5PX5AT33WcqEHaJ6zghmCw(vec4 wPos)
522: {
523:     vec4 lightSpacePos = (wPos * LightViewMatrix);
524:     vec4 samplePos = (0.5 + (0.5 * (lightSpacePos / lightSpacePos.w)));
525:     float noise = (6.283185307179586 * SLEAardvarkRenderDemo_Shadow_random_1MN50IO3BjRacQVcNxGOSw(samplePos));
526:     return SLEAardvarkRenderDemo_Shadow_vogelDiskSampling_lwchxL5jglAwqwkoagx25Q(noise, lightSpacePos, SLEAardvarkRenderDemo_Shadow_penumbra_xPgf541Zi7aStHEY_SGbgw(noise, samplePos.xy, samplePos.z, SLEAardvarkRenderDemo_Shadow_lightWidth_LXD3gVwklkgvV5JWo3yVwg()));
527: }
528: 
529: vec3 SLEAardvarkRenderDemo_PBR_pBRLightning_UKa5xgHDwGxZ6400a9fstaw(float metallic, float roughness, vec3 albedo, vec3 n, vec4 wPos, float clearCoat, float clearCoatRoughness)
530: {
531:     vec3 v = normalize((CameraLocation - wPos.xyz));
532:     vec3 f0Base = mix(vec3(0.04, 0.04, 0.04), albedo, metallic);
533:     return SLEAardvarkRenderDemo_PBR_pbrDirect_bwqFUjv2IoJDhPzhH002SXQ(mix(f0Base, SLEAardvarkRenderDemo_PBR_f0ClearCoatToSurface_Yt_fON0CP96EVMGbQBIX3w(f0Base), clearCoat), roughness, metallic, albedo, wPos, v, n, max(0.0, dot(n, v)), Light, clearCoat, clearCoatRoughness);
534: }
535: 
536: layout(location = 0) in vec2 fs_DiffuseColorCoordinates;
537: layout(location = 0) out vec4 ColorsOut;
538: void main()
539: {
540:     vec4 albedo = texture(color, fs_DiffuseColorCoordinates);
541:     vec4 nr = texture(normal, fs_DiffuseColorCoordinates);
542:     vec2 cc = texture(clearCoat, fs_DiffuseColorCoordinates).xy;
543:     ColorsOut = (vec4(((albedo.w < 0.0) ? vec3(0.0, 0.0, 0.0) : SLEAardvarkRenderDemo_PBR_pBRLightning_UKa5xgHDwGxZ6400a9fstaw(albedo.w, nr.w, vec4(albedo.xyz, 1.0).xyz, normalize(nr.xyz), texture(wPos, fs_DiffuseColorCoordinates), cc.x, cc.y)), 1.0) * SLEAardvarkRenderDemo_Shadow_getShadow_5PX5AT33WcqEHaJ6zghmCw(texture(wPos, fs_DiffuseColorCoordinates)));
544: }
545: 
546: #endif

 2: Compiling shader:
 1: #version 460
 2: #define __SHADER_STAGE__
 3: 
 4: 
 5: 
 6: 
 7: layout(std140, binding = 0)
 8: uniform Global
 9: {
10:     float AmbientIntensity;
11: };
12: 
13: 
14: layout(binding = 0)
15: uniform sampler2D color;
16: 
17: layout(binding = 1)
18: uniform sampler2D emission;
19: 
20: 
21: #ifdef Vertex
22: layout(location = 0) in vec2 DiffuseColorCoordinates;
23: layout(location = 1) in vec4 Positions;
24: layout(location = 0) out vec2 fs_DiffuseColorCoordinates;
25: void main()
26: {
27:     fs_DiffuseColorCoordinates = DiffuseColorCoordinates;
28:     gl_Position = Positions;
29: }
30: 
31: #endif
32: 
33: 
34: 
35: #ifdef Fragment
36: 
37: layout(location = 0) in vec2 fs_DiffuseColorCoordinates;
38: layout(location = 0) out vec4 ColorsOut;
39: void main()
40: {
41:     vec4 albedo = texture(color, fs_DiffuseColorCoordinates);
42:     vec4 ColorsC = vec4(albedo.xyz, 1.0);
43:     ColorsOut = vec4((texture(emission, fs_DiffuseColorCoordinates).xyz + ((albedo.w < 0.0) ? ColorsC.xyz : (ColorsC.xyz * AmbientIntensity))), 1.0);
44: }
45: 
46: #endif

 2: texture created
 2: [GL] RenderObjects: +22/-0 (7837ms)
 2: using optimized native program
 2: texture created
 2: result created
 2: [GL] RenderObjects: +300/-0 (612ms)
 2: using optimized native program
 2: texture created
 2: texture created
 2: texture created
 2: [GL] RenderObjects: +22/-0 (677ms)
 2: using optimized native program
 2: texture created
 2: result created
 2: [GL] RenderObjects: +300/-0 (624ms)
 2: using optimized native program
 2: texture created
 2: texture created
 2: texture created
 2: [GL] RenderObjects: +22/-0 (694ms)
 2: using optimized native program
 2: texture created
 2: result created
 2: [GL] RenderObjects: +300/-0 (627ms)
 2: using optimized native program
 2: texture created
 2: texture created
 2: texture created
 2: [GL] RenderObjects: +22/-0 (703ms)
 2: using optimized native program
 2: texture created
 2: result created
 2: [GL] RenderObjects: +300/-0 (611ms)
 2: using optimized native program
 2: texture created
 2: texture created
 2: texture created
 2: [GL] RenderObjects: +22/-0 (686ms)
 2: using optimized native program
 2: texture created
 2: result created
 2: [GL] RenderObjects: +300/-0 (625ms)
 2: using optimized native program
 2: texture created
 2: texture created
 2: texture created
 2: [GL] RenderObjects: +22/-0 (702ms)
 2: using optimized native program
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: [GL] RenderObjects: +299/-60 (656ms)
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: WARNING: AdaptiveRenderingResultCube.compute
 3: [Client] 1: stopped
