 0: initializing aardvark ........................................................................
 0:   System Information:
 0:     System:      Microsoft Windows 10.0.19041
 0:     Processor:   4 core x64
 0:     Process:     x64
 0:     Framework:   .NET Core 3.1.11
 0:   Loading native dependencies for Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: linux/AMD64/libglfw.so.3
 0:     found: mac/AMD64/libglfw.3.dylib
 0:     found: windows/AMD64/glfw3.dll
 0:     copy glfw3.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Application.Slim.GL-32f42d4c-4cb0-88cf-a5d3-8c852c69d925-64\glfw3.dll
 0:     found: windows/x86/glfw3.dll
 0:   Loading native dependencies for Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 0.007 s
 0:   Loading native dependencies for Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: linux/AMD64/glvm.so
 0:     found: mac/AMD64/glvm.dylib
 0:     found: windows/AMD64/glvm.dll
 0:     copy glvm.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.dll
 0:     found: windows/AMD64/glvm.exp
 0:     copy glvm.exp to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.exp
 0:     found: windows/AMD64/glvm.iobj
 0:     copy glvm.iobj to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.iobj
 0:     found: windows/AMD64/glvm.ipdb
 0:     copy glvm.ipdb to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.ipdb
 0:     found: windows/AMD64/glvm.lib
 0:     copy glvm.lib to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.lib
 0:     found: windows/AMD64/glvm.pdb
 0:     copy glvm.pdb to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.pdb
 0:     found: windows/x86/glvm.dll
 0:     found: windows/x86/glvm.exp
 0:     found: windows/x86/glvm.iobj
 0:     found: windows/x86/glvm.ipdb
 0:     found: windows/x86/glvm.lib
 0:     found: windows/x86/glvm.pdb
 0:   Loading native dependencies for Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 0.000 s
 0:   Loading native dependencies for Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: remap.xml
 0:     found: linux/AMD64/libturbojpeg.so
 0:     found: mac/AMD64/libturbojpeg.dylib
 0:     found: windows/AMD64/turbojpeg.dll
 0:     copy turbojpeg.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Service-6c07790d-9ae8-a533-bcc3-f89762a0781f-64\turbojpeg.dll
 0:     found: windows/x86/turbojpeg.dll
 0:   Loading native dependencies for Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 0.014 s
 0:   Loading plugins ............................................................................
 0:     [LoadPlugins] Using plugin cache file name: C:\Users\Stefan\AppData\Roaming\Aardvark\cache\AardvarkRenderDemo_plugins.bin
 0:     [ReadCacheFile] loaded cache file: C:\Users\Stefan\AppData\Roaming\Aardvark\cache\AardvarkRenderDemo_plugins.bin
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardium.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Application.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Application.Slim.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Application.Slim.GL.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Application.Slim.Vulkan.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.Essentials.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.FSharp.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.Incremental.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.Rendering.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.Runtime.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.Telemetry.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.TypeProviders.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.GPGPU.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Rendering.GL.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Rendering.Vulkan.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.SceneGraph.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.SceneGraph.IO.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Service.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.UI.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.UI.Primitives.dll
 0:     [GetPluginAssemblyPaths] retrying to load because not in cache D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\AardvarkRenderDemo.dll
 0:     [GetPluginAssemblyPaths] retrying to load because not in cache D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\AardvarkRenderDemo.exe
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Adaptify.Core.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\AssimpNet.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\DevILSharp.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FShade.Core.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FShade.GLSL.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FShade.Imperative.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FShade.SpirV.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FSharp.Core.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FSharp.Data.Adaptive.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FsPickler.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FsPickler.Json.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\GLSLangSharp.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Microsoft.DotNet.PlatformAbstractions.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Microsoft.Extensions.DependencyModel.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Newtonsoft.Json.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\OpenTK.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Silk.NET.Core.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Silk.NET.GLFW.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Suave.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\System.Collections.Immutable.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\System.Reactive.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\System.Runtime.CompilerServices.Unsafe.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\System.Text.Json.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Ultz.SuperInvoke.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Ultz.SuperInvoke.Loader.dll
 0:   Loading plugins .................................................................... 0.053 s
 0:   using cache dir: C:\Users\Stefan\AppData\Roaming\Aardvark\cache
 0:   Loading native dependencies for DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: remap.xml
 0:     found: mac/AMD64/libDevIL.dylib
 0:     found: mac/AMD64/libILU.dylib
 0:     found: mac/AMD64/libILUT.dylib
 0:     found: windows/AMD64/DevIL.dll
 0:     copy DevIL.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64\DevIL.dll
 0:     found: windows/AMD64/ILU.dll
 0:     copy ILU.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64\ILU.dll
 0:     found: windows/AMD64/ILUT.dll
 0:     copy ILUT.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64\ILUT.dll
 0:     found: windows/x86/DevIL.dll
 0:     found: windows/x86/ILU.dll
 0:     found: windows/x86/ILUT.dll
 0:   Loading native dependencies for DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null 0.000 s
 0:   Loading native dependencies for Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: remap.xml
 0:     found: linux/AMD64/libvkvm.so
 0:     found: windows/AMD64/vkvm.dll
 0:     copy vkvm.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64\vkvm.dll
 0:     found: windows/AMD64/vkvm.exp
 0:     copy vkvm.exp to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64\vkvm.exp
 0:     found: windows/AMD64/vkvm.lib
 0:     copy vkvm.lib to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64\vkvm.lib
 0:     found: windows/AMD64/vkvm.pdb
 0:     copy vkvm.pdb to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64\vkvm.pdb
 0:     found: windows/x86/vkvm.dll
 0:     found: windows/x86/vkvm.exp
 0:     found: windows/x86/vkvm.lib
 0:     found: windows/x86/vkvm.pdb
 0:   Loading native dependencies for Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 0.000 s
 0:   Loading native dependencies for GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: linux/AMD64/libGLSLangNative.so
 0:     found: windows/AMD64/GLSLangNative.dll
 0:     copy GLSLangNative.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.dll
 0:     found: windows/AMD64/GLSLangNative.exp
 0:     copy GLSLangNative.exp to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.exp
 0:     found: windows/AMD64/GLSLangNative.iobj
 0:     copy GLSLangNative.iobj to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.iobj
 0:     found: windows/AMD64/GLSLangNative.ipdb
 0:     copy GLSLangNative.ipdb to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.ipdb
 0:     found: windows/AMD64/GLSLangNative.lib
 0:     copy GLSLangNative.lib to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.lib
 0:     found: windows/AMD64/GLSLangNative.pdb
 0:     copy GLSLangNative.pdb to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.pdb
 0:   Loading native dependencies for GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null 0.000 s
 0:   Loading native dependencies for AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: linux/AMD64/libassimp.so
 0:     found: mac/AMD64/libassimp.dylib
 0:     found: windows/AMD64/Assimp64.dll
 0:     copy Assimp64.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64\Assimp64.dll
 0:     found: windows/x86/Assimp32.dll
 0:   Loading native dependencies for AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null 0.000 s
 0:   [cache miss] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:   [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:   [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   initializing PixImageDevil .................................................................
 0:     probing paths for DevIL
 0:       D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:       C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64
 0:     [Introspection] loaded native library DevIL from C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64\DevIL.dll
 0:   initializing PixImageDevil ......................................................... 0.033 s
 0:   [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   initializing CustomPicklerProvider .........................................................
 0:     [cache miss] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     installing pickler: Aardvark.Base.Picklers.AdaptivePicklers
 0:   initializing CustomPicklerProvider ................................................. 0.054 s
 0:   [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   initializing SceneGraphCompletenessCheck ...................................................
 0:     [cache miss] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache miss] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   initializing SceneGraphCompletenessCheck ........................................... 0.145 s
 0:   [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:   [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.SceneGraph.IO, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   initializing Loader ................................................................ 0.000 s
 0: initializing aardvark ................................................................ 0.584 s
 0: probing paths for nvapi64
 0:   D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Application.Slim.GL-32f42d4c-4cb0-88cf-a5d3-8c852c69d925-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Service-6c07790d-9ae8-a533-bcc3-f89762a0781f-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64
 0: [Introspection] could not load native library nvapi64.dll
 0: trying to resolve native library libEGL.dll
 0: probing paths for libEGL
 0:   D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Application.Slim.GL-32f42d4c-4cb0-88cf-a5d3-8c852c69d925-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Service-6c07790d-9ae8-a533-bcc3-f89762a0781f-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64
 0: [Introspection] could not load native library libEGL.dll
 0: OpenGL 4.5 working
 0: backbuffer
 0:   color: R8G8B8A8
 0:   depth: D24S8
 0: probing paths for glvm
 0:   D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0: [Introspection] loaded native library glvm from C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.dll
 0: backbuffer
 0:   color: R8G8B8A8
 0:   depth: D24S8
 0: initializing OpenGL runtime ..................................................................
 0:   probing paths for glvm
 0:     D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Application.Slim.GL-32f42d4c-4cb0-88cf-a5d3-8c852c69d925-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Service-6c07790d-9ae8-a533-bcc3-f89762a0781f-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64
 0:   [Introspection] loaded native library glvm from C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.dll
 0:   probing paths for Opengl32
 0:     D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Application.Slim.GL-32f42d4c-4cb0-88cf-a5d3-8c852c69d925-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Service-6c07790d-9ae8-a533-bcc3-f89762a0781f-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64
 0:   [Introspection] loaded native library Opengl32.dll from Opengl32.dll
 0:   probing paths for opengl32
 0:     D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:   [Introspection] loaded native library opengl32.dll from opengl32.dll
 0:   probing paths for kernel32
 0:     D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:   [Introspection] loaded native library kernel32.dll from kernel32.dll
 0:   vendor:   "ATI Technologies Inc."
 0:   renderer: "AMD Radeon (TM) R9 380 Series"
 0:   version:  OpenGL 4.5.14736 / GLSL 4.6
 0: initializing OpenGL runtime .......................................................... 0.135 s
 0: WARNING: load
 0: probing paths for kernel32
 0:   D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64
 0: [Introspection] loaded native library kernel32.dll from kernel32.dll
 0: Aardvark.UI serves template.html
 0: Aardvark.UI serves favicon.ico
 0: WARNING: [aardvark.media] currently ThreadPool.MinThreads is (4,4)
 0: WARNING: [aardvark.media] unfortunately, currently we need to adjust this to at least (12,12) due to an open issue https://github.com/aardvark-platform/aardvark.media/issues/19
 0: Aardvark.Service serves aardvark.js
 0: Aardvark.Service serves rgbcolor.js
 0: Aardvark.Service serves docking.js
 0: Aardvark.Service serves semantic.js
 0: Aardvark.Service serves jquery-3-3-1.js
 0: Aardvark.Service serves touchstick.js
 0: Aardvark.Service serves aardfs.js
 0: Aardvark.Service serves essentialstuff.js
 0: Aardvark.Service serves aardvark.css
 0: Aardvark.Service serves docking.css
 0: Aardvark.Service serves semantic.css
 0: Aardvark.Service serves aardfs.css
 0: Aardvark.Service serves semantic-overrides.css
 0: Aardvark.Service serves fonts.css
 0: Aardvark.Service serves index.html
 0: Aardvark.Service serves stats.html
 0: Aardvark.Service serves aardvark-light.svg
 0: Aardvark.Service serves aardvark.svg
 0: Aardvark.Service serves brand-icons.woff2
 0: Aardvark.Service serves outline-icons.woff2
 0: Aardvark.Service serves icons.woff2
 0: Aardvark.Service serves S6u8w4BMUTPHjxsAUi-qJCY.woff2
 0: Aardvark.Service serves S6u8w4BMUTPHjxsAXC-q.woff2
 0: Aardvark.Service serves S6u9w4BMUTPHh6UVSwaPGR_p.woff2
 0: Aardvark.Service serves S6u9w4BMUTPHh6UVSwiPGQ.woff2
 0: Aardvark.Service serves S6uyw4BMUTPHjx4wXg.woff2
 0: Aardvark.Service serves S6uyw4BMUTPHjxAwXjeu.woff2
 0: Aardvark.Service serves S6u_w4BMUTPHjxsI5wq_FQft1dw.woff2
 0: Aardvark.Service serves S6u_w4BMUTPHjxsI5wq_Gwft.woff2
 0: Aardvark.UI serves template.html
 0: Aardvark.UI serves favicon.ico
 0: Aardvark.UI.Primitives serves spectrum.css
 0: Aardvark.UI.Primitives serves spectrum.js
 1: [Server] created client for (4f70dba7-b962-6e28-9d15-f4cb66c76e8d/n7), mapping enabled
 1: [Client] 1: running n7
 2: [Scene] n7: created
 2: texture created
 2: result created
 2: texture created
 2: result created
 2: texture created
 2: result created
 2: WARNING: load
 2: result created
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: [GL] RenderObjects: +1/-0 (431ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (4ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (3ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +61/-0 (1528ms)
 2: using optimized native program
 2: texture created
 2: texture created
 2: result created
 2: texture created
 2: result created
 2: WARNING: load
 2: result created
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: [GL] RenderObjects: +1/-0 (3ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (4ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: result created
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: [GL] RenderObjects: +1/-0 (9ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (48ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (15ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (13ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (3ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (20ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (41ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (3ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (3ms)
 2: using optimized native program
 2: texture created
 2: result created
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +60/-0 (25ms)
 2: using optimized native program
 2: Compiling shader:
  1: #version 460
  2: #define __SHADER_STAGE__
  3: 
  4: 
  5: 
  6: 
  7: struct tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double
  8: {
  9:     vec3 Item0;
 10:     vec3 Item1;
 11:     float Item2;
 12: };
 13: 
 14: struct tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d
 15: {
 16:     bool Item0;
 17:     vec3 Item1;
 18:     vec3 Item2;
 19:     float Item3;
 20:     vec3 Item4;
 21: };
 22: 
 23: struct tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d
 24: {
 25:     vec3 Item0;
 26:     vec3 Item1;
 27:     vec3 Item2;
 28:     vec3 Item3;
 29: };
 30: 
 31: struct SLEAardvarkRenderDemo_SLEUniform_Light
 32: {
 33:     int lightType;
 34:     vec4 lightPosition;
 35:     vec4 lightDirection;
 36:     vec3 color;
 37:     bool castsShadow;
 38:     float cutOffInner;
 39:     float cutOffOuter;
 40:     float radius;
 41:     vec3 virtualPos;
 42:     vec3 virtualPos2;
 43:     vec3 p1;
 44:     vec3 p2;
 45:     vec3 p3;
 46:     vec3 p4;
 47:     mat4x4 toWorld;
 48:     mat4x4 fromWorld;
 49: };
 50: 
 51: struct tup_Aardvark_Base_V3d_Aardvark_Base_V3d
 52: {
 53:     vec3 Item0;
 54:     vec3 Item1;
 55: };
 56: 
 57: layout(std140, binding = 0)
 58: uniform Global
 59: {
 60:     vec4 AlbedoColor;
 61:     float AlbedoFactor;
 62:     float AmbientIntensity;
 63:     float ClearCoat;
 64:     float ClearCoatNormalStrength;
 65:     float ClearCoatRoughness;
 66:     bool Discard;
 67:     float DisplacmentStrength;
 68:     SLEAardvarkRenderDemo_SLEUniform_Light Light;
 69:     mat4x4 LightViewProjMatrix;
 70:     float Metallic;
 71:     float NormalMapStrength;
 72:     float Roughness;
 73:     vec3 SheenColor;
 74:     float SheenColorFactor;
 75:     float SheenRoughness;
 76:     bool UseNormalsForClearCoat;
 77: };
 78: 
 79: 
 80: layout(std140, binding = 1)
 81: uniform PerView
 82: {
 83:     vec3 CameraLocation;
 84:     mat4x4 ViewProjTrafo;
 85: };
 86: 
 87: 
 88: layout(std140, binding = 2)
 89: uniform PerModel
 90: {
 91:     mat4x4 ModelTrafo;
 92:     mat4x4 ModelTrafoInv;
 93: };
 94: 
 95: 
 96: layout(binding = 0)
 97: uniform sampler2D albedoSampler;
 98: 
 99: layout(binding = 1)
100: uniform sampler2D clearCoatNormalSampler;
101: 
102: layout(binding = 2)
103: uniform sampler2D clearCoatRoughnessSampler;
104: 
105: layout(binding = 3)
106: uniform sampler2D clearCoatSampler;
107: 
108: layout(binding = 4)
109: uniform samplerCube diffuseIrradianceSampler;
110: 
111: layout(binding = 5)
112: uniform sampler2D metallicSampler;
113: 
114: layout(binding = 6)
115: uniform sampler2D normalSampler;
116: 
117: layout(binding = 7)
118: uniform samplerCube prefilteredSpecColorSampler;
119: 
120: layout(binding = 8)
121: uniform sampler2D roughnessSampler;
122: 
123: layout(binding = 9)
124: uniform sampler2D samplerBRDFLtu;
125: 
126: layout(binding = 10)
127: uniform sampler2D samplerDisp;
128: 
129: layout(binding = 11)
130: uniform sampler2DShadow samplerShadowMap;
131: 
132: layout(binding = 12)
133: uniform sampler2D samplerShadowMapTex;
134: 
135: layout(binding = 13)
136: uniform sampler2D sheenColorSampler;
137: 
138: layout(binding = 14)
139: uniform sampler2D sheenRoughnessSampler;
140: 
141: vec3 SLEAardvarkRenderDemo_BRDF_fresnelSchlick_oKvmgrrRv31EPsFk6qorKg(vec3 f0, float cosTheta)
142: {
143:     return (f0 + ((clamp(dot(f0, vec3(16.5, 16.5, 16.5)), 0, 1) - f0) * pow((1.0 - cosTheta), 5.0)));
144: }
145: 
146: 
147: vec3 SLEAardvarkRenderDemo_LightShader_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(vec3 n, vec3 v, float roughness)
148: {
149:     return normalize(mix(n, (-reflect(n, v)), (1.0 - roughness)));
150: }
151: 
152: 
153: vec3 SLEAardvarkRenderDemo_LightShader_representativePointSpehre_DvHCJ7t4LLabKB7nbPvi5A(vec3 n, vec3 v, float roughness, vec3 lUnnorm, float radius)
154: {
155:     vec3 r = SLEAardvarkRenderDemo_LightShader_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
156:     vec3 centerToRay = ((dot(lUnnorm, r) * r) - lUnnorm);
157:     return normalize((lUnnorm + (centerToRay * clamp((radius / length(centerToRay)), 0.0, 1.0))));
158: }
159: 
160: 
161: vec3 SLEAardvarkRenderDemo_LightShader_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(vec3 a, vec3 b, vec3 c)
162: {
163:     vec3 ab = (b - a);
164:     return (a + (clamp((dot((c - a), ab) / dot(ab, ab)), 0, 1) * ab));
165: }
166: 
167: 
168: float SLEAardvarkRenderDemo_LightShader_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(vec3 o, vec3 d, vec3 planeOrigin, vec3 planeNormal)
169: {
170:     return (dot(planeNormal, (planeOrigin - o)) / dot(planeNormal, d));
171: }
172: 
173: 
174: vec3 SLEAardvarkRenderDemo_LightShader_representativePointDisk_wKhAwWDNYwPsVTi00Wbf63g(vec3 r, vec3 wPos, float radius, vec3 ln, vec3 lightPosition, vec3 lUnnorm)
175: {
176:     vec3 centerToRay = ((wPos + (r * SLEAardvarkRenderDemo_LightShader_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(wPos, r, lightPosition, ln))) - lightPosition);
177:     return normalize((lUnnorm + (centerToRay * clamp((radius / length(centerToRay)), 0, 1))));
178: }
179: 
180: 
181: float SLEAardvarkRenderDemo_LightShader_rectangleSolidAngle_yk0LnyTP2qLGhxTZr4oSHw(vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4)
182: {
183:     vec3 v1 = (p1 - wPos);
184:     vec3 v2 = (p2 - wPos);
185:     vec3 v3 = (p3 - wPos);
186:     vec3 v4 = (p4 - wPos);
187:     vec3 n1 = normalize(cross(v1, v2));
188:     vec3 n2 = normalize(cross(v2, v3));
189:     vec3 n3 = normalize(cross(v3, v4));
190:     vec3 n4 = normalize(cross(v4, v1));
191:     return ((((acos(dot((-n1), n2)) + acos(dot((-n2), n3))) + acos(dot((-n3), n4))) + acos(dot((-n4), n1))) - 6.283185307179586);
192: }
193: 
194: 
195: float helper1(float cosTheta, float sinSigmaSqr, float sinTheta)
196: {
197:     float x = sqrt(((1.0 / sinSigmaSqr) - 1.0));
198:     float y = ((-x) * (cosTheta / sinTheta));
199:     float sinThetaSqrtY = (sinTheta * sqrt((1.0 - (y * y))));
200:     return ((((cosTheta * acos(y)) - (x * sinThetaSqrtY)) * sinSigmaSqr) + atan((sinThetaSqrtY / x)));
201: }
202: 
203: 
204: float SLEAardvarkRenderDemo_LightShader_luminousPowerToLuminanceDisk_3Fm00pFf99CfR9hPbaGPImw(float radius)
205: {
206:     return (1.0 / (((radius * radius) * 3.141592653589793) * 3.141592653589793));
207: }
208: 
209: 
210: tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(bool item0, vec3 item1, vec3 item2, float item3, vec3 item4)
211: {
212:     tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d res;
213:     res.Item0 = item0;
214:     res.Item1 = item1;
215:     res.Item2 = item2;
216:     res.Item3 = item3;
217:     res.Item4 = item4;
218:     return res;
219: }
220: 
221: 
222: float SLEAardvarkRenderDemo_LightShader_luminousPowerToLuminanceSphere_UrX1ctp5f0mkaCN8lcAp4g(float radius)
223: {
224:     return (1.0 / ((((radius * radius) * 4.0) * 3.141592653589793) * 3.141592653589793));
225: }
226: 
227: 
228: float SLEAardvarkRenderDemo_LightShader_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(vec3 lDir, vec3 ln, float cutOffInner, float cutOffOuter)
229: {
230:     return clamp(((dot(lDir, (-ln)) - cutOffOuter) / (cutOffInner - cutOffOuter)), 0, 1);
231: }
232: 
233: 
234: float SLEAardvarkRenderDemo_LightShader_luminousPowerToLuminanceRectangle_CSsH8PY0AZ5Q9fWUXd5VQ(vec3 p1, vec3 p2, vec3 p4)
235: {
236:     return (1.0 / ((abs(length((p1 - p2))) * abs(length((p1 - p4)))) * 3.141592653589793));
237: }
238: 
239: 
240: float SLEAardvarkRenderDemo_LightShader_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(float dist)
241: {
242:     float d = max(dist, 0.01);
243:     return (1.0 / (d * d));
244: }
245: 
246: 
247: float helper2(float roughness)
248: {
249:     float r = (roughness + 1.0);
250:     return ((r * r) / 8.0);
251: }
252: 
253: 
254: float SLEAardvarkRenderDemo_BRDF_DistributionGGX_nY0za00tv6jWojDhC5JYWXw(float nDotH, float roughness)
255: {
256:     float a = (roughness * roughness);
257:     float a2 = (a * a);
258:     float deno = (((nDotH * nDotH) * (a2 - 1.0)) + 1.0);
259:     return (a2 / ((3.141592653589793 * deno) * deno));
260: }
261: 
262: 
263: tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double(vec3 item0, vec3 item1, float item2)
264: {
265:     tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double res;
266:     res.Item0 = item0;
267:     res.Item1 = item1;
268:     res.Item2 = item2;
269:     return res;
270: }
271: 
272: 
273: vec3 SLEAardvarkRenderDemo_PBR_diffuseLobe_28BmPU7EzF002N1qCMj5AKQ(vec3 F, float metallic, vec3 albedo)
274: {
275:     return (((vec3(1.0, 1.0, 1.0) - F) * ((1.0 - metallic) * albedo)) / 3.141592653589793);
276: }
277: 
278: 
279: vec3 SLEAardvarkRenderDemo_PBR_f0ClearCoatToSurface_J558wyL5EFxmvuWviPWtyA(vec3 f0Base)
280: {
281:     vec3 sqrtBase = sqrt(f0Base);
282:     vec3 baseIOR = ((1.0 + sqrtBase) / (1.0 - sqrtBase));
283:     return (((baseIOR - 1.5) / (baseIOR + 1.5)) * ((baseIOR - 1.5) / (baseIOR + 1.5)));
284: }
285: 
286: 
287: float SLEAardvarkRenderDemo_BRDF_visibilityAshikhmin_1GWL7ALGseRABCZZ00R7N8g(float nDotV, float nDotL)
288: {
289:     return (1.0 / max(0.001, (4.0 * ((nDotL + nDotV) - (nDotL * nDotV)))));
290: }
291: 
292: 
293: float SLEAardvarkRenderDemo_BRDF_distributionCharlie_9Ai0hRoW1dnTGa2k_n8d7g(float roughness, float nDotH)
294: {
295:     float rcpR = (1.0 / (roughness * roughness));
296:     return (((2.0 + rcpR) * pow((1.0 - (nDotH * nDotH)), (rcpR * 0.5))) / 6.283185307179586);
297: }
298: 
299: 
300: tup_Aardvark_Base_V3d_Aardvark_Base_V3d new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d(vec3 item0, vec3 item1)
301: {
302:     tup_Aardvark_Base_V3d_Aardvark_Base_V3d res;
303:     res.Item0 = item0;
304:     res.Item1 = item1;
305:     return res;
306: }
307: 
308: 
309: tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d(vec3 item0, vec3 item1, vec3 item2, vec3 item3)
310: {
311:     tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d res;
312:     res.Item0 = item0;
313:     res.Item1 = item1;
314:     res.Item2 = item2;
315:     res.Item3 = item3;
316:     return res;
317: }
318: 
319: 
320: vec3 SLEAardvarkRenderDemo_BRDF_fresnelSchlickRoughness_R3fRwUfkUk_vtBtqu24DwA(vec3 f0, float roughness, float cosTheta)
321: {
322:     return (f0 + ((max(vec3((clamp(dot(f0, vec3(16.5, 16.5, 16.5)), 0, 1) - roughness)), f0) - f0) * pow((1.0 - cosTheta), 5.0)));
323: }
324: 
325: 
326: vec2 SLEAardvarkRenderDemo_Shadow_vogelDiskOffset_cR3OqSYynaKjhFMpTsd8fQ(int sampleIndex, int sampleCount, float phi)
327: {
328:     float r = (sqrt((float(sampleIndex) + 0.5)) / sqrt(float(sampleCount)));
329:     float theta = ((float(sampleIndex) * 2.39996) + phi);
330:     return vec2((r * cos(theta)), (r * sin(theta)));
331: }
332: 
333: 
334: vec2 SLEAardvarkRenderDemo_Shadow_avgBlockersDepthToPenumbra_ntc5ns5VYYuiRbvrmwQQGw(vec2 lightSize, float surfaceDepth, float avgBlockersDepth)
335: {
336:     return ((lightSize * (surfaceDepth - avgBlockersDepth)) / avgBlockersDepth);
337: }
338: 
339: 
340: float SLEAardvarkRenderDemo_Shadow_random_1MN50IO3BjRacQVcNxGOSw(vec4 seed)
341: {
342:     return fract((sin(dot(seed, vec4(12.9898, 78.233, 45.164, 94.673))) * 43758.5453));
343: }
344: 
345: 
346: vec3 SLEAardvarkRenderDemo_PBR_specularLobeCloth_3kg1FHZlm5ky7EgqJuXVoQ(vec3 F, float roughness, float nDotH, float nDotV, float nDotL)
347: {
348:     return ((SLEAardvarkRenderDemo_BRDF_distributionCharlie_9Ai0hRoW1dnTGa2k_n8d7g(roughness, nDotH) * SLEAardvarkRenderDemo_BRDF_visibilityAshikhmin_1GWL7ALGseRABCZZ00R7N8g(nDotV, nDotL)) * F);
349: }
350: 
351: 
352: float SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(bool ilb, float nDotV, float roughness)
353: {
354:     float k = (ilb ? ((roughness * roughness) / 2.0) : helper2(roughness));
355:     return (nDotV / ((nDotV * (1.0 - k)) + k));
356: }
357: 
358: 
359: float SLEAardvarkRenderDemo_BRDF_GeometrySmith_6IVwXuh0yVUxTwB0n7MN2w(bool ilb, float nDotV, float nDotL, float roughness)
360: {
361:     return (SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(ilb, nDotL, roughness) * SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(ilb, nDotV, roughness));
362: }
363: 
364: 
365: vec3 SLEAardvarkRenderDemo_PBR_specularLobeStandard_xCDJ00_OVkhQA4IgP6xweOw(vec3 F, float roughness, float nDotH, float nDotV, float nDotL)
366: {
367:     return (((SLEAardvarkRenderDemo_BRDF_DistributionGGX_nY0za00tv6jWojDhC5JYWXw(nDotH, roughness) * SLEAardvarkRenderDemo_BRDF_GeometrySmith_6IVwXuh0yVUxTwB0n7MN2w(false, nDotV, nDotL, roughness)) * F) / max(0.001, ((4.0 * nDotV) * nDotL)));
368: }
369: 
370: 
371: tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double SLEAardvarkRenderDemo_PBR_directclearCoat_DXfZ7Xna_Buw7PyEpqh40w(float clearCoat, float clearCoatRoughness, vec3 clearCoatNormal, vec3 lDir, vec3 v, vec3 h, float hDotV)
372: {
373:     float ccNDotL = clamp(dot(clearCoatNormal, lDir), 0, 1);
374:     vec3 ccF = (clearCoat * SLEAardvarkRenderDemo_BRDF_fresnelSchlick_oKvmgrrRv31EPsFk6qorKg(vec3(0.04, 0.04, 0.04), hDotV));
375:     return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double(ccF, SLEAardvarkRenderDemo_PBR_specularLobeStandard_xCDJ00_OVkhQA4IgP6xweOw(ccF, clearCoatRoughness, clamp(dot(clearCoatNormal, h), 0, 1), clamp(dot(clearCoatNormal, v), 0, 1), ccNDotL), ccNDotL);
376: }
377: 
378: 
379: float SLEAardvarkRenderDemo_LightShader_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(float cosTheta, float sinSigmaSqr)
380: {
381:     float sinTheta = sqrt((1.0 - (cosTheta * cosTheta)));
382:     return max(0.0, (((cosTheta * cosTheta) > sinSigmaSqr) ? ((3.141592653589793 * sinSigmaSqr) * clamp(cosTheta, 0.0, 1.0)) : helper1(cosTheta, sinSigmaSqr, sinTheta)));
383: }
384: 
385: 
386: float SLEAardvarkRenderDemo_LightShader_attenuationSphere_TfcoeJaHdIXDFd7jmK6bvA(vec3 lUnnorm, float radius, vec3 n, vec3 lDir)
387: {
388:     return SLEAardvarkRenderDemo_LightShader_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(clamp(dot(n, lDir), -0.999, 0.999), min(0.9999, ((radius * radius) / dot(lUnnorm, lUnnorm))));
389: }
390: 
391: 
392: float SLEAardvarkRenderDemo_LightShader_attenuationDisk_hLzuCj5zj00GiLEJKhGz99g(vec3 lUnnorm, float radius, vec3 n, vec3 lDir, vec3 ln)
393: {
394:     float radius2 = (radius * radius);
395:     return (SLEAardvarkRenderDemo_LightShader_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(clamp(dot(n, lDir), -0.999, 0.999), (radius2 / (radius2 + max(radius2, dot(lUnnorm, lUnnorm))))) * clamp(dot(ln, (-lDir)), 0, 1));
396: }
397: 
398: 
399: float SLEAardvarkRenderDemo_LightShader_attenuationRectangle_je2tqG4tNH0N0h4ostr9dQ(vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4, vec3 lUnnorm, vec3 ln, vec3 n)
400: {
401:     if((dot((-lUnnorm), ln) > 0.0))
402:     {
403:         return ((max(0.0, SLEAardvarkRenderDemo_LightShader_rectangleSolidAngle_yk0LnyTP2qLGhxTZr4oSHw(wPos, p1, p2, p3, p4)) * 0.2) * ((((clamp(dot(n, normalize(lUnnorm)), 0, 1) + clamp(dot(n, normalize((p1 - wPos))), 0, 1)) + clamp(dot(n, normalize((p2 - wPos))), 0, 1)) + clamp(dot(n, normalize((p3 - wPos))), 0, 1)) + clamp(dot(n, normalize((p4 - wPos))), 0, 1)));
404:     }
405:     else
406:     {
407:         return 0.0;
408:     }
409: }
410: 
411: 
412: float SLEAardvarkRenderDemo_LightShader_traceTriangle_TUj_88KirlHsDKjIMhJJAQ(vec3 o, vec3 d, vec3 A, vec3 B, vec3 C)
413: {
414:     vec3 p = (o + (d * SLEAardvarkRenderDemo_LightShader_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(o, d, A, normalize(cross((B - A), (C - B))))));
415:     vec3 n2 = normalize(cross((C - B), (p - C)));
416:     if(((dot(normalize(cross((B - A), (p - B))), n2) > 0.999) && (dot(n2, normalize(cross((A - C), (p - A)))) > 0.999)))
417:     {
418:         return 1.0;
419:     }
420:     else
421:     {
422:         return 0.0;
423:     }
424: }
425: 
426: 
427: float SLEAardvarkRenderDemo_LightShader_traceRectangle_Y1YWv5k7o5dZMgAY1V3rCQ(vec3 o, vec3 d, vec3 A, vec3 B, vec3 C, vec3 D)
428: {
429:     return max(SLEAardvarkRenderDemo_LightShader_traceTriangle_TUj_88KirlHsDKjIMhJJAQ(o, d, A, B, C), SLEAardvarkRenderDemo_LightShader_traceTriangle_TUj_88KirlHsDKjIMhJJAQ(o, d, C, D, A));
430: }
431: 
432: 
433: vec3 SLEAardvarkRenderDemo_LightShader_representativePointRectangle_7uXB4Za8_80Ps10k1oBj6A(vec3 r, vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4, vec3 ln, vec3 lightPosition)
434: {
435:     if((SLEAardvarkRenderDemo_LightShader_traceRectangle_Y1YWv5k7o5dZMgAY1V3rCQ(wPos, r, p1, p2, p3, p4) > 0.0))
436:     {
437:         return r;
438:     }
439:     else
440:     {
441:         vec3 tracedPlane = (wPos + (r * SLEAardvarkRenderDemo_LightShader_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(wPos, r, lightPosition, ln)));
442:         vec3 pc1 = SLEAardvarkRenderDemo_LightShader_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p1, p2, tracedPlane);
443:         vec3 pc2 = SLEAardvarkRenderDemo_LightShader_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p2, p3, tracedPlane);
444:         vec3 pc3 = SLEAardvarkRenderDemo_LightShader_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p3, p4, tracedPlane);
445:         vec3 pc4 = SLEAardvarkRenderDemo_LightShader_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p4, p1, tracedPlane);
446:         float d2 = distance(pc2, tracedPlane);
447:         float d3 = distance(pc3, tracedPlane);
448:         float minDist = distance(pc1, tracedPlane);
449:         vec3 p = pc1;
450:         if((d2 < minDist))
451:         {
452:             minDist = d2;
453:             p = pc2;
454:         }
455:         if((d3 < minDist))
456:         {
457:             minDist = d3;
458:             p = pc3;
459:         }
460:         if((distance(pc4, tracedPlane) < minDist))
461:         {
462:             p = pc4;
463:         }
464:         return normalize((p - wPos));
465:     }
466: }
467: 
468: 
469: tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d SLEAardvarkRenderDemo_LightShader_getLightParams_y4VJUa8M00qwIr8rIzH00WQ(SLEAardvarkRenderDemo_SLEUniform_Light light, vec3 wPos, vec3 n, vec3 v, float roughness)
470: {
471:     if((light.lightType == 0))
472:     {
473:         return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(false, vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), 1.0, vec3(0.0, 0.0, 0.0));
474:     }
475:     else
476:     {
477:         if((light.lightType == 1))
478:         {
479:             return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, normalize((-light.lightDirection.xyz)), light.color, 1.0, light.color);
480:         }
481:         else
482:         {
483:             if((light.lightType == 2))
484:             {
485:                 vec3 illuminannce = ((light.color * SLEAardvarkRenderDemo_LightShader_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))) * 0.07957747154594767);
486:                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, normalize((light.lightPosition.xyz - wPos)), illuminannce, 1.0, illuminannce);
487:             }
488:             else
489:             {
490:                 if((light.lightType == 3))
491:                 {
492:                     vec3 lDir = normalize((light.lightPosition.xyz - wPos));
493:                     vec3 illuminannce1 = (((light.color * SLEAardvarkRenderDemo_LightShader_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(lDir, normalize(light.lightDirection.xyz), light.cutOffInner, light.cutOffOuter)) * SLEAardvarkRenderDemo_LightShader_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))) * 0.3183098861837907);
494:                     return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, lDir, illuminannce1, 1.0, illuminannce1);
495:                 }
496:                 else
497:                 {
498:                     if((light.lightType == 4))
499:                     {
500:                         vec3 lUnnorm = (light.lightPosition.xyz - wPos);
501:                         vec3 l = SLEAardvarkRenderDemo_LightShader_representativePointSpehre_DvHCJ7t4LLabKB7nbPvi5A(n, v, roughness, lUnnorm, light.radius);
502:                         return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, l, (((light.color * SLEAardvarkRenderDemo_LightShader_attenuationSphere_TfcoeJaHdIXDFd7jmK6bvA(lUnnorm, light.radius, n, normalize(lUnnorm))) * SLEAardvarkRenderDemo_LightShader_luminousPowerToLuminanceSphere_UrX1ctp5f0mkaCN8lcAp4g(light.radius)) / dot(n, l)), 1.0, ((light.color * 0.07957747154594767) * SLEAardvarkRenderDemo_LightShader_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))));
503:                     }
504:                     else
505:                     {
506:                         if((light.lightType == 5))
507:                         {
508:                             vec3 lUnnorm1 = (light.lightPosition.xyz - wPos);
509:                             vec3 ln = normalize(light.lightDirection.xyz);
510:                             float intensity = SLEAardvarkRenderDemo_LightShader_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize((light.virtualPos.xyz - wPos)), ln, light.cutOffInner, light.cutOffOuter);
511:                             vec3 r = SLEAardvarkRenderDemo_LightShader_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
512:                             vec3 l1 = SLEAardvarkRenderDemo_LightShader_representativePointDisk_wKhAwWDNYwPsVTi00Wbf63g(r, wPos, light.radius, ln, light.lightPosition.xyz, lUnnorm1);
513:                             return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, l1, ((((light.color * intensity) * SLEAardvarkRenderDemo_LightShader_attenuationDisk_hLzuCj5zj00GiLEJKhGz99g(lUnnorm1, light.radius, n, normalize(lUnnorm1), ln)) * SLEAardvarkRenderDemo_LightShader_luminousPowerToLuminanceDisk_3Fm00pFf99CfR9hPbaGPImw(light.radius)) / dot(n, l1)), clamp(abs(dot(ln, r)), 0, 1), (((light.color * intensity) * 0.3183098861837907) * SLEAardvarkRenderDemo_LightShader_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))));
514:                         }
515:                         else
516:                         {
517:                             if((light.lightType == 6))
518:                             {
519:                                 vec3 ln1 = normalize(light.lightDirection.xyz);
520:                                 vec4 d1 = (vec4(normalize((light.virtualPos.xyz - wPos)), 0.0) * light.fromWorld);
521:                                 vec4 d3 = (vec4(normalize((light.virtualPos2.xyz - wPos)), 0.0) * light.fromWorld);
522:                                 float intensity1 = (SLEAardvarkRenderDemo_LightShader_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize(vec3(d1.x, d1.y, 0.0)), vec3(0.0, 1.0, 0.0), light.cutOffInner, light.cutOffOuter) * SLEAardvarkRenderDemo_LightShader_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize(vec3(0.0, d3.y, d3.z)), vec3(0.0, 1.0, 0.0), light.cutOffInner, light.cutOffOuter));
523:                                 vec3 r1 = SLEAardvarkRenderDemo_LightShader_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
524:                                 vec3 l2 = SLEAardvarkRenderDemo_LightShader_representativePointRectangle_7uXB4Za8_80Ps10k1oBj6A(r1, wPos, light.p1, light.p2, light.p3, light.p4, ln1, light.lightPosition.xyz);
525:                                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, l2, ((((light.color * intensity1) * SLEAardvarkRenderDemo_LightShader_attenuationRectangle_je2tqG4tNH0N0h4ostr9dQ(wPos, light.p1, light.p2, light.p3, light.p4, (light.lightPosition.xyz - wPos), ln1, n)) * SLEAardvarkRenderDemo_LightShader_luminousPowerToLuminanceRectangle_CSsH8PY0AZ5Q9fWUXd5VQ(light.p1, light.p2, light.p4)) / dot(n, l2)), clamp(abs(dot(ln1, r1)), 0, 1), (((light.color * intensity1) * 0.3183098861837907) * SLEAardvarkRenderDemo_LightShader_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))));
526:                             }
527:                             else
528:                             {
529:                                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(false, vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), 1.0, vec3(0.0, 0.0, 0.0));
530:                             }
531:                         }
532:                     }
533:                 }
534:             }
535:         }
536:     }
537: }
538: 
539: 
540: 
541: #ifdef Vertex
542: 
543: layout(location = 0) in vec2 DiffuseColorCoordinates;
544: layout(location = 1) in vec3 DiffuseColorUTangents;
545: layout(location = 2) in vec3 DiffuseColorVTangents;
546: layout(location = 3) in vec3 Normals;
547: layout(location = 4) in vec4 Positions;
548: layout(location = 0) out vec2 tc_DiffuseColorCoordinates;
549: layout(location = 1) out vec3 tc_DiffuseColorUTangents;
550: layout(location = 2) out vec3 tc_DiffuseColorVTangents;
551: layout(location = 3) out vec3 tc_Normals;
552: layout(location = 4) out vec4 tc_WorldPosition;
553: void main()
554: {
555:     tc_DiffuseColorCoordinates = DiffuseColorCoordinates;
556:     tc_DiffuseColorUTangents = (vec4(DiffuseColorUTangents, 0.0) * ModelTrafo).xyz;
557:     tc_DiffuseColorVTangents = (vec4(DiffuseColorVTangents, 0.0) * ModelTrafo).xyz;
558:     tc_Normals = (ModelTrafoInv * vec4(Normals, 0.0)).xyz;
559:     tc_WorldPosition = (Positions * ModelTrafo);
560: }
561: 
562: #endif
563: 
564: 
565: 
566: #ifdef TessControl
567: 
568: layout(vertices = 3) out;
569: layout(location = 0) in vec2 tc_DiffuseColorCoordinates[];
570: layout(location = 1) in vec3 tc_DiffuseColorUTangents[];
571: layout(location = 2) in vec3 tc_DiffuseColorVTangents[];
572: layout(location = 3) in vec3 tc_Normals[];
573: layout(location = 4) in vec4 tc_WorldPosition[];
574: layout(location = 0) out vec2 te_DiffuseColorCoordinates[];
575: layout(location = 1) out vec3 te_DiffuseColorUTangents[];
576: layout(location = 2) out vec3 te_DiffuseColorVTangents[];
577: layout(location = 3) out vec3 te_Normals[];
578: layout(location = 4) out vec4 te_WorldPosition[];
579: void main()
580: {
581:     if((gl_InvocationID == 0))
582:     {
583:         float level = ((DisplacmentStrength == 0.0) ? 1.0 : 32.0);
584:         gl_TessLevelInner[0] = level;
585:         gl_TessLevelOuter[0] = level;
586:         gl_TessLevelOuter[1] = level;
587:         gl_TessLevelOuter[2] = level;
588:     }
589:     te_DiffuseColorCoordinates[gl_InvocationID] = tc_DiffuseColorCoordinates[gl_InvocationID];
590:     te_DiffuseColorUTangents[gl_InvocationID] = tc_DiffuseColorUTangents[gl_InvocationID];
591:     te_DiffuseColorVTangents[gl_InvocationID] = tc_DiffuseColorVTangents[gl_InvocationID];
592:     te_Normals[gl_InvocationID] = tc_Normals[gl_InvocationID];
593:     te_WorldPosition[gl_InvocationID] = tc_WorldPosition[gl_InvocationID];
594: }
595: 
596: #endif
597: 
598: 
599: 
600: #ifdef TessEval
601: 
602: layout(triangles, equal_spacing, ccw) in;
603: layout(location = 0) in vec2 te_DiffuseColorCoordinates[];
604: layout(location = 1) in vec3 te_DiffuseColorUTangents[];
605: layout(location = 2) in vec3 te_DiffuseColorVTangents[];
606: layout(location = 3) in vec3 te_Normals[];
607: layout(location = 4) in vec4 te_WorldPosition[];
608: layout(location = 0) out vec2 fs_DiffuseColorCoordinates;
609: layout(location = 1) out vec3 fs_DiffuseColorUTangents;
610: layout(location = 2) out vec3 fs_DiffuseColorVTangents;
611: layout(location = 3) out vec3 fs_Normals;
612: layout(location = 4) out vec4 fs_WorldPosition;
613: void main()
614: {
615:     vec3 n = normalize((((gl_TessCoord.x * te_Normals[0]) + (gl_TessCoord.y * te_Normals[1])) + (gl_TessCoord.z * te_Normals[2])));
616:     vec2 tc = (((gl_TessCoord.x * te_DiffuseColorCoordinates[0]) + (gl_TessCoord.y * te_DiffuseColorCoordinates[1])) + (gl_TessCoord.z * te_DiffuseColorCoordinates[2]));
617:     vec4 wp = ((((gl_TessCoord.x * te_WorldPosition[0]) + (gl_TessCoord.y * te_WorldPosition[1])) + (gl_TessCoord.z * te_WorldPosition[2])) + vec4((n * ((-0.5 + texture(samplerDisp, tc).x) * DisplacmentStrength)), 0.0));
618:     fs_DiffuseColorCoordinates = tc;
619:     fs_DiffuseColorUTangents = (((gl_TessCoord.x * te_DiffuseColorUTangents[0]) + (gl_TessCoord.y * te_DiffuseColorUTangents[1])) + (gl_TessCoord.z * te_DiffuseColorUTangents[2]));
620:     fs_DiffuseColorVTangents = (((gl_TessCoord.x * te_DiffuseColorVTangents[0]) + (gl_TessCoord.y * te_DiffuseColorVTangents[1])) + (gl_TessCoord.z * te_DiffuseColorVTangents[2]));
621:     fs_Normals = n;
622:     gl_Position = (wp * ViewProjTrafo);
623:     fs_WorldPosition = wp;
624: }
625: 
626: #endif
627: 
628: 
629: 
630: #ifdef Fragment
631: 
632: vec2 SLEAardvarkRenderDemo_Shadow_penumbra_xPgf541Zi7aStHEY_SGbgw(float noise, vec2 shadowMapUV, float surfaceDepth, vec2 lightSize)
633: {
634:     float avgBlockersDepth = 0.0;
635:     float blockersCount = 0.0;
636:     for(int i = 0; (i < 16); i++)
637:     {
638:         float sampleDepth = texture(samplerShadowMapTex, (shadowMapUV + (SLEAardvarkRenderDemo_Shadow_vogelDiskOffset_cR3OqSYynaKjhFMpTsd8fQ(i, 16, noise) / 100.0))).x;
639:         if((sampleDepth < surfaceDepth))
640:         {
641:             avgBlockersDepth = (avgBlockersDepth + sampleDepth);
642:             blockersCount = (blockersCount + 1.0);
643:         }
644:     }
645:     if((blockersCount > 0.0))
646:     {
647:         avgBlockersDepth = (avgBlockersDepth / blockersCount);
648:         return SLEAardvarkRenderDemo_Shadow_avgBlockersDepthToPenumbra_ntc5ns5VYYuiRbvrmwQQGw(lightSize, surfaceDepth, avgBlockersDepth);
649:     }
650:     else
651:     {
652:         return vec2(0.0, 0.0);
653:     }
654: }
655: 
656: vec2 SLEAardvarkRenderDemo_Shadow_lightWidth_LXD3gVwklkgvV5JWo3yVwg()
657: {
658:     if((Light.lightType == 0))
659:     {
660:         return vec2(0.01, 0.01);
661:     }
662:     else
663:     {
664:         if((Light.lightType == 1))
665:         {
666:             return vec2(0.01, 0.01);
667:         }
668:         else
669:         {
670:             if((Light.lightType == 2))
671:             {
672:                 return vec2(0.01, 0.01);
673:             }
674:             else
675:             {
676:                 if((Light.lightType == 3))
677:                 {
678:                     return vec2(0.01, 0.01);
679:                 }
680:                 else
681:                 {
682:                     if((Light.lightType == 4))
683:                     {
684:                         return vec2(max(0.01, (Light.radius * 2.0)));
685:                     }
686:                     else
687:                     {
688:                         if((Light.lightType == 5))
689:                         {
690:                             return vec2(max(0.01, (Light.radius * 2.0)));
691:                         }
692:                         else
693:                         {
694:                             if((Light.lightType == 6))
695:                             {
696:                                 return vec2(max(0.01, length((Light.p1 - Light.p4))), max(0.01, length((Light.p1 - Light.p2))));
697:                             }
698:                             else
699:                             {
700:                                 return vec2(0.01, 0.01);
701:                             }
702:                         }
703:                     }
704:                 }
705:             }
706:         }
707:     }
708: }
709: 
710: float SLEAardvarkRenderDemo_Shadow_vogelDiskSampling_lwchxL5jglAwqwkoagx25Q(float noise, vec4 pos, vec2 spread)
711: {
712:     float vis = 0.0;
713:     for(int i = 0; (i < 16); i++)
714:     {
715:         vec4 p = (pos + vec4((SLEAardvarkRenderDemo_Shadow_vogelDiskOffset_cR3OqSYynaKjhFMpTsd8fQ(i, 16, noise) * spread), 0.0, 0.0));
716:         vec4 samplePos = (0.5 + (0.5 * (p / p.w)));
717:         vis = (vis + (texture(samplerShadowMap, vec3(samplePos.xy, (samplePos.z - 0.005))) / 16.0));
718:     }
719:     return vis;
720: }
721: 
722: float SLEAardvarkRenderDemo_Shadow_getShadow_weoToE6531isz200PO6ibGQ(vec4 wPos)
723: {
724:     vec4 lightSpacePos = (wPos * LightViewProjMatrix);
725:     vec4 samplePos = (0.5 + (0.5 * (lightSpacePos / lightSpacePos.w)));
726:     float noise = (6.283185307179586 * SLEAardvarkRenderDemo_Shadow_random_1MN50IO3BjRacQVcNxGOSw(samplePos));
727:     return SLEAardvarkRenderDemo_Shadow_vogelDiskSampling_lwchxL5jglAwqwkoagx25Q(noise, lightSpacePos, SLEAardvarkRenderDemo_Shadow_penumbra_xPgf541Zi7aStHEY_SGbgw(noise, samplePos.xy, samplePos.z, SLEAardvarkRenderDemo_Shadow_lightWidth_LXD3gVwklkgvV5JWo3yVwg()));
728: }
729: 
730: vec3 helper(vec2 DiffuseColorCoordinates, vec3 DiffuseColorUTangents, vec3 DiffuseColorVTangents, vec3 Normals)
731: {
732:     vec3 cctexNormal = normalize(((2.0 * texture(clearCoatNormalSampler, DiffuseColorCoordinates).xyz) - vec3(1.0, 1.0, 1.0)));
733:     return normalize((((normalize(Normals) * cctexNormal.z) + (normalize(DiffuseColorUTangents) * cctexNormal.x)) + (normalize(DiffuseColorVTangents) * cctexNormal.y)));
734: }
735: 
736: vec3 SLEAardvarkRenderDemo_PBR_ambientDiffuse_FO200c5yUsICHiCJedhAjRA(vec3 kdA, vec3 albedo, vec3 n)
737: {
738:     return ((kdA * texture(diffuseIrradianceSampler, n).xyz) * albedo);
739: }
740: 
741: tup_Aardvark_Base_V3d_Aardvark_Base_V3d SLEAardvarkRenderDemo_PBR_ambienClearCoat_LyzQK3qsGlATrBMN90lCuw(float clearCoat, float clearCoatRoughness, vec3 clearCoatNormal, vec3 v, vec3 r, vec3 diffuse, vec3 specular)
742: {
743:     if((clearCoat == 0.0))
744:     {
745:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d(diffuse, specular);
746:     }
747:     else
748:     {
749:         float ccNDotV = max(0.0, dot(clearCoatNormal, v));
750:         vec3 cckSA = (clearCoat * SLEAardvarkRenderDemo_BRDF_fresnelSchlickRoughness_R3fRwUfkUk_vtBtqu24DwA(vec3(0.04, 0.04, 0.04), clearCoatRoughness, ccNDotV));
751:         vec2 ccbrdf = texture(samplerBRDFLtu, vec2(ccNDotV, clearCoatRoughness)).xy;
752:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d((diffuse * (1.0 - cckSA)), ((specular * (1.0 - cckSA)) + (textureLod(prefilteredSpecColorSampler, r, (clearCoatRoughness * 4.0)).xyz * ((cckSA * ccbrdf.x) + ccbrdf.y))));
753:     }
754: }
755: 
756: tup_Aardvark_Base_V3d_Aardvark_Base_V3d SLEAardvarkRenderDemo_PBR_ambientSheen_ZrpU5vAusEQekIe870lJuw(vec3 sheenColor, float sheenRoughness, float nDotV, vec3 r, vec3 diffuse, vec3 specular)
757: {
758:     if((sheenColor == vec3(0.0, 0.0, 0.0)))
759:     {
760:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d(diffuse, specular);
761:     }
762:     else
763:     {
764:         float sheenDFG = texture(samplerBRDFLtu, vec2(nDotV, sheenRoughness)).z;
765:         float sheenScaling = (1.0 - (max(sheenColor.x,max(sheenColor.y,sheenColor.z)) * sheenDFG));
766:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d((diffuse * sheenScaling), ((specular * sheenScaling) + ((textureLod(prefilteredSpecColorSampler, r, (sheenRoughness * 4.0)).xyz * sheenColor) * sheenDFG)));
767:     }
768: }
769: 
770: vec3 SLEAardvarkRenderDemo_PBR_ambientSpecular_RV5qqg9LWycqoVezPTSlLw(vec3 kSA, float roughness, float nDotV, vec3 r)
771: {
772:     vec3 brdf = texture(samplerBRDFLtu, vec2(nDotV, roughness)).xyz;
773:     return (textureLod(prefilteredSpecColorSampler, r, (roughness * 4.0)).xyz * ((kSA * brdf.x) + brdf.y));
774: }
775: 
776: tup_Aardvark_Base_V3d_Aardvark_Base_V3d SLEAardvarkRenderDemo_PBR_ambientLight_FS3XKzAEzYSlAL1f00P5PLg(float metallic, vec4 c, vec4 wp, vec3 n, float clearCoat, float roughness, vec3 sheenColor, float sheenRoughness, float clearCoatRoughness, vec3 clearCoatNormal)
777: {
778:     if((metallic < 0.0))
779:     {
780:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d(c.xyz, vec3(0.0, 0.0, 0.0));
781:     }
782:     else
783:     {
784:         vec3 v = normalize((CameraLocation - wp.xyz));
785:         vec3 r = reflect(n, (-v));
786:         vec3 f0Base = mix(vec3(0.04, 0.04, 0.04), c.xyz, metallic);
787:         float nDotV = max(0.0, dot(n, v));
788:         vec3 kSA = SLEAardvarkRenderDemo_BRDF_fresnelSchlickRoughness_R3fRwUfkUk_vtBtqu24DwA(mix(f0Base, SLEAardvarkRenderDemo_PBR_f0ClearCoatToSurface_J558wyL5EFxmvuWviPWtyA(f0Base), clearCoat), roughness, nDotV);
789:         tup_Aardvark_Base_V3d_Aardvark_Base_V3d patternInput = SLEAardvarkRenderDemo_PBR_ambientSheen_ZrpU5vAusEQekIe870lJuw(sheenColor, sheenRoughness, nDotV, r, SLEAardvarkRenderDemo_PBR_ambientDiffuse_FO200c5yUsICHiCJedhAjRA(((1.0 - kSA) * (1.0 - metallic)), c.xyz, n), SLEAardvarkRenderDemo_PBR_ambientSpecular_RV5qqg9LWycqoVezPTSlLw(kSA, roughness, nDotV, r));
790:         tup_Aardvark_Base_V3d_Aardvark_Base_V3d patternInput1 = SLEAardvarkRenderDemo_PBR_ambienClearCoat_LyzQK3qsGlATrBMN90lCuw(clearCoat, clearCoatRoughness, clearCoatNormal, v, r, patternInput.Item0, patternInput.Item1);
791:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d((patternInput1.Item0 * AmbientIntensity), (patternInput1.Item1 * AmbientIntensity));
792:     }
793: }
794: 
795: tup_Aardvark_Base_V3d_Aardvark_Base_V3d SLEAardvarkRenderDemo_PBR_directSheen_0mQlUk_ngWYQ4gtBGreByg(vec3 sheenColor, float sheenRoughness, float nDotH, float nDotV, float nDotL, vec3 diffuse, vec3 specular)
796: {
797:     if((sheenColor == vec3(0.0, 0.0, 0.0)))
798:     {
799:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d(diffuse, specular);
800:     }
801:     else
802:     {
803:         float sheenScaling = (1.0 - (max(sheenColor.x,max(sheenColor.y,sheenColor.z)) * texture(samplerBRDFLtu, vec2(nDotV, sheenRoughness)).z));
804:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d((diffuse * sheenScaling), ((specular * sheenScaling) + SLEAardvarkRenderDemo_PBR_specularLobeCloth_3kg1FHZlm5ky7EgqJuXVoQ(sheenColor, sheenRoughness, nDotH, nDotV, nDotL)));
805:     }
806: }
807: 
808: tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d SLEAardvarkRenderDemo_PBR_directLighting_vnCcBOgIE00UaU7Ie8vn4HA(float metallic, vec4 wp, vec4 c, vec3 n, vec3 clearCoatNormal, float clearCoat, float roughness, vec3 sheenColor, float sheenRoughness, float clearCoatRoughness, SLEAardvarkRenderDemo_SLEUniform_Light light)
809: {
810:     if((metallic < 0.0))
811:     {
812:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0));
813:     }
814:     else
815:     {
816:         vec3 v = normalize((CameraLocation - wp.xyz));
817:         tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d patternInput = SLEAardvarkRenderDemo_LightShader_getLightParams_y4VJUa8M00qwIr8rIzH00WQ(light, wp.xyz, mix(n, clearCoatNormal, clearCoat), v, roughness);
818:         vec3 h = normalize((v + patternInput.Item1));
819:         float nDotL = clamp(dot(n, patternInput.Item1), 0, 1);
820:         float hDotV = clamp(dot(h, v), 0, 1);
821:         float nDotH = clamp(dot(n, h), 0, 1);
822:         float nDotV = clamp(dot(n, v), 0, 1);
823:         vec3 f0Base = mix(vec3(0.04, 0.04, 0.04), c.xyz, metallic);
824:         vec3 F = SLEAardvarkRenderDemo_BRDF_fresnelSchlick_oKvmgrrRv31EPsFk6qorKg(mix(f0Base, SLEAardvarkRenderDemo_PBR_f0ClearCoatToSurface_J558wyL5EFxmvuWviPWtyA(f0Base), clearCoat), hDotV);
825:         tup_Aardvark_Base_V3d_Aardvark_Base_V3d patternInput1 = SLEAardvarkRenderDemo_PBR_directSheen_0mQlUk_ngWYQ4gtBGreByg(sheenColor, sheenRoughness, nDotH, nDotV, nDotL, SLEAardvarkRenderDemo_PBR_diffuseLobe_28BmPU7EzF002N1qCMj5AKQ(F, metallic, c.xyz), (SLEAardvarkRenderDemo_PBR_specularLobeStandard_xCDJ00_OVkhQA4IgP6xweOw(F, roughness, nDotH, nDotV, nDotL) * patternInput.Item3));
826:         vec3 diff1 = ((patternInput1.Item0 * nDotL) * patternInput.Item2);
827:         if((clearCoat == 0.0))
828:         {
829:             return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d(diff1, ((patternInput1.Item1 * patternInput.Item2) * nDotL), patternInput.Item1, patternInput.Item4);
830:         }
831:         else
832:         {
833:             tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double patternInput2 = SLEAardvarkRenderDemo_PBR_directclearCoat_DXfZ7Xna_Buw7PyEpqh40w(clearCoat, clearCoatRoughness, clearCoatNormal, patternInput.Item1, v, h, hDotV);
834:             return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d((diff1 * (vec3(1.0, 1.0, 1.0) - patternInput2.Item0)), ((((patternInput1.Item1 * (vec3(1.0, 1.0, 1.0) - patternInput2.Item0)) * nDotL) + (patternInput2.Item1 * patternInput2.Item2)) * patternInput.Item2), patternInput.Item1, patternInput.Item4);
835:         }
836:     }
837: }
838: 
839: layout(location = 0) in vec2 fs_DiffuseColorCoordinates;
840: layout(location = 1) in vec3 fs_DiffuseColorUTangents;
841: layout(location = 2) in vec3 fs_DiffuseColorVTangents;
842: layout(location = 3) in vec3 fs_Normals;
843: layout(location = 4) in vec4 fs_WorldPosition;
844: layout(location = 0) out vec4 DiffuseOut;
845: layout(location = 1) out vec4 SpecularOut;
846: void main()
847: {
848:     vec3 texNormal = normalize(((2.0 * texture(normalSampler, fs_DiffuseColorCoordinates).xyz) - vec3(1.0, 1.0, 1.0)));
849:     vec3 n = normalize((((normalize(fs_Normals) * texNormal.z) + (normalize(fs_DiffuseColorUTangents) * texNormal.x)) + (normalize(fs_DiffuseColorVTangents) * texNormal.y)));
850:     if(Discard)
851:     {
852:         discard;
853:     }
854:     float sheenRoughnessC = (SheenRoughness * texture(sheenRoughnessSampler, fs_DiffuseColorCoordinates).x);
855:     vec3 sheenColorC = pow(((SheenColor * SheenColorFactor) * texture(sheenColorSampler, fs_DiffuseColorCoordinates).xyz), vec3(2.2, 2.2, 2.2));
856:     float RoughnessC = (Roughness * texture(roughnessSampler, fs_DiffuseColorCoordinates).x);
857:     vec3 NormalsC = normalize(mix(fs_Normals, n, NormalMapStrength));
858:     float MetallicC = (Metallic * texture(metallicSampler, fs_DiffuseColorCoordinates).x);
859:     vec4 ColorsC = vec4(pow(((texture(albedoSampler, fs_DiffuseColorCoordinates) * AlbedoColor).xyz * AlbedoFactor), vec3(2.2, 2.2, 2.2)), 1.0);
860:     float ClearCoatRoughnessC = (ClearCoatRoughness * texture(clearCoatRoughnessSampler, fs_DiffuseColorCoordinates).x);
861:     vec3 ClearCoatNormalC = normalize(mix(fs_Normals, (UseNormalsForClearCoat ? n : helper(fs_DiffuseColorCoordinates, fs_DiffuseColorUTangents, fs_DiffuseColorVTangents, fs_Normals)), ClearCoatNormalStrength));
862:     float ClearCoatC = (ClearCoat * texture(clearCoatSampler, fs_DiffuseColorCoordinates).x);
863:     tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d patternInput = SLEAardvarkRenderDemo_PBR_directLighting_vnCcBOgIE00UaU7Ie8vn4HA(MetallicC, fs_WorldPosition, ColorsC, NormalsC, ClearCoatNormalC, ClearCoatC, RoughnessC, sheenColorC, sheenRoughnessC, ClearCoatRoughnessC, Light);
864:     tup_Aardvark_Base_V3d_Aardvark_Base_V3d patternInput1 = SLEAardvarkRenderDemo_PBR_ambientLight_FS3XKzAEzYSlAL1f00P5PLg(MetallicC, ColorsC, fs_WorldPosition, NormalsC, ClearCoatC, RoughnessC, sheenColorC, sheenRoughnessC, ClearCoatRoughnessC, ClearCoatNormalC);
865:     float shadow = SLEAardvarkRenderDemo_Shadow_getShadow_weoToE6531isz200PO6ibGQ(fs_WorldPosition);
866:     DiffuseOut = vec4(((patternInput.Item0 * shadow) + patternInput1.Item0), 1.0);
867:     SpecularOut = vec4(((patternInput.Item1 * shadow) + patternInput1.Item1), 1.0);
868: }
869: 
870: #endif

 2: [GL] RenderObjects: +61/-0 (5889ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (5911ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (7597ms)
 2: using optimized native program
 2: texture created
 2: [GL] RenderObjects: +2/-0 (7605ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (7631ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (8459ms)
 2: using optimized native program
 3: [Client] 1: stopped
