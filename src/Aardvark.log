 0: initializing aardvark ........................................................................
 0:   System Information:
 0:     System:      Microsoft Windows 10.0.18362
 0:     Processor:   4 core x64
 0:     Process:     x64
 0:     Framework:   .NET Core 3.1.4
 0:   Loading native dependencies for Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: linux/AMD64/libglfw.so.3
 0:     found: mac/AMD64/libglfw.3.dylib
 0:     found: windows/AMD64/glfw3.dll
 0:     copy glfw3.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Application.Slim.GL-32f42d4c-4cb0-88cf-a5d3-8c852c69d925-64\glfw3.dll
 0:     found: windows/x86/glfw3.dll
 0:   Loading native dependencies for Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 0.036 s
 0:   Loading native dependencies for Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: linux/AMD64/glvm.so
 0:     found: mac/AMD64/glvm.dylib
 0:     found: windows/AMD64/glvm.dll
 0:     copy glvm.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.dll
 0:     found: windows/AMD64/glvm.exp
 0:     copy glvm.exp to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.exp
 0:     found: windows/AMD64/glvm.iobj
 0:     copy glvm.iobj to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.iobj
 0:     found: windows/AMD64/glvm.ipdb
 0:     copy glvm.ipdb to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.ipdb
 0:     found: windows/AMD64/glvm.lib
 0:     copy glvm.lib to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.lib
 0:     found: windows/AMD64/glvm.pdb
 0:     copy glvm.pdb to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.pdb
 0:     found: windows/x86/glvm.dll
 0:     found: windows/x86/glvm.exp
 0:     found: windows/x86/glvm.iobj
 0:     found: windows/x86/glvm.ipdb
 0:     found: windows/x86/glvm.lib
 0:     found: windows/x86/glvm.pdb
 0:   Loading native dependencies for Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 0.115 s
 0:   Loading native dependencies for Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: remap.xml
 0:     found: linux/AMD64/libturbojpeg.so
 0:     found: mac/AMD64/libturbojpeg.dylib
 0:     found: windows/AMD64/turbojpeg.dll
 0:     copy turbojpeg.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Service-6c07790d-9ae8-a533-bcc3-f89762a0781f-64\turbojpeg.dll
 0:     found: windows/x86/turbojpeg.dll
 0:   Loading native dependencies for Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 0.041 s
 0:   Loading plugins ............................................................................
 0:     [LoadPlugins] Using plugin cache file name: C:\Users\Stefan\AppData\Roaming\Aardvark\cache\AardvarkRenderDemo_plugins.bin
 0:     [ReadCacheFile] loaded cache file: C:\Users\Stefan\AppData\Roaming\Aardvark\cache\AardvarkRenderDemo_plugins.bin
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardium.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Application.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Application.Slim.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Application.Slim.GL.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Application.Slim.Vulkan.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.Essentials.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.FSharp.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.Incremental.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.Rendering.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.Runtime.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.Telemetry.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.TypeProviders.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.GPGPU.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Rendering.GL.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Rendering.Vulkan.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.SceneGraph.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.SceneGraph.IO.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Service.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.UI.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.UI.Primitives.dll
 0:     [GetPluginAssemblyPaths] retrying to load because not in cache D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\AardvarkRenderDemo.dll
 0:     [GetPluginAssemblyPaths] retrying to load because not in cache D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\AardvarkRenderDemo.exe
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Adaptify.Core.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\AssimpNet.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\DevILSharp.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FShade.Core.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FShade.GLSL.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FShade.Imperative.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FShade.SpirV.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FSharp.Core.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FSharp.Data.Adaptive.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FsPickler.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FsPickler.Json.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\GLSLangSharp.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Microsoft.DotNet.PlatformAbstractions.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Microsoft.Extensions.DependencyModel.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Newtonsoft.Json.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\OpenTK.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Silk.NET.Core.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Silk.NET.GLFW.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Suave.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\System.Collections.Immutable.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\System.Reactive.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\System.Runtime.CompilerServices.Unsafe.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\System.Text.Json.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Ultz.SuperInvoke.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Ultz.SuperInvoke.Loader.dll
 0:   Loading plugins .................................................................... 0.129 s
 0:   using cache dir: C:\Users\Stefan\AppData\Roaming\Aardvark\cache
 0:   Loading native dependencies for DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: remap.xml
 0:     found: mac/AMD64/libDevIL.dylib
 0:     found: mac/AMD64/libILU.dylib
 0:     found: mac/AMD64/libILUT.dylib
 0:     found: windows/AMD64/DevIL.dll
 0:     copy DevIL.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64\DevIL.dll
 0:     found: windows/AMD64/ILU.dll
 0:     copy ILU.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64\ILU.dll
 0:     found: windows/AMD64/ILUT.dll
 0:     copy ILUT.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64\ILUT.dll
 0:     found: windows/x86/DevIL.dll
 0:     found: windows/x86/ILU.dll
 0:     found: windows/x86/ILUT.dll
 0:   Loading native dependencies for DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null 0.066 s
 0:   Loading native dependencies for Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: remap.xml
 0:     found: linux/AMD64/libvkvm.so
 0:     found: windows/AMD64/vkvm.dll
 0:     copy vkvm.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64\vkvm.dll
 0:     found: windows/AMD64/vkvm.exp
 0:     copy vkvm.exp to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64\vkvm.exp
 0:     found: windows/AMD64/vkvm.lib
 0:     copy vkvm.lib to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64\vkvm.lib
 0:     found: windows/AMD64/vkvm.pdb
 0:     copy vkvm.pdb to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64\vkvm.pdb
 0:     found: windows/x86/vkvm.dll
 0:     found: windows/x86/vkvm.exp
 0:     found: windows/x86/vkvm.lib
 0:     found: windows/x86/vkvm.pdb
 0:   Loading native dependencies for Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 0.056 s
 0:   Loading native dependencies for GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: linux/AMD64/libGLSLangNative.so
 0:     found: windows/AMD64/GLSLangNative.dll
 0:     copy GLSLangNative.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.dll
 0:     found: windows/AMD64/GLSLangNative.exp
 0:     copy GLSLangNative.exp to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.exp
 0:     found: windows/AMD64/GLSLangNative.iobj
 0:     copy GLSLangNative.iobj to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.iobj
 0:     found: windows/AMD64/GLSLangNative.ipdb
 0:     copy GLSLangNative.ipdb to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.ipdb
 0:     found: windows/AMD64/GLSLangNative.lib
 0:     copy GLSLangNative.lib to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.lib
 0:     found: windows/AMD64/GLSLangNative.pdb
 0:     copy GLSLangNative.pdb to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.pdb
 0:   Loading native dependencies for GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null 0.103 s
 0:   Loading native dependencies for AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: linux/AMD64/libassimp.so
 0:     found: mac/AMD64/libassimp.dylib
 0:     found: windows/AMD64/Assimp64.dll
 0:     copy Assimp64.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64\Assimp64.dll
 0:     found: windows/x86/Assimp32.dll
 0:   Loading native dependencies for AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null 0.053 s
 0:   [cache miss] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:   [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:   [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   initializing PixImageDevil .................................................................
 0:     probing paths for DevIL
 0:       D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:       C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64
 0:     [Introspection] loaded native library DevIL from C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64\DevIL.dll
 0:   initializing PixImageDevil ......................................................... 0.049 s
 0:   [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   initializing CustomPicklerProvider .........................................................
 0:     [cache miss] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     installing pickler: Aardvark.Base.Picklers.AdaptivePicklers
 0:   initializing CustomPicklerProvider ................................................. 0.180 s
 0:   [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   initializing SceneGraphCompletenessCheck ...................................................
 0:     [cache miss] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache miss] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   initializing SceneGraphCompletenessCheck ........................................... 0.230 s
 0:   [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:   [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.SceneGraph.IO, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   initializing Loader ................................................................ 0.000 s
 0: initializing aardvark ................................................................ 2.336 s
 0: probing paths for nvapi64
 0:   D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Application.Slim.GL-32f42d4c-4cb0-88cf-a5d3-8c852c69d925-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Service-6c07790d-9ae8-a533-bcc3-f89762a0781f-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64
 0: [Introspection] could not load native library nvapi64.dll
 0: trying to resolve native library libEGL.dll
 0: probing paths for libEGL
 0:   D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Application.Slim.GL-32f42d4c-4cb0-88cf-a5d3-8c852c69d925-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Service-6c07790d-9ae8-a533-bcc3-f89762a0781f-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64
 0: [Introspection] could not load native library libEGL.dll
 0: OpenGL 4.5 working
 0: backbuffer
 0:   color: R8G8B8A8
 0:   depth: D24S8
 0: probing paths for glvm
 0:   D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0: [Introspection] loaded native library glvm from C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.dll
 0: backbuffer
 0:   color: R8G8B8A8
 0:   depth: D24S8
 0: initializing OpenGL runtime ..................................................................
 0:   probing paths for glvm
 0:     D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Application.Slim.GL-32f42d4c-4cb0-88cf-a5d3-8c852c69d925-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Service-6c07790d-9ae8-a533-bcc3-f89762a0781f-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64
 0:   [Introspection] loaded native library glvm from C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.dll
 0:   probing paths for Opengl32
 0:     D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Application.Slim.GL-32f42d4c-4cb0-88cf-a5d3-8c852c69d925-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Service-6c07790d-9ae8-a533-bcc3-f89762a0781f-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64
 0:   [Introspection] loaded native library Opengl32.dll from Opengl32.dll
 0:   probing paths for opengl32
 0:     D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:   [Introspection] loaded native library opengl32.dll from opengl32.dll
 0:   probing paths for kernel32
 0:     D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:   [Introspection] loaded native library kernel32.dll from kernel32.dll
 0:   vendor:   "ATI Technologies Inc."
 0:   renderer: "AMD Radeon (TM) R9 380 Series"
 0:   version:  OpenGL 4.5.13559 / GLSL 4.6
 0: initializing OpenGL runtime .......................................................... 0.146 s
 0: WARNING: load
 0: probing paths for kernel32
 0:   D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64
 0: [Introspection] loaded native library kernel32.dll from kernel32.dll
 0: Aardvark.UI serves template.html
 0: Aardvark.UI serves favicon.ico
 0: WARNING: [aardvark.media] currently ThreadPool.MinThreads is (4,4)
 0: WARNING: [aardvark.media] unfortunately, currently we need to adjust this to at least (12,12) due to an open issue https://github.com/aardvark-platform/aardvark.media/issues/19
 0: Aardvark.Service serves aardvark.js
 0: Aardvark.Service serves rgbcolor.js
 0: Aardvark.Service serves docking.js
 0: Aardvark.Service serves semantic.js
 0: Aardvark.Service serves jquery-3-3-1.js
 0: Aardvark.Service serves touchstick.js
 0: Aardvark.Service serves aardfs.js
 0: Aardvark.Service serves essentialstuff.js
 0: Aardvark.Service serves aardvark.css
 0: Aardvark.Service serves docking.css
 0: Aardvark.Service serves semantic.css
 0: Aardvark.Service serves aardfs.css
 0: Aardvark.Service serves semantic-overrides.css
 0: Aardvark.Service serves fonts.css
 0: Aardvark.Service serves index.html
 0: Aardvark.Service serves stats.html
 0: Aardvark.Service serves aardvark-light.svg
 0: Aardvark.Service serves aardvark.svg
 0: Aardvark.Service serves brand-icons.woff2
 0: Aardvark.Service serves outline-icons.woff2
 0: Aardvark.Service serves icons.woff2
 0: Aardvark.Service serves S6u8w4BMUTPHjxsAUi-qJCY.woff2
 0: Aardvark.Service serves S6u8w4BMUTPHjxsAXC-q.woff2
 0: Aardvark.Service serves S6u9w4BMUTPHh6UVSwaPGR_p.woff2
 0: Aardvark.Service serves S6u9w4BMUTPHh6UVSwiPGQ.woff2
 0: Aardvark.Service serves S6uyw4BMUTPHjx4wXg.woff2
 0: Aardvark.Service serves S6uyw4BMUTPHjxAwXjeu.woff2
 0: Aardvark.Service serves S6u_w4BMUTPHjxsI5wq_FQft1dw.woff2
 0: Aardvark.Service serves S6u_w4BMUTPHjxsI5wq_Gwft.woff2
 0: Aardvark.UI serves template.html
 0: Aardvark.UI serves favicon.ico
 0: Aardvark.UI.Primitives serves spectrum.css
 0: Aardvark.UI.Primitives serves spectrum.js
 1: [Server] created client for (4aae7ab7-16e6-53c2-ebbe-aefebcc7c91b/n7), mapping enabled
 1: [Client] 1: running n7
 2: [Scene] n7: created
 2: texture created
 2: result created
 2: texture created
 2: result created
 2: Compiling shader:
  1: #version 460
  2: #define __SHADER_STAGE__
  3: 
  4: 
  5: 
  6: 
  7: struct tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double
  8: {
  9:     bool Item0;
 10:     vec3 Item1;
 11:     vec3 Item2;
 12:     float Item3;
 13: };
 14: 
 15: struct SLEAardvarkRenderDemo_SLEUniform_Light
 16: {
 17:     int lightType;
 18:     vec4 lightPosition;
 19:     vec4 lightDirection;
 20:     vec3 color;
 21:     bool castsShadow;
 22:     float cutOffInner;
 23:     float cutOffOuter;
 24:     float radius;
 25:     vec3 virtualPos;
 26:     vec3 virtualPos2;
 27:     vec3 p1;
 28:     vec3 p2;
 29:     vec3 p3;
 30:     vec3 p4;
 31:     mat4x4 toWorld;
 32:     mat4x4 fromWorld;
 33: };
 34: 
 35: layout(std140, binding = 0)
 36: uniform PerView
 37: {
 38:     vec3 CameraLocation;
 39: };
 40: 
 41: 
 42: layout(std140, binding = 1)
 43: uniform Global
 44: {
 45:     SLEAardvarkRenderDemo_SLEUniform_Light Light;
 46:     mat4x4 LightViewMatrix;
 47: };
 48: 
 49: 
 50: layout(binding = 0)
 51: uniform sampler2D color;
 52: 
 53: layout(binding = 1)
 54: uniform sampler2D normal;
 55: 
 56: layout(binding = 2)
 57: uniform sampler2DShadow samplerShadowMap;
 58: 
 59: layout(binding = 3)
 60: uniform sampler2D samplerShadowMapTex;
 61: 
 62: layout(binding = 4)
 63: uniform sampler2D wPos;
 64: 
 65: vec2 SLEAardvarkRenderDemo_Shadow_avgBlockersDepthToPenumbra_ntc5ns5VYYuiRbvrmwQQGw(vec2 lightSize, float surfaceDepth, float avgBlockersDepth)
 66: {
 67:     return ((lightSize * (surfaceDepth - avgBlockersDepth)) / avgBlockersDepth);
 68: }
 69: 
 70: 
 71: vec2 SLEAardvarkRenderDemo_Shadow_vogelDiskOffset_cR3OqSYynaKjhFMpTsd8fQ(int sampleIndex, int sampleCount, float phi)
 72: {
 73:     float r = (sqrt((float(sampleIndex) + 0.5)) / sqrt(float(sampleCount)));
 74:     float theta = ((float(sampleIndex) * 2.39996) + phi);
 75:     return vec2((r * cos(theta)), (r * sin(theta)));
 76: }
 77: 
 78: 
 79: float SLEAardvarkRenderDemo_Shadow_random_1MN50IO3BjRacQVcNxGOSw(vec4 seed)
 80: {
 81:     return fract((sin(dot(seed, vec4(12.9898, 78.233, 45.164, 94.673))) * 43758.5453));
 82: }
 83: 
 84: 
 85: float SLEAardvarkRenderDemo_BRDF_DistributionGGX_9rKdY223uBS_NUz8TxOtw(vec3 n, vec3 h, float roughness)
 86: {
 87:     float a = (roughness * roughness);
 88:     float a2 = (a * a);
 89:     float nDotH = max(0.0, dot(n, h));
 90:     float deno = (((nDotH * nDotH) * (a2 - 1.0)) + 1.0);
 91:     return (a2 / ((3.141592653589793 * deno) * deno));
 92: }
 93: 
 94: 
 95: float helper1(float roughness)
 96: {
 97:     float r = (roughness + 1.0);
 98:     return ((r * r) / 8.0);
 99: }
100: 
101: 
102: vec3 SLEAardvarkRenderDemo_BRDF_fresnelSchlick_p2rPA4e4MFUMqGJ0C14Tng(vec3 f0, float cosTheta)
103: {
104:     return (f0 + ((1.0 - f0) * pow((1.0 - cosTheta), 5.0)));
105: }
106: 
107: 
108: float SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceDisk_3Fm00pFf99CfR9hPbaGPImw(float radius)
109: {
110:     return (1.0 / (((radius * radius) * 3.141592653589793) * 3.141592653589793));
111: }
112: 
113: 
114: float SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceRectangle_CSsH8PY0AZ5Q9fWUXd5VQ(vec3 p1, vec3 p2, vec3 p4)
115: {
116:     return (1.0 / ((abs(length((p1 - p2))) * abs(length((p1 - p4)))) * 3.141592653589793));
117: }
118: 
119: 
120: float SLEAardvarkRenderDemo_PBR_rectangleSolidAngle_yk0LnyTP2qLGhxTZr4oSHw(vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4)
121: {
122:     vec3 v1 = (p1 - wPos);
123:     vec3 v2 = (p2 - wPos);
124:     vec3 v3 = (p3 - wPos);
125:     vec3 v4 = (p4 - wPos);
126:     vec3 n1 = normalize(cross(v1, v2));
127:     vec3 n2 = normalize(cross(v2, v3));
128:     vec3 n3 = normalize(cross(v3, v4));
129:     vec3 n4 = normalize(cross(v4, v1));
130:     return ((((acos(dot((-n1), n2)) + acos(dot((-n2), n3))) + acos(dot((-n3), n4))) + acos(dot((-n4), n1))) - 6.283185307179586);
131: }
132: 
133: 
134: float SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(vec3 lDir, vec3 ln, float cutOffInner, float cutOffOuter)
135: {
136:     return clamp(((dot(lDir, (-ln)) - cutOffOuter) / (cutOffInner - cutOffOuter)), 0, 1);
137: }
138: 
139: 
140: float SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(float dist)
141: {
142:     float d = max(dist, 0.01);
143:     return (1.0 / (d * d));
144: }
145: 
146: 
147: float helper(float cosTheta, float sinSigmaSqr, float sinTheta)
148: {
149:     float x = sqrt(((1.0 / sinSigmaSqr) - 1.0));
150:     float y = ((-x) * (cosTheta / sinTheta));
151:     float sinThetaSqrtY = (sinTheta * sqrt((1.0 - (y * y))));
152:     return ((((cosTheta * acos(y)) - (x * sinThetaSqrtY)) * sinSigmaSqr) + atan((sinThetaSqrtY / x)));
153: }
154: 
155: 
156: tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(bool item0, vec3 item1, vec3 item2, float item3)
157: {
158:     tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double res;
159:     res.Item0 = item0;
160:     res.Item1 = item1;
161:     res.Item2 = item2;
162:     res.Item3 = item3;
163:     return res;
164: }
165: 
166: 
167: vec3 SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(vec3 n, vec3 v, float roughness)
168: {
169:     return normalize(mix(n, (-reflect(n, v)), (1.0 - roughness)));
170: }
171: 
172: 
173: float SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceSphere_UrX1ctp5f0mkaCN8lcAp4g(float radius)
174: {
175:     return (1.0 / ((((radius * radius) * 4.0) * 3.141592653589793) * 3.141592653589793));
176: }
177: 
178: 
179: float SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(vec3 o, vec3 d, vec3 planeOrigin, vec3 planeNormal)
180: {
181:     return (dot(planeNormal, (planeOrigin - o)) / dot(planeNormal, d));
182: }
183: 
184: 
185: vec3 SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(vec3 a, vec3 b, vec3 c)
186: {
187:     vec3 ab = (b - a);
188:     return (a + (clamp((dot((c - a), ab) / dot(ab, ab)), 0, 1) * ab));
189: }
190: 
191: 
192: float SLEAardvarkRenderDemo_PBR_traceTriangle_3zyeXtvfi2Azicu3TsfTxQ(vec3 o, vec3 d, vec3 A, vec3 B, vec3 C)
193: {
194:     vec3 p = (o + (d * SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(o, d, A, normalize(cross((B - A), (C - B))))));
195:     vec3 n2 = normalize(cross((C - B), (p - C)));
196:     if(((dot(normalize(cross((B - A), (p - B))), n2) > 0.999) && (dot(n2, normalize(cross((A - C), (p - A)))) > 0.999)))
197:     {
198:         return 1.0;
199:     }
200:     else
201:     {
202:         return 0.0;
203:     }
204: }
205: 
206: 
207: float SLEAardvarkRenderDemo_PBR_traceRectangle_OSdnOpnvoOU8tTrcn6w3JA(vec3 o, vec3 d, vec3 A, vec3 B, vec3 C, vec3 D)
208: {
209:     return max(SLEAardvarkRenderDemo_PBR_traceTriangle_3zyeXtvfi2Azicu3TsfTxQ(o, d, A, B, C), SLEAardvarkRenderDemo_PBR_traceTriangle_3zyeXtvfi2Azicu3TsfTxQ(o, d, C, D, A));
210: }
211: 
212: 
213: vec3 SLEAardvarkRenderDemo_PBR_representativePointRectangle_RhNDGSMx9lhdbAUaPy333A(vec3 r, vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4, vec3 ln, vec3 lightPosition)
214: {
215:     if((SLEAardvarkRenderDemo_PBR_traceRectangle_OSdnOpnvoOU8tTrcn6w3JA(wPos, r, p1, p2, p3, p4) > 0.0))
216:     {
217:         return r;
218:     }
219:     else
220:     {
221:         vec3 tracedPlane = (wPos + (r * SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(wPos, r, lightPosition, ln)));
222:         vec3 pc1 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p1, p2, tracedPlane);
223:         vec3 pc2 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p2, p3, tracedPlane);
224:         vec3 pc3 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p3, p4, tracedPlane);
225:         vec3 pc4 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p4, p1, tracedPlane);
226:         float d2 = distance(pc2, tracedPlane);
227:         float d3 = distance(pc3, tracedPlane);
228:         float minDist = distance(pc1, tracedPlane);
229:         vec3 p = pc1;
230:         if((d2 < minDist))
231:         {
232:             minDist = d2;
233:             p = pc2;
234:         }
235:         if((d3 < minDist))
236:         {
237:             minDist = d3;
238:             p = pc3;
239:         }
240:         if((distance(pc4, tracedPlane) < minDist))
241:         {
242:             p = pc4;
243:         }
244:         return normalize((p - wPos));
245:     }
246: }
247: 
248: 
249: vec3 SLEAardvarkRenderDemo_PBR_representativePointDisk_2JPHvvLUgcbUkMatH00ra00Q(vec3 r, vec3 wPos, float radius, vec3 ln, vec3 lightPosition, vec3 lUnnorm)
250: {
251:     vec3 centerToRay = ((wPos + (r * SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(wPos, r, lightPosition, ln))) - lightPosition);
252:     return normalize((lUnnorm + (centerToRay * clamp((radius / length(centerToRay)), 0, 1))));
253: }
254: 
255: 
256: vec3 SLEAardvarkRenderDemo_PBR_representativePointSpehre_OBJfz00NlqX4woYAFs00nVKQ(vec3 n, vec3 v, float roughness, vec3 lUnnorm, float radius)
257: {
258:     vec3 r = SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
259:     vec3 centerToRay = ((dot(lUnnorm, r) * r) - lUnnorm);
260:     return normalize((lUnnorm + (centerToRay * clamp((radius / length(centerToRay)), 0.0, 1.0))));
261: }
262: 
263: 
264: float SLEAardvarkRenderDemo_PBR_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(float cosTheta, float sinSigmaSqr)
265: {
266:     float sinTheta = sqrt((1.0 - (cosTheta * cosTheta)));
267:     return max(0.0, (((cosTheta * cosTheta) > sinSigmaSqr) ? ((3.141592653589793 * sinSigmaSqr) * clamp(cosTheta, 0.0, 1.0)) : helper(cosTheta, sinSigmaSqr, sinTheta)));
268: }
269: 
270: 
271: float SLEAardvarkRenderDemo_PBR_attenuationSphere_Wj2p65IzIRidr79fESSIcg(vec3 lUnnorm, float radius, vec3 n, vec3 lDir)
272: {
273:     return SLEAardvarkRenderDemo_PBR_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(clamp(dot(n, lDir), -0.999, 0.999), min(0.9999, ((radius * radius) / dot(lUnnorm, lUnnorm))));
274: }
275: 
276: 
277: float SLEAardvarkRenderDemo_PBR_attenuationDisk_U9LOD_bTSjagdDPGUR_Y5Q(vec3 lUnnorm, float radius, vec3 n, vec3 lDir, vec3 ln)
278: {
279:     float radius2 = (radius * radius);
280:     return (SLEAardvarkRenderDemo_PBR_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(clamp(dot(n, lDir), -0.999, 0.999), (radius2 / (radius2 + max(radius2, dot(lUnnorm, lUnnorm))))) * clamp(dot(ln, (-lDir)), 0, 1));
281: }
282: 
283: 
284: float SLEAardvarkRenderDemo_PBR_attenuationRectangle_rv8niFPySJx9fZLgTLeI9A(vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4, vec3 lUnnorm, vec3 ln, vec3 n)
285: {
286:     if((dot((-lUnnorm), ln) > 0.0))
287:     {
288:         return ((max(0.0, SLEAardvarkRenderDemo_PBR_rectangleSolidAngle_yk0LnyTP2qLGhxTZr4oSHw(wPos, p1, p2, p3, p4)) * 0.2) * ((((clamp(dot(n, normalize(lUnnorm)), 0, 1) + clamp(dot(n, normalize((p1 - wPos))), 0, 1)) + clamp(dot(n, normalize((p2 - wPos))), 0, 1)) + clamp(dot(n, normalize((p3 - wPos))), 0, 1)) + clamp(dot(n, normalize((p4 - wPos))), 0, 1)));
289:     }
290:     else
291:     {
292:         return 0.0;
293:     }
294: }
295: 
296: 
297: tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double SLEAardvarkRenderDemo_PBR_getLightParams_W004900tZOOSxYNA8ygbu8uA(SLEAardvarkRenderDemo_SLEUniform_Light light, vec3 wPos, vec3 n, vec3 v, float roughness)
298: {
299:     if((light.lightType == 0))
300:     {
301:         return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(false, vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), 1.0);
302:     }
303:     else
304:     {
305:         if((light.lightType == 1))
306:         {
307:             return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, normalize((-light.lightDirection.xyz)), light.color, 1.0);
308:         }
309:         else
310:         {
311:             if((light.lightType == 2))
312:             {
313:                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, normalize((light.lightPosition.xyz - wPos)), ((light.color * SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))) * 0.07957747154594767), 1.0);
314:             }
315:             else
316:             {
317:                 if((light.lightType == 3))
318:                 {
319:                     vec3 lDir = normalize((light.lightPosition.xyz - wPos));
320:                     return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, lDir, (((light.color * SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(lDir, normalize(light.lightDirection.xyz), light.cutOffInner, light.cutOffOuter)) * SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))) * 0.3183098861837907), 1.0);
321:                 }
322:                 else
323:                 {
324:                     if((light.lightType == 4))
325:                     {
326:                         vec3 lUnnorm = (light.lightPosition.xyz - wPos);
327:                         return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, SLEAardvarkRenderDemo_PBR_representativePointSpehre_OBJfz00NlqX4woYAFs00nVKQ(n, v, roughness, lUnnorm, light.radius), ((light.color * SLEAardvarkRenderDemo_PBR_attenuationSphere_Wj2p65IzIRidr79fESSIcg(lUnnorm, light.radius, n, normalize(lUnnorm))) * SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceSphere_UrX1ctp5f0mkaCN8lcAp4g(light.radius)), 1.0);
328:                     }
329:                     else
330:                     {
331:                         if((light.lightType == 5))
332:                         {
333:                             vec3 lUnnorm1 = (light.lightPosition.xyz - wPos);
334:                             vec3 ln = normalize(light.lightDirection.xyz);
335:                             vec3 r = SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
336:                             return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, SLEAardvarkRenderDemo_PBR_representativePointDisk_2JPHvvLUgcbUkMatH00ra00Q(r, wPos, light.radius, ln, light.lightPosition.xyz, lUnnorm1), (((light.color * SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize((light.virtualPos.xyz - wPos)), ln, light.cutOffInner, light.cutOffOuter)) * SLEAardvarkRenderDemo_PBR_attenuationDisk_U9LOD_bTSjagdDPGUR_Y5Q(lUnnorm1, light.radius, n, normalize(lUnnorm1), ln)) * SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceDisk_3Fm00pFf99CfR9hPbaGPImw(light.radius)), clamp(abs(dot(ln, r)), 0, 1));
337:                         }
338:                         else
339:                         {
340:                             if((light.lightType == 6))
341:                             {
342:                                 vec3 ln1 = normalize(light.lightDirection.xyz);
343:                                 vec4 d1 = (vec4(normalize((light.virtualPos.xyz - wPos)), 0.0) * light.fromWorld);
344:                                 vec4 d3 = (vec4(normalize((light.virtualPos2.xyz - wPos)), 0.0) * light.fromWorld);
345:                                 vec3 r1 = SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
346:                                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, SLEAardvarkRenderDemo_PBR_representativePointRectangle_RhNDGSMx9lhdbAUaPy333A(r1, wPos, light.p1, light.p2, light.p3, light.p4, ln1, light.lightPosition.xyz), (((light.color * (SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize(vec3(d1.x, d1.y, 0.0)), vec3(0.0, 1.0, 0.0), light.cutOffInner, light.cutOffOuter) * SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize(vec3(0.0, d3.y, d3.z)), vec3(0.0, 1.0, 0.0), light.cutOffInner, light.cutOffOuter))) * SLEAardvarkRenderDemo_PBR_attenuationRectangle_rv8niFPySJx9fZLgTLeI9A(wPos, light.p1, light.p2, light.p3, light.p4, (light.lightPosition.xyz - wPos), ln1, n)) * SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceRectangle_CSsH8PY0AZ5Q9fWUXd5VQ(light.p1, light.p2, light.p4)), clamp(abs(dot(ln1, r1)), 0, 1));
347:                             }
348:                             else
349:                             {
350:                                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(false, vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), 1.0);
351:                             }
352:                         }
353:                     }
354:                 }
355:             }
356:         }
357:     }
358: }
359: 
360: 
361: float SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(bool ilb, float nDotV, float roughness)
362: {
363:     float k = (ilb ? ((roughness * roughness) / 2.0) : helper1(roughness));
364:     return (nDotV / ((nDotV * (1.0 - k)) + k));
365: }
366: 
367: 
368: float SLEAardvarkRenderDemo_BRDF_GeometrySmith_VXZTTP5v1N8YmBKR5NO9ZQ(bool ilb, vec3 n, vec3 v, vec3 l, float roughness)
369: {
370:     return (SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(ilb, max(0.0, dot(n, l)), roughness) * SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(ilb, max(0.0, dot(n, v)), roughness));
371: }
372: 
373: 
374: vec3 SLEAardvarkRenderDemo_PBR_pbrDirect_15lLodRE7wclkIKcw477pg(vec3 f0, float roughness, float metallic, vec3 albedo, vec4 wPos, vec3 v, vec3 n, float nDotV, SLEAardvarkRenderDemo_SLEUniform_Light light)
375: {
376:     tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double patternInput = SLEAardvarkRenderDemo_PBR_getLightParams_W004900tZOOSxYNA8ygbu8uA(light, wPos.xyz, n, v, roughness);
377:     if(patternInput.Item0)
378:     {
379:         vec3 h = normalize((v + patternInput.Item1));
380:         vec3 kS = SLEAardvarkRenderDemo_BRDF_fresnelSchlick_p2rPA4e4MFUMqGJ0C14Tng(f0, max(0.0, dot(h, v)));
381:         float nDotL = max(0.0, dot(n, patternInput.Item1));
382:         return (((((((1.0 - metallic) * (vec3(1.0, 1.0, 1.0) - kS)) * albedo) / 3.141592653589793) + ((((SLEAardvarkRenderDemo_BRDF_DistributionGGX_9rKdY223uBS_NUz8TxOtw(n, h, roughness) * SLEAardvarkRenderDemo_BRDF_GeometrySmith_VXZTTP5v1N8YmBKR5NO9ZQ(false, n, v, patternInput.Item1, roughness)) * kS) / max(0.001, ((4.0 * nDotV) * nDotL))) * patternInput.Item3)) * patternInput.Item2) * nDotL);
383:     }
384:     else
385:     {
386:         return vec3(0.0, 0.0, 0.0);
387:     }
388: }
389: 
390: 
391: 
392: #ifdef Vertex
393: layout(location = 0) in vec2 DiffuseColorCoordinates;
394: layout(location = 1) in vec4 Positions;
395: layout(location = 0) out vec2 fs_DiffuseColorCoordinates;
396: void main()
397: {
398:     fs_DiffuseColorCoordinates = DiffuseColorCoordinates;
399:     gl_Position = Positions;
400: }
401: 
402: #endif
403: 
404: 
405: 
406: #ifdef Fragment
407: 
408: vec3 SLEAardvarkRenderDemo_PBR_pBRLightning_Khi8hKNZ_F300kuq29aCH00w(float metallic, float roughness, vec3 albedo, vec3 n, vec4 wPos)
409: {
410:     vec3 v = normalize((CameraLocation - wPos.xyz));
411:     return SLEAardvarkRenderDemo_PBR_pbrDirect_15lLodRE7wclkIKcw477pg(mix(vec3(0.04, 0.04, 0.04), albedo, metallic), roughness, metallic, albedo, wPos, v, n, max(0.0, dot(n, v)), Light);
412: }
413: 
414: vec2 SLEAardvarkRenderDemo_Shadow_lightWidth_LXD3gVwklkgvV5JWo3yVwg()
415: {
416:     if((Light.lightType == 0))
417:     {
418:         return vec2(0.01, 0.01);
419:     }
420:     else
421:     {
422:         if((Light.lightType == 1))
423:         {
424:             return vec2(0.01, 0.01);
425:         }
426:         else
427:         {
428:             if((Light.lightType == 2))
429:             {
430:                 return vec2(0.01, 0.01);
431:             }
432:             else
433:             {
434:                 if((Light.lightType == 3))
435:                 {
436:                     return vec2(0.01, 0.01);
437:                 }
438:                 else
439:                 {
440:                     if((Light.lightType == 4))
441:                     {
442:                         return vec2(max(0.01, (Light.radius * 2.0)));
443:                     }
444:                     else
445:                     {
446:                         if((Light.lightType == 5))
447:                         {
448:                             return vec2(max(0.01, (Light.radius * 2.0)));
449:                         }
450:                         else
451:                         {
452:                             if((Light.lightType == 6))
453:                             {
454:                                 return vec2(max(0.01, length((Light.p1 - Light.p4))), max(0.01, length((Light.p1 - Light.p2))));
455:                             }
456:                             else
457:                             {
458:                                 return vec2(0.01, 0.01);
459:                             }
460:                         }
461:                     }
462:                 }
463:             }
464:         }
465:     }
466: }
467: 
468: float SLEAardvarkRenderDemo_Shadow_vogelDiskSampling_lwchxL5jglAwqwkoagx25Q(float noise, vec4 pos, vec2 spread)
469: {
470:     float vis = 0.0;
471:     for(int i = 0; (i < 16); i++)
472:     {
473:         vec4 p = (pos + vec4((SLEAardvarkRenderDemo_Shadow_vogelDiskOffset_cR3OqSYynaKjhFMpTsd8fQ(i, 16, noise) * spread), 0.0, 0.0));
474:         vec4 samplePos = (0.5 + (0.5 * (p / p.w)));
475:         vis = (vis + (texture(samplerShadowMap, vec3(samplePos.xy, (samplePos.z - 0.005))) / 16.0));
476:     }
477:     return vis;
478: }
479: 
480: vec2 SLEAardvarkRenderDemo_Shadow_penumbra_xPgf541Zi7aStHEY_SGbgw(float noise, vec2 shadowMapUV, float surfaceDepth, vec2 lightSize)
481: {
482:     float avgBlockersDepth = 0.0;
483:     float blockersCount = 0.0;
484:     for(int i = 0; (i < 16); i++)
485:     {
486:         float sampleDepth = texture(samplerShadowMapTex, (shadowMapUV + (SLEAardvarkRenderDemo_Shadow_vogelDiskOffset_cR3OqSYynaKjhFMpTsd8fQ(i, 16, noise) / 100.0))).x;
487:         if((sampleDepth < surfaceDepth))
488:         {
489:             avgBlockersDepth = (avgBlockersDepth + sampleDepth);
490:             blockersCount = (blockersCount + 1.0);
491:         }
492:     }
493:     if((blockersCount > 0.0))
494:     {
495:         avgBlockersDepth = (avgBlockersDepth / blockersCount);
496:         return SLEAardvarkRenderDemo_Shadow_avgBlockersDepthToPenumbra_ntc5ns5VYYuiRbvrmwQQGw(lightSize, surfaceDepth, avgBlockersDepth);
497:     }
498:     else
499:     {
500:         return vec2(0.0, 0.0);
501:     }
502: }
503: 
504: float SLEAardvarkRenderDemo_Shadow_getShadow_5PX5AT33WcqEHaJ6zghmCw(vec4 wPos)
505: {
506:     vec4 lightSpacePos = (wPos * LightViewMatrix);
507:     vec4 samplePos = (0.5 + (0.5 * (lightSpacePos / lightSpacePos.w)));
508:     float noise = (6.283185307179586 * SLEAardvarkRenderDemo_Shadow_random_1MN50IO3BjRacQVcNxGOSw(samplePos));
509:     return SLEAardvarkRenderDemo_Shadow_vogelDiskSampling_lwchxL5jglAwqwkoagx25Q(noise, lightSpacePos, SLEAardvarkRenderDemo_Shadow_penumbra_xPgf541Zi7aStHEY_SGbgw(noise, samplePos.xy, samplePos.z, SLEAardvarkRenderDemo_Shadow_lightWidth_LXD3gVwklkgvV5JWo3yVwg()));
510: }
511: 
512: layout(location = 0) in vec2 fs_DiffuseColorCoordinates;
513: layout(location = 0) out vec4 ColorsOut;
514: void main()
515: {
516:     vec4 albedo = texture(color, fs_DiffuseColorCoordinates);
517:     vec4 nr = texture(normal, fs_DiffuseColorCoordinates);
518:     ColorsOut = (vec4(((albedo.w < 0.0) ? vec3(0.0, 0.0, 0.0) : SLEAardvarkRenderDemo_PBR_pBRLightning_Khi8hKNZ_F300kuq29aCH00w(albedo.w, nr.w, vec4(albedo.xyz, 1.0).xyz, normalize(nr.xyz), texture(wPos, fs_DiffuseColorCoordinates))), 1.0) * SLEAardvarkRenderDemo_Shadow_getShadow_5PX5AT33WcqEHaJ6zghmCw(texture(wPos, fs_DiffuseColorCoordinates)));
519: }
520: 
521: #endif

 2: WARNING: load
 2: texture created
 2: result created
 2: WARNING: load
 2: result created
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: [GL] RenderObjects: +1/-0 (441ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (3ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (5ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (4ms)
 2: using optimized native program
 2: [GL] RenderObjects: +61/-0 (1180ms)
 2: using optimized native program
 2: texture created
 2: [GL] RenderObjects: +60/-0 (21ms)
 2: using optimized native program
 2: texture created
 2: texture created
 2: result created
 2: texture created
 2: result created
 2: texture created
 2: [GL] RenderObjects: +1/-0 (13ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (35ms)
 2: using optimized native program
 2: result created
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: [GL] RenderObjects: +1/-0 (11ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (4ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: texture created
 2: result created
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: [GL] RenderObjects: +1/-0 (21ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (33ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (5ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (3ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (5ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (4ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (22ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (5ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (3ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (4ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (11ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (49ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (3ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (3ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (10ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (3ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: texture created
 2: result created
 2: [GL] RenderObjects: +1/-0 (10ms)
 2: using optimized native program
 2: [GL] RenderObjects: +2/-0 (6678ms)
 2: using optimized native program
 2: texture created
 2: result created
 2: texture created
 2: result created
 2: texture created
 2: result created
 2: [GL] RenderObjects: +1/-0 (8ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (17ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (36ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (6743ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (6814ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (7572ms)
 2: using optimized native program
 2: p1 [-1.9999999999999998, 6.57, -1.0499999999999998] p2 [-4, 6.57, -1.0500000000000003] p3 [-4, 6.57, -0.9500000000000002] p4 [-1.9999999999999998, 6.57, -0.9499999999999997]
 2: WARNING: load
 2: WARNING: load
 2: WARNING: load
 2: WARNING: load
 2: [GL] RenderObjects: +299/-0 (558ms)
 2: using optimized native program
 2: p1 [4.5, 6.57, 2.95] p2 [2.5, 6.57, 2.9499999999999997] p3 [2.5, 6.57, 3.05] p4 [4.5, 6.57, 3.0500000000000003]
 2: [GL] RenderObjects: +299/-0 (57ms)
 2: using optimized native program
 2: p1 [-1.9999999999999998, 6.57, 7.95] p2 [-4, 6.57, 7.95] p3 [-4, 6.57, 8.049999999999999] p4 [-1.9999999999999998, 6.57, 8.05]
 2: [GL] RenderObjects: +299/-0 (68ms)
 2: using optimized native program
 2: p1 [-1.9999999999999998, 6.57, -7.05] p2 [-4, 6.57, -7.05] p3 [-4, 6.57, -6.95] p4 [-1.9999999999999998, 6.57, -6.95]
 2: [GL] RenderObjects: +299/-0 (74ms)
 2: using optimized native program
 2: p1 [-7, 6.57, -1.0499999999999998] p2 [-9, 6.57, -1.0500000000000003] p3 [-9, 6.57, -0.9500000000000002] p4 [-7, 6.57, -0.9499999999999997]
 2: [GL] RenderObjects: +299/-0 (73ms)
 2: using optimized native program
 2: p1 [4.5, 6.57, -1.0499999999999998] p2 [2.5, 6.57, -1.0500000000000003] p3 [2.5, 6.57, -0.9500000000000002] p4 [4.5, 6.57, -0.9499999999999997]
 2: [GL] RenderObjects: +299/-0 (61ms)
 2: using optimized native program
 2: p1 [-1.9999999999999998, 6.57, 2.95] p2 [-4, 6.57, 2.9499999999999997] p3 [-4, 6.57, 3.05] p4 [-1.9999999999999998, 6.57, 3.0500000000000003]
 2: [GL] RenderObjects: +299/-0 (59ms)
 2: using optimized native program
 2: p1 [-7, 6.57, 2.95] p2 [-9, 6.57, 2.9499999999999997] p3 [-9, 6.57, 3.05] p4 [-7, 6.57, 3.0500000000000003]
 2: [GL] RenderObjects: +299/-0 (52ms)
 2: using optimized native program
 2: p1 [4.5, 6.57, -7.05] p2 [2.5, 6.57, -7.05] p3 [2.5, 6.57, -6.95] p4 [4.5, 6.57, -6.95]
 2: [GL] RenderObjects: +299/-0 (66ms)
 2: using optimized native program
 2: p1 [4.5, 6.57, 7.95] p2 [2.5, 6.57, 7.95] p3 [2.5, 6.57, 8.049999999999999] p4 [4.5, 6.57, 8.05]
 2: [GL] RenderObjects: +299/-0 (53ms)
 2: using optimized native program
 2: p1 [-7, 6.57, -7.05] p2 [-9, 6.57, -7.05] p3 [-9, 6.57, -6.95] p4 [-7, 6.57, -6.95]
 2: [GL] RenderObjects: +299/-0 (57ms)
 2: using optimized native program
 2: [GL] RenderObjects: +21/-1 (2881ms)
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: texture created
 2: result created
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: [GL] RenderObjects: +300/-0 (5060ms)
 2: using optimized native program
 2: texture created
 2: texture created
 2: Compiling shader:
  1: #version 460
  2: #define __SHADER_STAGE__
  3: 
  4: 
  5: 
  6: 
  7: struct tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double
  8: {
  9:     bool Item0;
 10:     vec3 Item1;
 11:     vec3 Item2;
 12:     float Item3;
 13: };
 14: 
 15: struct SLEAardvarkRenderDemo_SLEUniform_Light
 16: {
 17:     int lightType;
 18:     vec4 lightPosition;
 19:     vec4 lightDirection;
 20:     vec3 color;
 21:     bool castsShadow;
 22:     float cutOffInner;
 23:     float cutOffOuter;
 24:     float radius;
 25:     vec3 virtualPos;
 26:     vec3 virtualPos2;
 27:     vec3 p1;
 28:     vec3 p2;
 29:     vec3 p3;
 30:     vec3 p4;
 31:     mat4x4 toWorld;
 32:     mat4x4 fromWorld;
 33: };
 34: 
 35: layout(std140, binding = 0)
 36: uniform PerView
 37: {
 38:     vec3 CameraLocation;
 39: };
 40: 
 41: 
 42: layout(std140, binding = 1)
 43: uniform Global
 44: {
 45:     SLEAardvarkRenderDemo_SLEUniform_Light Light;
 46:     mat4x4 LightViewMatrix;
 47: };
 48: 
 49: 
 50: layout(binding = 0)
 51: uniform sampler2D color;
 52: 
 53: layout(binding = 1)
 54: uniform sampler2D normal;
 55: 
 56: layout(binding = 2)
 57: uniform sampler2DShadow samplerShadowMap;
 58: 
 59: layout(binding = 3)
 60: uniform sampler2D samplerShadowMapTex;
 61: 
 62: layout(binding = 4)
 63: uniform sampler2D wPos;
 64: 
 65: float helper1(float roughness)
 66: {
 67:     float r = (roughness + 1.0);
 68:     return ((r * r) / 8.0);
 69: }
 70: 
 71: 
 72: float SLEAardvarkRenderDemo_BRDF_DistributionGGX_9rKdY223uBS_NUz8TxOtw(vec3 n, vec3 h, float roughness)
 73: {
 74:     float a = (roughness * roughness);
 75:     float a2 = (a * a);
 76:     float nDotH = max(0.0, dot(n, h));
 77:     float deno = (((nDotH * nDotH) * (a2 - 1.0)) + 1.0);
 78:     return (a2 / ((3.141592653589793 * deno) * deno));
 79: }
 80: 
 81: 
 82: vec3 SLEAardvarkRenderDemo_BRDF_fresnelSchlick_p2rPA4e4MFUMqGJ0C14Tng(vec3 f0, float cosTheta)
 83: {
 84:     return (f0 + ((1.0 - f0) * pow((1.0 - cosTheta), 5.0)));
 85: }
 86: 
 87: 
 88: float SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceSphere_UrX1ctp5f0mkaCN8lcAp4g(float radius)
 89: {
 90:     return (1.0 / ((((radius * radius) * 4.0) * 3.141592653589793) * 3.141592653589793));
 91: }
 92: 
 93: 
 94: float SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(vec3 o, vec3 d, vec3 planeOrigin, vec3 planeNormal)
 95: {
 96:     return (dot(planeNormal, (planeOrigin - o)) / dot(planeNormal, d));
 97: }
 98: 
 99: 
100: float SLEAardvarkRenderDemo_PBR_traceTriangle_3zyeXtvfi2Azicu3TsfTxQ(vec3 o, vec3 d, vec3 A, vec3 B, vec3 C)
101: {
102:     vec3 p = (o + (d * SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(o, d, A, normalize(cross((B - A), (C - B))))));
103:     vec3 n2 = normalize(cross((C - B), (p - C)));
104:     if(((dot(normalize(cross((B - A), (p - B))), n2) > 0.999) && (dot(n2, normalize(cross((A - C), (p - A)))) > 0.999)))
105:     {
106:         return 1.0;
107:     }
108:     else
109:     {
110:         return 0.0;
111:     }
112: }
113: 
114: 
115: float SLEAardvarkRenderDemo_PBR_traceRectangle_OSdnOpnvoOU8tTrcn6w3JA(vec3 o, vec3 d, vec3 A, vec3 B, vec3 C, vec3 D)
116: {
117:     return max(SLEAardvarkRenderDemo_PBR_traceTriangle_3zyeXtvfi2Azicu3TsfTxQ(o, d, A, B, C), SLEAardvarkRenderDemo_PBR_traceTriangle_3zyeXtvfi2Azicu3TsfTxQ(o, d, C, D, A));
118: }
119: 
120: 
121: vec3 SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(vec3 n, vec3 v, float roughness)
122: {
123:     return normalize(mix(n, (-reflect(n, v)), (1.0 - roughness)));
124: }
125: 
126: 
127: vec3 SLEAardvarkRenderDemo_PBR_representativePointSpehre_OBJfz00NlqX4woYAFs00nVKQ(vec3 n, vec3 v, float roughness, vec3 lUnnorm, float radius)
128: {
129:     vec3 r = SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
130:     vec3 centerToRay = ((dot(lUnnorm, r) * r) - lUnnorm);
131:     return normalize((lUnnorm + (centerToRay * clamp((radius / length(centerToRay)), 0.0, 1.0))));
132: }
133: 
134: 
135: float helper(float cosTheta, float sinSigmaSqr, float sinTheta)
136: {
137:     float x = sqrt(((1.0 / sinSigmaSqr) - 1.0));
138:     float y = ((-x) * (cosTheta / sinTheta));
139:     float sinThetaSqrtY = (sinTheta * sqrt((1.0 - (y * y))));
140:     return ((((cosTheta * acos(y)) - (x * sinThetaSqrtY)) * sinSigmaSqr) + atan((sinThetaSqrtY / x)));
141: }
142: 
143: 
144: float SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(float dist)
145: {
146:     float d = max(dist, 0.01);
147:     return (1.0 / (d * d));
148: }
149: 
150: 
151: float SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(vec3 lDir, vec3 ln, float cutOffInner, float cutOffOuter)
152: {
153:     return clamp(((dot(lDir, (-ln)) - cutOffOuter) / (cutOffInner - cutOffOuter)), 0, 1);
154: }
155: 
156: 
157: vec3 SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(vec3 a, vec3 b, vec3 c)
158: {
159:     vec3 ab = (b - a);
160:     return (a + (clamp((dot((c - a), ab) / dot(ab, ab)), 0, 1) * ab));
161: }
162: 
163: 
164: float SLEAardvarkRenderDemo_PBR_rectangleSolidAngle_yk0LnyTP2qLGhxTZr4oSHw(vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4)
165: {
166:     vec3 v1 = (p1 - wPos);
167:     vec3 v2 = (p2 - wPos);
168:     vec3 v3 = (p3 - wPos);
169:     vec3 v4 = (p4 - wPos);
170:     vec3 n1 = normalize(cross(v1, v2));
171:     vec3 n2 = normalize(cross(v2, v3));
172:     vec3 n3 = normalize(cross(v3, v4));
173:     vec3 n4 = normalize(cross(v4, v1));
174:     return ((((acos(dot((-n1), n2)) + acos(dot((-n2), n3))) + acos(dot((-n3), n4))) + acos(dot((-n4), n1))) - 6.283185307179586);
175: }
176: 
177: 
178: tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(bool item0, vec3 item1, vec3 item2, float item3)
179: {
180:     tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double res;
181:     res.Item0 = item0;
182:     res.Item1 = item1;
183:     res.Item2 = item2;
184:     res.Item3 = item3;
185:     return res;
186: }
187: 
188: 
189: float SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceRectangle_CSsH8PY0AZ5Q9fWUXd5VQ(vec3 p1, vec3 p2, vec3 p4)
190: {
191:     return (1.0 / ((abs(length((p1 - p2))) * abs(length((p1 - p4)))) * 3.141592653589793));
192: }
193: 
194: 
195: float SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceDisk_3Fm00pFf99CfR9hPbaGPImw(float radius)
196: {
197:     return (1.0 / (((radius * radius) * 3.141592653589793) * 3.141592653589793));
198: }
199: 
200: 
201: float SLEAardvarkRenderDemo_Shadow_random_1MN50IO3BjRacQVcNxGOSw(vec4 seed)
202: {
203:     return fract((sin(dot(seed, vec4(12.9898, 78.233, 45.164, 94.673))) * 43758.5453));
204: }
205: 
206: 
207: vec2 SLEAardvarkRenderDemo_Shadow_vogelDiskOffset_cR3OqSYynaKjhFMpTsd8fQ(int sampleIndex, int sampleCount, float phi)
208: {
209:     float r = (sqrt((float(sampleIndex) + 0.5)) / sqrt(float(sampleCount)));
210:     float theta = ((float(sampleIndex) * 2.39996) + phi);
211:     return vec2((r * cos(theta)), (r * sin(theta)));
212: }
213: 
214: 
215: vec2 SLEAardvarkRenderDemo_Shadow_avgBlockersDepthToPenumbra_ntc5ns5VYYuiRbvrmwQQGw(vec2 lightSize, float surfaceDepth, float avgBlockersDepth)
216: {
217:     return ((lightSize * (surfaceDepth - avgBlockersDepth)) / avgBlockersDepth);
218: }
219: 
220: 
221: float SLEAardvarkRenderDemo_PBR_attenuationRectangle_rv8niFPySJx9fZLgTLeI9A(vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4, vec3 lUnnorm, vec3 ln, vec3 n)
222: {
223:     if((dot((-lUnnorm), ln) > 0.0))
224:     {
225:         return ((max(0.0, SLEAardvarkRenderDemo_PBR_rectangleSolidAngle_yk0LnyTP2qLGhxTZr4oSHw(wPos, p1, p2, p3, p4)) * 0.2) * ((((clamp(dot(n, normalize(lUnnorm)), 0, 1) + clamp(dot(n, normalize((p1 - wPos))), 0, 1)) + clamp(dot(n, normalize((p2 - wPos))), 0, 1)) + clamp(dot(n, normalize((p3 - wPos))), 0, 1)) + clamp(dot(n, normalize((p4 - wPos))), 0, 1)));
226:     }
227:     else
228:     {
229:         return 0.0;
230:     }
231: }
232: 
233: 
234: vec3 SLEAardvarkRenderDemo_PBR_representativePointRectangle_RhNDGSMx9lhdbAUaPy333A(vec3 r, vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4, vec3 ln, vec3 lightPosition)
235: {
236:     if((SLEAardvarkRenderDemo_PBR_traceRectangle_OSdnOpnvoOU8tTrcn6w3JA(wPos, r, p1, p2, p3, p4) > 0.0))
237:     {
238:         return r;
239:     }
240:     else
241:     {
242:         vec3 tracedPlane = (wPos + (r * SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(wPos, r, lightPosition, ln)));
243:         vec3 pc1 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p1, p2, tracedPlane);
244:         vec3 pc2 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p2, p3, tracedPlane);
245:         vec3 pc3 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p3, p4, tracedPlane);
246:         vec3 pc4 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p4, p1, tracedPlane);
247:         float d2 = distance(pc2, tracedPlane);
248:         float d3 = distance(pc3, tracedPlane);
249:         float minDist = distance(pc1, tracedPlane);
250:         vec3 p = pc1;
251:         if((d2 < minDist))
252:         {
253:             minDist = d2;
254:             p = pc2;
255:         }
256:         if((d3 < minDist))
257:         {
258:             minDist = d3;
259:             p = pc3;
260:         }
261:         if((distance(pc4, tracedPlane) < minDist))
262:         {
263:             p = pc4;
264:         }
265:         return normalize((p - wPos));
266:     }
267: }
268: 
269: 
270: float SLEAardvarkRenderDemo_PBR_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(float cosTheta, float sinSigmaSqr)
271: {
272:     float sinTheta = sqrt((1.0 - (cosTheta * cosTheta)));
273:     return max(0.0, (((cosTheta * cosTheta) > sinSigmaSqr) ? ((3.141592653589793 * sinSigmaSqr) * clamp(cosTheta, 0.0, 1.0)) : helper(cosTheta, sinSigmaSqr, sinTheta)));
274: }
275: 
276: 
277: float SLEAardvarkRenderDemo_PBR_attenuationSphere_Wj2p65IzIRidr79fESSIcg(vec3 lUnnorm, float radius, vec3 n, vec3 lDir)
278: {
279:     return SLEAardvarkRenderDemo_PBR_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(clamp(dot(n, lDir), -0.999, 0.999), min(0.9999, ((radius * radius) / dot(lUnnorm, lUnnorm))));
280: }
281: 
282: 
283: float SLEAardvarkRenderDemo_PBR_attenuationDisk_U9LOD_bTSjagdDPGUR_Y5Q(vec3 lUnnorm, float radius, vec3 n, vec3 lDir, vec3 ln)
284: {
285:     float radius2 = (radius * radius);
286:     return (SLEAardvarkRenderDemo_PBR_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(clamp(dot(n, lDir), -0.999, 0.999), (radius2 / (radius2 + max(radius2, dot(lUnnorm, lUnnorm))))) * clamp(dot(ln, (-lDir)), 0, 1));
287: }
288: 
289: 
290: vec3 SLEAardvarkRenderDemo_PBR_representativePointDisk_2JPHvvLUgcbUkMatH00ra00Q(vec3 r, vec3 wPos, float radius, vec3 ln, vec3 lightPosition, vec3 lUnnorm)
291: {
292:     vec3 centerToRay = ((wPos + (r * SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(wPos, r, lightPosition, ln))) - lightPosition);
293:     return normalize((lUnnorm + (centerToRay * clamp((radius / length(centerToRay)), 0, 1))));
294: }
295: 
296: 
297: tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double SLEAardvarkRenderDemo_PBR_getLightParams_W004900tZOOSxYNA8ygbu8uA(SLEAardvarkRenderDemo_SLEUniform_Light light, vec3 wPos, vec3 n, vec3 v, float roughness)
298: {
299:     if((light.lightType == 0))
300:     {
301:         return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(false, vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), 1.0);
302:     }
303:     else
304:     {
305:         if((light.lightType == 1))
306:         {
307:             return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, normalize((-light.lightDirection.xyz)), light.color, 1.0);
308:         }
309:         else
310:         {
311:             if((light.lightType == 2))
312:             {
313:                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, normalize((light.lightPosition.xyz - wPos)), ((light.color * SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))) * 0.07957747154594767), 1.0);
314:             }
315:             else
316:             {
317:                 if((light.lightType == 3))
318:                 {
319:                     vec3 lDir = normalize((light.lightPosition.xyz - wPos));
320:                     return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, lDir, (((light.color * SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(lDir, normalize(light.lightDirection.xyz), light.cutOffInner, light.cutOffOuter)) * SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))) * 0.3183098861837907), 1.0);
321:                 }
322:                 else
323:                 {
324:                     if((light.lightType == 4))
325:                     {
326:                         vec3 lUnnorm = (light.lightPosition.xyz - wPos);
327:                         return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, SLEAardvarkRenderDemo_PBR_representativePointSpehre_OBJfz00NlqX4woYAFs00nVKQ(n, v, roughness, lUnnorm, light.radius), ((light.color * SLEAardvarkRenderDemo_PBR_attenuationSphere_Wj2p65IzIRidr79fESSIcg(lUnnorm, light.radius, n, normalize(lUnnorm))) * SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceSphere_UrX1ctp5f0mkaCN8lcAp4g(light.radius)), 1.0);
328:                     }
329:                     else
330:                     {
331:                         if((light.lightType == 5))
332:                         {
333:                             vec3 lUnnorm1 = (light.lightPosition.xyz - wPos);
334:                             vec3 ln = normalize(light.lightDirection.xyz);
335:                             vec3 r = SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
336:                             return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, SLEAardvarkRenderDemo_PBR_representativePointDisk_2JPHvvLUgcbUkMatH00ra00Q(r, wPos, light.radius, ln, light.lightPosition.xyz, lUnnorm1), (((light.color * SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize((light.virtualPos.xyz - wPos)), ln, light.cutOffInner, light.cutOffOuter)) * SLEAardvarkRenderDemo_PBR_attenuationDisk_U9LOD_bTSjagdDPGUR_Y5Q(lUnnorm1, light.radius, n, normalize(lUnnorm1), ln)) * SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceDisk_3Fm00pFf99CfR9hPbaGPImw(light.radius)), clamp(abs(dot(ln, r)), 0, 1));
337:                         }
338:                         else
339:                         {
340:                             if((light.lightType == 6))
341:                             {
342:                                 vec3 ln1 = normalize(light.lightDirection.xyz);
343:                                 vec4 d1 = (vec4(normalize((light.virtualPos.xyz - wPos)), 0.0) * light.fromWorld);
344:                                 vec4 d3 = (vec4(normalize((light.virtualPos2.xyz - wPos)), 0.0) * light.fromWorld);
345:                                 vec3 r1 = SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
346:                                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(true, SLEAardvarkRenderDemo_PBR_representativePointRectangle_RhNDGSMx9lhdbAUaPy333A(r1, wPos, light.p1, light.p2, light.p3, light.p4, ln1, light.lightPosition.xyz), (((light.color * (SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize(vec3(d1.x, d1.y, 0.0)), vec3(0.0, 1.0, 0.0), light.cutOffInner, light.cutOffOuter) * SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize(vec3(0.0, d3.y, d3.z)), vec3(0.0, 1.0, 0.0), light.cutOffInner, light.cutOffOuter))) * SLEAardvarkRenderDemo_PBR_attenuationRectangle_rv8niFPySJx9fZLgTLeI9A(wPos, light.p1, light.p2, light.p3, light.p4, (light.lightPosition.xyz - wPos), ln1, n)) * SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceRectangle_CSsH8PY0AZ5Q9fWUXd5VQ(light.p1, light.p2, light.p4)), clamp(abs(dot(ln1, r1)), 0, 1));
347:                             }
348:                             else
349:                             {
350:                                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double(false, vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), 1.0);
351:                             }
352:                         }
353:                     }
354:                 }
355:             }
356:         }
357:     }
358: }
359: 
360: 
361: float SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(bool ilb, float nDotV, float roughness)
362: {
363:     float k = (ilb ? ((roughness * roughness) / 2.0) : helper1(roughness));
364:     return (nDotV / ((nDotV * (1.0 - k)) + k));
365: }
366: 
367: 
368: float SLEAardvarkRenderDemo_BRDF_GeometrySmith_VXZTTP5v1N8YmBKR5NO9ZQ(bool ilb, vec3 n, vec3 v, vec3 l, float roughness)
369: {
370:     return (SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(ilb, max(0.0, dot(n, l)), roughness) * SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(ilb, max(0.0, dot(n, v)), roughness));
371: }
372: 
373: 
374: vec3 SLEAardvarkRenderDemo_PBR_pbrDirect_15lLodRE7wclkIKcw477pg(vec3 f0, float roughness, float metallic, vec3 albedo, vec4 wPos, vec3 v, vec3 n, float nDotV, SLEAardvarkRenderDemo_SLEUniform_Light light)
375: {
376:     tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double patternInput = SLEAardvarkRenderDemo_PBR_getLightParams_W004900tZOOSxYNA8ygbu8uA(light, wPos.xyz, n, v, roughness);
377:     if(patternInput.Item0)
378:     {
379:         vec3 h = normalize((v + patternInput.Item1));
380:         vec3 kS = SLEAardvarkRenderDemo_BRDF_fresnelSchlick_p2rPA4e4MFUMqGJ0C14Tng(f0, max(0.0, dot(h, v)));
381:         float nDotL = max(0.0, dot(n, patternInput.Item1));
382:         return (((((((1.0 - metallic) * (vec3(1.0, 1.0, 1.0) - kS)) * albedo) / 3.141592653589793) + ((((SLEAardvarkRenderDemo_BRDF_DistributionGGX_9rKdY223uBS_NUz8TxOtw(n, h, roughness) * SLEAardvarkRenderDemo_BRDF_GeometrySmith_VXZTTP5v1N8YmBKR5NO9ZQ(false, n, v, patternInput.Item1, roughness)) * kS) / max(0.001, ((4.0 * nDotV) * nDotL))) * patternInput.Item3)) * patternInput.Item2) * nDotL);
383:     }
384:     else
385:     {
386:         return vec3(0.0, 0.0, 0.0);
387:     }
388: }
389: 
390: 
391: 
392: #ifdef Vertex
393: layout(location = 0) in vec2 DiffuseColorCoordinates;
394: layout(location = 1) in vec4 Positions;
395: layout(location = 0) out vec2 fs_DiffuseColorCoordinates;
396: void main()
397: {
398:     fs_DiffuseColorCoordinates = DiffuseColorCoordinates;
399:     gl_Position = Positions;
400: }
401: 
402: #endif
403: 
404: 
405: 
406: #ifdef Fragment
407: 
408: vec2 SLEAardvarkRenderDemo_Shadow_lightWidth_LXD3gVwklkgvV5JWo3yVwg()
409: {
410:     if((Light.lightType == 0))
411:     {
412:         return vec2(0.01, 0.01);
413:     }
414:     else
415:     {
416:         if((Light.lightType == 1))
417:         {
418:             return vec2(0.01, 0.01);
419:         }
420:         else
421:         {
422:             if((Light.lightType == 2))
423:             {
424:                 return vec2(0.01, 0.01);
425:             }
426:             else
427:             {
428:                 if((Light.lightType == 3))
429:                 {
430:                     return vec2(0.01, 0.01);
431:                 }
432:                 else
433:                 {
434:                     if((Light.lightType == 4))
435:                     {
436:                         return vec2(max(0.01, (Light.radius * 2.0)));
437:                     }
438:                     else
439:                     {
440:                         if((Light.lightType == 5))
441:                         {
442:                             return vec2(max(0.01, (Light.radius * 2.0)));
443:                         }
444:                         else
445:                         {
446:                             if((Light.lightType == 6))
447:                             {
448:                                 return vec2(max(0.01, length((Light.p1 - Light.p4))), max(0.01, length((Light.p1 - Light.p2))));
449:                             }
450:                             else
451:                             {
452:                                 return vec2(0.01, 0.01);
453:                             }
454:                         }
455:                     }
456:                 }
457:             }
458:         }
459:     }
460: }
461: 
462: float SLEAardvarkRenderDemo_Shadow_vogelDiskSampling_lwchxL5jglAwqwkoagx25Q(float noise, vec4 pos, vec2 spread)
463: {
464:     float vis = 0.0;
465:     for(int i = 0; (i < 16); i++)
466:     {
467:         vec4 p = (pos + vec4((SLEAardvarkRenderDemo_Shadow_vogelDiskOffset_cR3OqSYynaKjhFMpTsd8fQ(i, 16, noise) * spread), 0.0, 0.0));
468:         vec4 samplePos = (0.5 + (0.5 * (p / p.w)));
469:         vis = (vis + (texture(samplerShadowMap, vec3(samplePos.xy, (samplePos.z - 0.005))) / 16.0));
470:     }
471:     return vis;
472: }
473: 
474: vec2 SLEAardvarkRenderDemo_Shadow_penumbra_xPgf541Zi7aStHEY_SGbgw(float noise, vec2 shadowMapUV, float surfaceDepth, vec2 lightSize)
475: {
476:     float avgBlockersDepth = 0.0;
477:     float blockersCount = 0.0;
478:     for(int i = 0; (i < 16); i++)
479:     {
480:         float sampleDepth = texture(samplerShadowMapTex, (shadowMapUV + (SLEAardvarkRenderDemo_Shadow_vogelDiskOffset_cR3OqSYynaKjhFMpTsd8fQ(i, 16, noise) / 100.0))).x;
481:         if((sampleDepth < surfaceDepth))
482:         {
483:             avgBlockersDepth = (avgBlockersDepth + sampleDepth);
484:             blockersCount = (blockersCount + 1.0);
485:         }
486:     }
487:     if((blockersCount > 0.0))
488:     {
489:         avgBlockersDepth = (avgBlockersDepth / blockersCount);
490:         return SLEAardvarkRenderDemo_Shadow_avgBlockersDepthToPenumbra_ntc5ns5VYYuiRbvrmwQQGw(lightSize, surfaceDepth, avgBlockersDepth);
491:     }
492:     else
493:     {
494:         return vec2(0.0, 0.0);
495:     }
496: }
497: 
498: float SLEAardvarkRenderDemo_Shadow_getShadow_5PX5AT33WcqEHaJ6zghmCw(vec4 wPos)
499: {
500:     vec4 lightSpacePos = (wPos * LightViewMatrix);
501:     vec4 samplePos = (0.5 + (0.5 * (lightSpacePos / lightSpacePos.w)));
502:     float noise = (6.283185307179586 * SLEAardvarkRenderDemo_Shadow_random_1MN50IO3BjRacQVcNxGOSw(samplePos));
503:     return SLEAardvarkRenderDemo_Shadow_vogelDiskSampling_lwchxL5jglAwqwkoagx25Q(noise, lightSpacePos, SLEAardvarkRenderDemo_Shadow_penumbra_xPgf541Zi7aStHEY_SGbgw(noise, samplePos.xy, samplePos.z, SLEAardvarkRenderDemo_Shadow_lightWidth_LXD3gVwklkgvV5JWo3yVwg()));
504: }
505: 
506: vec3 SLEAardvarkRenderDemo_PBR_pBRLightning_Khi8hKNZ_F300kuq29aCH00w(float metallic, float roughness, vec3 albedo, vec3 n, vec4 wPos)
507: {
508:     vec3 v = normalize((CameraLocation - wPos.xyz));
509:     return SLEAardvarkRenderDemo_PBR_pbrDirect_15lLodRE7wclkIKcw477pg(mix(vec3(0.04, 0.04, 0.04), albedo, metallic), roughness, metallic, albedo, wPos, v, n, max(0.0, dot(n, v)), Light);
510: }
511: 
512: layout(location = 0) in vec2 fs_DiffuseColorCoordinates;
513: layout(location = 0) out vec4 ColorsOut;
514: void main()
515: {
516:     vec4 albedo = texture(color, fs_DiffuseColorCoordinates);
517:     vec4 nr = texture(normal, fs_DiffuseColorCoordinates);
518:     ColorsOut = (vec4(((albedo.w < 0.0) ? vec3(0.0, 0.0, 0.0) : SLEAardvarkRenderDemo_PBR_pBRLightning_Khi8hKNZ_F300kuq29aCH00w(albedo.w, nr.w, vec4(albedo.xyz, 1.0).xyz, normalize(nr.xyz), texture(wPos, fs_DiffuseColorCoordinates))), 1.0) * SLEAardvarkRenderDemo_Shadow_getShadow_5PX5AT33WcqEHaJ6zghmCw(texture(wPos, fs_DiffuseColorCoordinates)));
519: }
520: 
521: #endif

 2: texture created
 2: [GL] RenderObjects: +22/-0 (6238ms)
 2: using optimized native program
 2: texture created
 2: result created
 2: [GL] RenderObjects: +300/-0 (641ms)
 2: using optimized native program
 2: texture created
 2: texture created
 2: texture created
 2: [GL] RenderObjects: +22/-0 (720ms)
 2: using optimized native program
 2: texture created
 2: result created
 2: [GL] RenderObjects: +300/-0 (628ms)
 2: using optimized native program
 2: texture created
 2: texture created
 2: texture created
 2: [GL] RenderObjects: +22/-0 (702ms)
 2: using optimized native program
 2: texture created
 2: result created
 2: [GL] RenderObjects: +300/-0 (585ms)
 2: using optimized native program
 2: texture created
 2: texture created
 2: texture created
 2: [GL] RenderObjects: +22/-0 (638ms)
 2: using optimized native program
 2: texture created
 2: result created
 2: [GL] RenderObjects: +300/-0 (520ms)
 2: using optimized native program
 2: texture created
 2: texture created
 2: texture created
 2: [GL] RenderObjects: +22/-0 (585ms)
 2: using optimized native program
 2: texture created
 2: result created
 2: [GL] RenderObjects: +300/-0 (494ms)
 2: using optimized native program
 2: texture created
 2: texture created
 2: texture created
 2: [GL] RenderObjects: +22/-0 (562ms)
 2: using optimized native program
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: [GL] RenderObjects: +299/-60 (553ms)
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: WARNING: AdaptiveRenderingResultCube.compute
 3: [Client] 1: stopped
