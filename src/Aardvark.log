 0: initializing aardvark ........................................................................
 0:   System Information:
 0:     System:      Microsoft Windows 10.0.19041
 0:     Processor:   4 core x64
 0:     Process:     x64
 0:     Framework:   .NET Core 3.1.11
 0:   Loading native dependencies for Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: linux/AMD64/libglfw.so.3
 0:     found: mac/AMD64/libglfw.3.dylib
 0:     found: windows/AMD64/glfw3.dll
 0:     copy glfw3.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Application.Slim.GL-32f42d4c-4cb0-88cf-a5d3-8c852c69d925-64\glfw3.dll
 0:     found: windows/x86/glfw3.dll
 0:   Loading native dependencies for Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 0.007 s
 0:   Loading native dependencies for Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: linux/AMD64/glvm.so
 0:     found: mac/AMD64/glvm.dylib
 0:     found: windows/AMD64/glvm.dll
 0:     copy glvm.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.dll
 0:     found: windows/AMD64/glvm.exp
 0:     copy glvm.exp to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.exp
 0:     found: windows/AMD64/glvm.iobj
 0:     copy glvm.iobj to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.iobj
 0:     found: windows/AMD64/glvm.ipdb
 0:     copy glvm.ipdb to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.ipdb
 0:     found: windows/AMD64/glvm.lib
 0:     copy glvm.lib to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.lib
 0:     found: windows/AMD64/glvm.pdb
 0:     copy glvm.pdb to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.pdb
 0:     found: windows/x86/glvm.dll
 0:     found: windows/x86/glvm.exp
 0:     found: windows/x86/glvm.iobj
 0:     found: windows/x86/glvm.ipdb
 0:     found: windows/x86/glvm.lib
 0:     found: windows/x86/glvm.pdb
 0:   Loading native dependencies for Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 0.000 s
 0:   Loading native dependencies for Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: remap.xml
 0:     found: linux/AMD64/libturbojpeg.so
 0:     found: mac/AMD64/libturbojpeg.dylib
 0:     found: windows/AMD64/turbojpeg.dll
 0:     copy turbojpeg.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Service-6c07790d-9ae8-a533-bcc3-f89762a0781f-64\turbojpeg.dll
 0:     found: windows/x86/turbojpeg.dll
 0:   Loading native dependencies for Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 0.013 s
 0:   Loading plugins ............................................................................
 0:     [LoadPlugins] Using plugin cache file name: C:\Users\Stefan\AppData\Roaming\Aardvark\cache\AardvarkRenderDemo_plugins.bin
 0:     [ReadCacheFile] loaded cache file: C:\Users\Stefan\AppData\Roaming\Aardvark\cache\AardvarkRenderDemo_plugins.bin
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardium.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Application.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Application.Slim.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Application.Slim.GL.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Application.Slim.Vulkan.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.Essentials.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.FSharp.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.Incremental.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.Rendering.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.Runtime.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.Telemetry.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.TypeProviders.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.GPGPU.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Rendering.GL.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Rendering.Vulkan.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.SceneGraph.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.SceneGraph.IO.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Service.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.UI.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.UI.Primitives.dll
 0:     [GetPluginAssemblyPaths] retrying to load because not in cache D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\AardvarkRenderDemo.dll
 0:     [GetPluginAssemblyPaths] retrying to load because not in cache D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\AardvarkRenderDemo.exe
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Adaptify.Core.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\AssimpNet.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\DevILSharp.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FShade.Core.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FShade.GLSL.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FShade.Imperative.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FShade.SpirV.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FSharp.Core.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FSharp.Data.Adaptive.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FsPickler.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FsPickler.Json.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\GLSLangSharp.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Microsoft.DotNet.PlatformAbstractions.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Microsoft.Extensions.DependencyModel.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Newtonsoft.Json.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\OpenTK.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Silk.NET.Core.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Silk.NET.GLFW.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Suave.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\System.Collections.Immutable.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\System.Reactive.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\System.Runtime.CompilerServices.Unsafe.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\System.Text.Json.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Ultz.SuperInvoke.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Ultz.SuperInvoke.Loader.dll
 0:   Loading plugins .................................................................... 0.053 s
 0:   using cache dir: C:\Users\Stefan\AppData\Roaming\Aardvark\cache
 0:   Loading native dependencies for DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: remap.xml
 0:     found: mac/AMD64/libDevIL.dylib
 0:     found: mac/AMD64/libILU.dylib
 0:     found: mac/AMD64/libILUT.dylib
 0:     found: windows/AMD64/DevIL.dll
 0:     copy DevIL.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64\DevIL.dll
 0:     found: windows/AMD64/ILU.dll
 0:     copy ILU.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64\ILU.dll
 0:     found: windows/AMD64/ILUT.dll
 0:     copy ILUT.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64\ILUT.dll
 0:     found: windows/x86/DevIL.dll
 0:     found: windows/x86/ILU.dll
 0:     found: windows/x86/ILUT.dll
 0:   Loading native dependencies for DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null 0.000 s
 0:   Loading native dependencies for Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: remap.xml
 0:     found: linux/AMD64/libvkvm.so
 0:     found: windows/AMD64/vkvm.dll
 0:     copy vkvm.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64\vkvm.dll
 0:     found: windows/AMD64/vkvm.exp
 0:     copy vkvm.exp to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64\vkvm.exp
 0:     found: windows/AMD64/vkvm.lib
 0:     copy vkvm.lib to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64\vkvm.lib
 0:     found: windows/AMD64/vkvm.pdb
 0:     copy vkvm.pdb to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64\vkvm.pdb
 0:     found: windows/x86/vkvm.dll
 0:     found: windows/x86/vkvm.exp
 0:     found: windows/x86/vkvm.lib
 0:     found: windows/x86/vkvm.pdb
 0:   Loading native dependencies for Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 0.000 s
 0:   Loading native dependencies for GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: linux/AMD64/libGLSLangNative.so
 0:     found: windows/AMD64/GLSLangNative.dll
 0:     copy GLSLangNative.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.dll
 0:     found: windows/AMD64/GLSLangNative.exp
 0:     copy GLSLangNative.exp to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.exp
 0:     found: windows/AMD64/GLSLangNative.iobj
 0:     copy GLSLangNative.iobj to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.iobj
 0:     found: windows/AMD64/GLSLangNative.ipdb
 0:     copy GLSLangNative.ipdb to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.ipdb
 0:     found: windows/AMD64/GLSLangNative.lib
 0:     copy GLSLangNative.lib to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.lib
 0:     found: windows/AMD64/GLSLangNative.pdb
 0:     copy GLSLangNative.pdb to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.pdb
 0:   Loading native dependencies for GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null 0.000 s
 0:   Loading native dependencies for AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: linux/AMD64/libassimp.so
 0:     found: mac/AMD64/libassimp.dylib
 0:     found: windows/AMD64/Assimp64.dll
 0:     copy Assimp64.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64\Assimp64.dll
 0:     found: windows/x86/Assimp32.dll
 0:   Loading native dependencies for AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null 0.000 s
 0:   [cache miss] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:   [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:   [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   initializing PixImageDevil .................................................................
 0:     probing paths for DevIL
 0:       D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:       C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64
 0:     [Introspection] loaded native library DevIL from C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64\DevIL.dll
 0:   initializing PixImageDevil ......................................................... 0.026 s
 0:   [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   initializing CustomPicklerProvider .........................................................
 0:     [cache miss] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     installing pickler: Aardvark.Base.Picklers.AdaptivePicklers
 0:   initializing CustomPicklerProvider ................................................. 0.045 s
 0:   [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   initializing SceneGraphCompletenessCheck ...................................................
 0:     [cache miss] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache miss] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   initializing SceneGraphCompletenessCheck ........................................... 0.143 s
 0:   [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:   [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.SceneGraph.IO, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   initializing Loader ................................................................ 0.000 s
 0: initializing aardvark ................................................................ 0.554 s
 0: probing paths for nvapi64
 0:   D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Application.Slim.GL-32f42d4c-4cb0-88cf-a5d3-8c852c69d925-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Service-6c07790d-9ae8-a533-bcc3-f89762a0781f-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64
 0: [Introspection] could not load native library nvapi64.dll
 0: trying to resolve native library libEGL.dll
 0: probing paths for libEGL
 0:   D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Application.Slim.GL-32f42d4c-4cb0-88cf-a5d3-8c852c69d925-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Service-6c07790d-9ae8-a533-bcc3-f89762a0781f-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64
 0: [Introspection] could not load native library libEGL.dll
 0: OpenGL 4.5 working
 0: backbuffer
 0:   color: R8G8B8A8
 0:   depth: D24S8
 0: probing paths for glvm
 0:   D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0: [Introspection] loaded native library glvm from C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.dll
 0: backbuffer
 0:   color: R8G8B8A8
 0:   depth: D24S8
 0: initializing OpenGL runtime ..................................................................
 0:   probing paths for glvm
 0:     D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Application.Slim.GL-32f42d4c-4cb0-88cf-a5d3-8c852c69d925-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Service-6c07790d-9ae8-a533-bcc3-f89762a0781f-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64
 0:   [Introspection] loaded native library glvm from C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.dll
 0:   probing paths for Opengl32
 0:     D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Application.Slim.GL-32f42d4c-4cb0-88cf-a5d3-8c852c69d925-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Service-6c07790d-9ae8-a533-bcc3-f89762a0781f-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64
 0:   [Introspection] loaded native library Opengl32.dll from Opengl32.dll
 0:   probing paths for opengl32
 0:     D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:   [Introspection] loaded native library opengl32.dll from opengl32.dll
 0:   probing paths for kernel32
 0:     D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:   [Introspection] loaded native library kernel32.dll from kernel32.dll
 0:   vendor:   "ATI Technologies Inc."
 0:   renderer: "AMD Radeon (TM) R9 380 Series"
 0:   version:  OpenGL 4.5.14736 / GLSL 4.6
 0: initializing OpenGL runtime .......................................................... 0.134 s
 0: WARNING: load
 0: probing paths for kernel32
 0:   D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64
 0: [Introspection] loaded native library kernel32.dll from kernel32.dll
 0: Aardvark.UI serves template.html
 0: Aardvark.UI serves favicon.ico
 0: WARNING: [aardvark.media] currently ThreadPool.MinThreads is (4,4)
 0: WARNING: [aardvark.media] unfortunately, currently we need to adjust this to at least (12,12) due to an open issue https://github.com/aardvark-platform/aardvark.media/issues/19
 0: Aardvark.Service serves aardvark.js
 0: Aardvark.Service serves rgbcolor.js
 0: Aardvark.Service serves docking.js
 0: Aardvark.Service serves semantic.js
 0: Aardvark.Service serves jquery-3-3-1.js
 0: Aardvark.Service serves touchstick.js
 0: Aardvark.Service serves aardfs.js
 0: Aardvark.Service serves essentialstuff.js
 0: Aardvark.Service serves aardvark.css
 0: Aardvark.Service serves docking.css
 0: Aardvark.Service serves semantic.css
 0: Aardvark.Service serves aardfs.css
 0: Aardvark.Service serves semantic-overrides.css
 0: Aardvark.Service serves fonts.css
 0: Aardvark.Service serves index.html
 0: Aardvark.Service serves stats.html
 0: Aardvark.Service serves aardvark-light.svg
 0: Aardvark.Service serves aardvark.svg
 0: Aardvark.Service serves brand-icons.woff2
 0: Aardvark.Service serves outline-icons.woff2
 0: Aardvark.Service serves icons.woff2
 0: Aardvark.Service serves S6u8w4BMUTPHjxsAUi-qJCY.woff2
 0: Aardvark.Service serves S6u8w4BMUTPHjxsAXC-q.woff2
 0: Aardvark.Service serves S6u9w4BMUTPHh6UVSwaPGR_p.woff2
 0: Aardvark.Service serves S6u9w4BMUTPHh6UVSwiPGQ.woff2
 0: Aardvark.Service serves S6uyw4BMUTPHjx4wXg.woff2
 0: Aardvark.Service serves S6uyw4BMUTPHjxAwXjeu.woff2
 0: Aardvark.Service serves S6u_w4BMUTPHjxsI5wq_FQft1dw.woff2
 0: Aardvark.Service serves S6u_w4BMUTPHjxsI5wq_Gwft.woff2
 0: Aardvark.UI serves template.html
 0: Aardvark.UI serves favicon.ico
 0: Aardvark.UI.Primitives serves spectrum.css
 0: Aardvark.UI.Primitives serves spectrum.js
 1: [Server] created client for (d86ed851-8997-c979-09a0-78ae9906e92d/n7), mapping enabled
 1: [Client] 1: running n7
 2: [Scene] n7: created
 2: texture created
 2: result created
 2: texture created
 2: result created
 2: WARNING: load
 2: Compiling shader:
  1: #version 460
  2: #define __SHADER_STAGE__
  3: 
  4: 
  5: 
  6: 
  7: struct tup_Aardvark_Base_V3d_Aardvark_Base_V3d
  8: {
  9:     vec3 Item0;
 10:     vec3 Item1;
 11: };
 12: 
 13: struct tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d
 14: {
 15:     vec3 Item0;
 16:     vec3 Item1;
 17:     vec3 Item2;
 18:     vec3 Item3;
 19: };
 20: 
 21: struct tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d
 22: {
 23:     bool Item0;
 24:     vec3 Item1;
 25:     vec3 Item2;
 26:     float Item3;
 27:     vec3 Item4;
 28: };
 29: 
 30: struct tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double
 31: {
 32:     vec3 Item0;
 33:     vec3 Item1;
 34:     float Item2;
 35: };
 36: 
 37: struct SLEAardvarkRenderDemo_SLEUniform_Light
 38: {
 39:     int lightType;
 40:     vec4 lightPosition;
 41:     vec4 lightDirection;
 42:     vec3 color;
 43:     bool castsShadow;
 44:     float cutOffInner;
 45:     float cutOffOuter;
 46:     float radius;
 47:     vec3 virtualPos;
 48:     vec3 virtualPos2;
 49:     vec3 p1;
 50:     vec3 p2;
 51:     vec3 p3;
 52:     vec3 p4;
 53:     mat4x4 toWorld;
 54:     mat4x4 fromWorld;
 55: };
 56: 
 57: layout(std140, binding = 0)
 58: uniform Global
 59: {
 60:     float AmbientIntensity;
 61:     SLEAardvarkRenderDemo_SLEUniform_Light LightArray[80];
 62:     int LightCount;
 63:     float SkyMapIntensity;
 64: };
 65: 
 66: 
 67: layout(std140, binding = 1)
 68: uniform PerView
 69: {
 70:     vec3 CameraLocation;
 71:     mat4x4 ViewProjTrafo;
 72: };
 73: 
 74: 
 75: layout(std140, binding = 2)
 76: uniform PerModel
 77: {
 78:     mat4x4 ModelTrafo;
 79: };
 80: 
 81: 
 82: layout(binding = 0)
 83: uniform samplerCube diffuseIrradianceSampler;
 84: 
 85: layout(binding = 1)
 86: uniform samplerCube prefilteredSpecColorSampler;
 87: 
 88: layout(binding = 2)
 89: uniform sampler2D samplerBRDFLtu;
 90: 
 91: layout(binding = 3)
 92: uniform samplerCube skySampler;
 93: 
 94: float SLEAardvarkRenderDemo_BRDF_DistributionGGX_nY0za00tv6jWojDhC5JYWXw(float nDotH, float roughness)
 95: {
 96:     float a = (roughness * roughness);
 97:     float a2 = (a * a);
 98:     float deno = (((nDotH * nDotH) * (a2 - 1.0)) + 1.0);
 99:     return (a2 / ((3.141592653589793 * deno) * deno));
100: }
101: 
102: 
103: float helper1(float roughness)
104: {
105:     float r = (roughness + 1.0);
106:     return ((r * r) / 8.0);
107: }
108: 
109: 
110: vec3 SLEAardvarkRenderDemo_PBR_diffuseLobe_28BmPU7EzF002N1qCMj5AKQ(vec3 F, float metallic, vec3 albedo)
111: {
112:     return (((vec3(1.0, 1.0, 1.0) - F) * ((1.0 - metallic) * albedo)) / 3.141592653589793);
113: }
114: 
115: 
116: tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d(vec3 item0, vec3 item1, vec3 item2, vec3 item3)
117: {
118:     tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d res;
119:     res.Item0 = item0;
120:     res.Item1 = item1;
121:     res.Item2 = item2;
122:     res.Item3 = item3;
123:     return res;
124: }
125: 
126: 
127: vec3 SLEAardvarkRenderDemo_BRDF_fresnelSchlick_oKvmgrrRv31EPsFk6qorKg(vec3 f0, float cosTheta)
128: {
129:     return (f0 + ((clamp(dot(f0, vec3(16.5, 16.5, 16.5)), 0, 1) - f0) * pow((1.0 - cosTheta), 5.0)));
130: }
131: 
132: 
133: vec3 SLEAardvarkRenderDemo_PBR_f0ClearCoatToSurface_J558wyL5EFxmvuWviPWtyA(vec3 f0Base)
134: {
135:     vec3 sqrtBase = sqrt(f0Base);
136:     vec3 baseIOR = ((1.0 + sqrtBase) / (1.0 - sqrtBase));
137:     return (((baseIOR - 1.5) / (baseIOR + 1.5)) * ((baseIOR - 1.5) / (baseIOR + 1.5)));
138: }
139: 
140: 
141: vec3 SLEAardvarkRenderDemo_LightShader_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(vec3 n, vec3 v, float roughness)
142: {
143:     return normalize(mix(n, (-reflect(n, v)), (1.0 - roughness)));
144: }
145: 
146: 
147: vec3 SLEAardvarkRenderDemo_LightShader_representativePointSpehre_DvHCJ7t4LLabKB7nbPvi5A(vec3 n, vec3 v, float roughness, vec3 lUnnorm, float radius)
148: {
149:     vec3 r = SLEAardvarkRenderDemo_LightShader_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
150:     vec3 centerToRay = ((dot(lUnnorm, r) * r) - lUnnorm);
151:     return normalize((lUnnorm + (centerToRay * clamp((radius / length(centerToRay)), 0.0, 1.0))));
152: }
153: 
154: 
155: float SLEAardvarkRenderDemo_LightShader_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(vec3 o, vec3 d, vec3 planeOrigin, vec3 planeNormal)
156: {
157:     return (dot(planeNormal, (planeOrigin - o)) / dot(planeNormal, d));
158: }
159: 
160: 
161: float SLEAardvarkRenderDemo_LightShader_traceTriangle_TUj_88KirlHsDKjIMhJJAQ(vec3 o, vec3 d, vec3 A, vec3 B, vec3 C)
162: {
163:     vec3 p = (o + (d * SLEAardvarkRenderDemo_LightShader_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(o, d, A, normalize(cross((B - A), (C - B))))));
164:     vec3 n2 = normalize(cross((C - B), (p - C)));
165:     if(((dot(normalize(cross((B - A), (p - B))), n2) > 0.999) && (dot(n2, normalize(cross((A - C), (p - A)))) > 0.999)))
166:     {
167:         return 1.0;
168:     }
169:     else
170:     {
171:         return 0.0;
172:     }
173: }
174: 
175: 
176: float SLEAardvarkRenderDemo_LightShader_traceRectangle_Y1YWv5k7o5dZMgAY1V3rCQ(vec3 o, vec3 d, vec3 A, vec3 B, vec3 C, vec3 D)
177: {
178:     return max(SLEAardvarkRenderDemo_LightShader_traceTriangle_TUj_88KirlHsDKjIMhJJAQ(o, d, A, B, C), SLEAardvarkRenderDemo_LightShader_traceTriangle_TUj_88KirlHsDKjIMhJJAQ(o, d, C, D, A));
179: }
180: 
181: 
182: float SLEAardvarkRenderDemo_LightShader_luminousPowerToLuminanceDisk_3Fm00pFf99CfR9hPbaGPImw(float radius)
183: {
184:     return (1.0 / (((radius * radius) * 3.141592653589793) * 3.141592653589793));
185: }
186: 
187: 
188: float SLEAardvarkRenderDemo_LightShader_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(vec3 lDir, vec3 ln, float cutOffInner, float cutOffOuter)
189: {
190:     return clamp(((dot(lDir, (-ln)) - cutOffOuter) / (cutOffInner - cutOffOuter)), 0, 1);
191: }
192: 
193: 
194: float SLEAardvarkRenderDemo_LightShader_luminousPowerToLuminanceRectangle_CSsH8PY0AZ5Q9fWUXd5VQ(vec3 p1, vec3 p2, vec3 p4)
195: {
196:     return (1.0 / ((abs(length((p1 - p2))) * abs(length((p1 - p4)))) * 3.141592653589793));
197: }
198: 
199: 
200: float helper(float cosTheta, float sinSigmaSqr, float sinTheta)
201: {
202:     float x = sqrt(((1.0 / sinSigmaSqr) - 1.0));
203:     float y = ((-x) * (cosTheta / sinTheta));
204:     float sinThetaSqrtY = (sinTheta * sqrt((1.0 - (y * y))));
205:     return ((((cosTheta * acos(y)) - (x * sinThetaSqrtY)) * sinSigmaSqr) + atan((sinThetaSqrtY / x)));
206: }
207: 
208: 
209: float SLEAardvarkRenderDemo_LightShader_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(float dist)
210: {
211:     float d = max(dist, 0.01);
212:     return (1.0 / (d * d));
213: }
214: 
215: 
216: float SLEAardvarkRenderDemo_LightShader_luminousPowerToLuminanceSphere_UrX1ctp5f0mkaCN8lcAp4g(float radius)
217: {
218:     return (1.0 / ((((radius * radius) * 4.0) * 3.141592653589793) * 3.141592653589793));
219: }
220: 
221: 
222: float SLEAardvarkRenderDemo_LightShader_rectangleSolidAngle_yk0LnyTP2qLGhxTZr4oSHw(vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4)
223: {
224:     vec3 v1 = (p1 - wPos);
225:     vec3 v2 = (p2 - wPos);
226:     vec3 v3 = (p3 - wPos);
227:     vec3 v4 = (p4 - wPos);
228:     vec3 n1 = normalize(cross(v1, v2));
229:     vec3 n2 = normalize(cross(v2, v3));
230:     vec3 n3 = normalize(cross(v3, v4));
231:     vec3 n4 = normalize(cross(v4, v1));
232:     return ((((acos(dot((-n1), n2)) + acos(dot((-n2), n3))) + acos(dot((-n3), n4))) + acos(dot((-n4), n1))) - 6.283185307179586);
233: }
234: 
235: 
236: vec3 SLEAardvarkRenderDemo_LightShader_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(vec3 a, vec3 b, vec3 c)
237: {
238:     vec3 ab = (b - a);
239:     return (a + (clamp((dot((c - a), ab) / dot(ab, ab)), 0, 1) * ab));
240: }
241: 
242: 
243: tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(bool item0, vec3 item1, vec3 item2, float item3, vec3 item4)
244: {
245:     tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d res;
246:     res.Item0 = item0;
247:     res.Item1 = item1;
248:     res.Item2 = item2;
249:     res.Item3 = item3;
250:     res.Item4 = item4;
251:     return res;
252: }
253: 
254: 
255: tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double(vec3 item0, vec3 item1, float item2)
256: {
257:     tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double res;
258:     res.Item0 = item0;
259:     res.Item1 = item1;
260:     res.Item2 = item2;
261:     return res;
262: }
263: 
264: 
265: float SLEAardvarkRenderDemo_BRDF_visibilityAshikhmin_1GWL7ALGseRABCZZ00R7N8g(float nDotV, float nDotL)
266: {
267:     return (1.0 / max(0.001, (4.0 * ((nDotL + nDotV) - (nDotL * nDotV)))));
268: }
269: 
270: 
271: float SLEAardvarkRenderDemo_BRDF_distributionCharlie_9Ai0hRoW1dnTGa2k_n8d7g(float roughness, float nDotH)
272: {
273:     float rcpR = (1.0 / (roughness * roughness));
274:     return (((2.0 + rcpR) * pow((1.0 - (nDotH * nDotH)), (rcpR * 0.5))) / 6.283185307179586);
275: }
276: 
277: 
278: tup_Aardvark_Base_V3d_Aardvark_Base_V3d new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d(vec3 item0, vec3 item1)
279: {
280:     tup_Aardvark_Base_V3d_Aardvark_Base_V3d res;
281:     res.Item0 = item0;
282:     res.Item1 = item1;
283:     return res;
284: }
285: 
286: 
287: vec3 SLEAardvarkRenderDemo_BRDF_fresnelSchlickRoughness_R3fRwUfkUk_vtBtqu24DwA(vec3 f0, float roughness, float cosTheta)
288: {
289:     return (f0 + ((max(vec3((clamp(dot(f0, vec3(16.5, 16.5, 16.5)), 0, 1) - roughness)), f0) - f0) * pow((1.0 - cosTheta), 5.0)));
290: }
291: 
292: 
293: vec3 SLEAardvarkRenderDemo_PBR_specularLobeCloth_3kg1FHZlm5ky7EgqJuXVoQ(vec3 F, float roughness, float nDotH, float nDotV, float nDotL)
294: {
295:     return ((SLEAardvarkRenderDemo_BRDF_distributionCharlie_9Ai0hRoW1dnTGa2k_n8d7g(roughness, nDotH) * SLEAardvarkRenderDemo_BRDF_visibilityAshikhmin_1GWL7ALGseRABCZZ00R7N8g(nDotV, nDotL)) * F);
296: }
297: 
298: 
299: vec3 SLEAardvarkRenderDemo_LightShader_representativePointRectangle_7uXB4Za8_80Ps10k1oBj6A(vec3 r, vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4, vec3 ln, vec3 lightPosition)
300: {
301:     if((SLEAardvarkRenderDemo_LightShader_traceRectangle_Y1YWv5k7o5dZMgAY1V3rCQ(wPos, r, p1, p2, p3, p4) > 0.0))
302:     {
303:         return r;
304:     }
305:     else
306:     {
307:         vec3 tracedPlane = (wPos + (r * SLEAardvarkRenderDemo_LightShader_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(wPos, r, lightPosition, ln)));
308:         vec3 pc1 = SLEAardvarkRenderDemo_LightShader_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p1, p2, tracedPlane);
309:         vec3 pc2 = SLEAardvarkRenderDemo_LightShader_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p2, p3, tracedPlane);
310:         vec3 pc3 = SLEAardvarkRenderDemo_LightShader_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p3, p4, tracedPlane);
311:         vec3 pc4 = SLEAardvarkRenderDemo_LightShader_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p4, p1, tracedPlane);
312:         float d2 = distance(pc2, tracedPlane);
313:         float d3 = distance(pc3, tracedPlane);
314:         float minDist = distance(pc1, tracedPlane);
315:         vec3 p = pc1;
316:         if((d2 < minDist))
317:         {
318:             minDist = d2;
319:             p = pc2;
320:         }
321:         if((d3 < minDist))
322:         {
323:             minDist = d3;
324:             p = pc3;
325:         }
326:         if((distance(pc4, tracedPlane) < minDist))
327:         {
328:             p = pc4;
329:         }
330:         return normalize((p - wPos));
331:     }
332: }
333: 
334: 
335: float SLEAardvarkRenderDemo_LightShader_attenuationRectangle_je2tqG4tNH0N0h4ostr9dQ(vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4, vec3 lUnnorm, vec3 ln, vec3 n)
336: {
337:     if((dot((-lUnnorm), ln) > 0.0))
338:     {
339:         return ((max(0.0, SLEAardvarkRenderDemo_LightShader_rectangleSolidAngle_yk0LnyTP2qLGhxTZr4oSHw(wPos, p1, p2, p3, p4)) * 0.2) * ((((clamp(dot(n, normalize(lUnnorm)), 0, 1) + clamp(dot(n, normalize((p1 - wPos))), 0, 1)) + clamp(dot(n, normalize((p2 - wPos))), 0, 1)) + clamp(dot(n, normalize((p3 - wPos))), 0, 1)) + clamp(dot(n, normalize((p4 - wPos))), 0, 1)));
340:     }
341:     else
342:     {
343:         return 0.0;
344:     }
345: }
346: 
347: 
348: float SLEAardvarkRenderDemo_LightShader_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(float cosTheta, float sinSigmaSqr)
349: {
350:     float sinTheta = sqrt((1.0 - (cosTheta * cosTheta)));
351:     return max(0.0, (((cosTheta * cosTheta) > sinSigmaSqr) ? ((3.141592653589793 * sinSigmaSqr) * clamp(cosTheta, 0.0, 1.0)) : helper(cosTheta, sinSigmaSqr, sinTheta)));
352: }
353: 
354: 
355: float SLEAardvarkRenderDemo_LightShader_attenuationSphere_TfcoeJaHdIXDFd7jmK6bvA(vec3 lUnnorm, float radius, vec3 n, vec3 lDir)
356: {
357:     return SLEAardvarkRenderDemo_LightShader_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(clamp(dot(n, lDir), -0.999, 0.999), min(0.9999, ((radius * radius) / dot(lUnnorm, lUnnorm))));
358: }
359: 
360: 
361: float SLEAardvarkRenderDemo_LightShader_attenuationDisk_hLzuCj5zj00GiLEJKhGz99g(vec3 lUnnorm, float radius, vec3 n, vec3 lDir, vec3 ln)
362: {
363:     float radius2 = (radius * radius);
364:     return (SLEAardvarkRenderDemo_LightShader_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(clamp(dot(n, lDir), -0.999, 0.999), (radius2 / (radius2 + max(radius2, dot(lUnnorm, lUnnorm))))) * clamp(dot(ln, (-lDir)), 0, 1));
365: }
366: 
367: 
368: vec3 SLEAardvarkRenderDemo_LightShader_representativePointDisk_wKhAwWDNYwPsVTi00Wbf63g(vec3 r, vec3 wPos, float radius, vec3 ln, vec3 lightPosition, vec3 lUnnorm)
369: {
370:     vec3 centerToRay = ((wPos + (r * SLEAardvarkRenderDemo_LightShader_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(wPos, r, lightPosition, ln))) - lightPosition);
371:     return normalize((lUnnorm + (centerToRay * clamp((radius / length(centerToRay)), 0, 1))));
372: }
373: 
374: 
375: tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d SLEAardvarkRenderDemo_LightShader_getLightParams_y4VJUa8M00qwIr8rIzH00WQ(SLEAardvarkRenderDemo_SLEUniform_Light light, vec3 wPos, vec3 n, vec3 v, float roughness)
376: {
377:     if((light.lightType == 0))
378:     {
379:         return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(false, vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), 1.0, vec3(0.0, 0.0, 0.0));
380:     }
381:     else
382:     {
383:         if((light.lightType == 1))
384:         {
385:             return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, normalize((-light.lightDirection.xyz)), light.color, 1.0, light.color);
386:         }
387:         else
388:         {
389:             if((light.lightType == 2))
390:             {
391:                 vec3 illuminannce = ((light.color * SLEAardvarkRenderDemo_LightShader_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))) * 0.07957747154594767);
392:                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, normalize((light.lightPosition.xyz - wPos)), illuminannce, 1.0, illuminannce);
393:             }
394:             else
395:             {
396:                 if((light.lightType == 3))
397:                 {
398:                     vec3 lDir = normalize((light.lightPosition.xyz - wPos));
399:                     vec3 illuminannce1 = (((light.color * SLEAardvarkRenderDemo_LightShader_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(lDir, normalize(light.lightDirection.xyz), light.cutOffInner, light.cutOffOuter)) * SLEAardvarkRenderDemo_LightShader_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))) * 0.3183098861837907);
400:                     return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, lDir, illuminannce1, 1.0, illuminannce1);
401:                 }
402:                 else
403:                 {
404:                     if((light.lightType == 4))
405:                     {
406:                         vec3 lUnnorm = (light.lightPosition.xyz - wPos);
407:                         vec3 l = SLEAardvarkRenderDemo_LightShader_representativePointSpehre_DvHCJ7t4LLabKB7nbPvi5A(n, v, roughness, lUnnorm, light.radius);
408:                         return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, l, (((light.color * SLEAardvarkRenderDemo_LightShader_attenuationSphere_TfcoeJaHdIXDFd7jmK6bvA(lUnnorm, light.radius, n, normalize(lUnnorm))) * SLEAardvarkRenderDemo_LightShader_luminousPowerToLuminanceSphere_UrX1ctp5f0mkaCN8lcAp4g(light.radius)) / dot(n, l)), 1.0, ((light.color * 0.07957747154594767) * SLEAardvarkRenderDemo_LightShader_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))));
409:                     }
410:                     else
411:                     {
412:                         if((light.lightType == 5))
413:                         {
414:                             vec3 lUnnorm1 = (light.lightPosition.xyz - wPos);
415:                             vec3 ln = normalize(light.lightDirection.xyz);
416:                             float intensity = SLEAardvarkRenderDemo_LightShader_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize((light.virtualPos.xyz - wPos)), ln, light.cutOffInner, light.cutOffOuter);
417:                             vec3 r = SLEAardvarkRenderDemo_LightShader_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
418:                             vec3 l1 = SLEAardvarkRenderDemo_LightShader_representativePointDisk_wKhAwWDNYwPsVTi00Wbf63g(r, wPos, light.radius, ln, light.lightPosition.xyz, lUnnorm1);
419:                             return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, l1, ((((light.color * intensity) * SLEAardvarkRenderDemo_LightShader_attenuationDisk_hLzuCj5zj00GiLEJKhGz99g(lUnnorm1, light.radius, n, normalize(lUnnorm1), ln)) * SLEAardvarkRenderDemo_LightShader_luminousPowerToLuminanceDisk_3Fm00pFf99CfR9hPbaGPImw(light.radius)) / dot(n, l1)), clamp(abs(dot(ln, r)), 0, 1), (((light.color * intensity) * 0.3183098861837907) * SLEAardvarkRenderDemo_LightShader_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))));
420:                         }
421:                         else
422:                         {
423:                             if((light.lightType == 6))
424:                             {
425:                                 vec3 ln1 = normalize(light.lightDirection.xyz);
426:                                 vec4 d1 = (vec4(normalize((light.virtualPos.xyz - wPos)), 0.0) * light.fromWorld);
427:                                 vec4 d3 = (vec4(normalize((light.virtualPos2.xyz - wPos)), 0.0) * light.fromWorld);
428:                                 float intensity1 = (SLEAardvarkRenderDemo_LightShader_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize(vec3(d1.x, d1.y, 0.0)), vec3(0.0, 1.0, 0.0), light.cutOffInner, light.cutOffOuter) * SLEAardvarkRenderDemo_LightShader_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize(vec3(0.0, d3.y, d3.z)), vec3(0.0, 1.0, 0.0), light.cutOffInner, light.cutOffOuter));
429:                                 vec3 r1 = SLEAardvarkRenderDemo_LightShader_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
430:                                 vec3 l2 = SLEAardvarkRenderDemo_LightShader_representativePointRectangle_7uXB4Za8_80Ps10k1oBj6A(r1, wPos, light.p1, light.p2, light.p3, light.p4, ln1, light.lightPosition.xyz);
431:                                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, l2, ((((light.color * intensity1) * SLEAardvarkRenderDemo_LightShader_attenuationRectangle_je2tqG4tNH0N0h4ostr9dQ(wPos, light.p1, light.p2, light.p3, light.p4, (light.lightPosition.xyz - wPos), ln1, n)) * SLEAardvarkRenderDemo_LightShader_luminousPowerToLuminanceRectangle_CSsH8PY0AZ5Q9fWUXd5VQ(light.p1, light.p2, light.p4)) / dot(n, l2)), clamp(abs(dot(ln1, r1)), 0, 1), (((light.color * intensity1) * 0.3183098861837907) * SLEAardvarkRenderDemo_LightShader_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))));
432:                             }
433:                             else
434:                             {
435:                                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(false, vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), 1.0, vec3(0.0, 0.0, 0.0));
436:                             }
437:                         }
438:                     }
439:                 }
440:             }
441:         }
442:     }
443: }
444: 
445: 
446: float SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(bool ilb, float nDotV, float roughness)
447: {
448:     float k = (ilb ? ((roughness * roughness) / 2.0) : helper1(roughness));
449:     return (nDotV / ((nDotV * (1.0 - k)) + k));
450: }
451: 
452: 
453: float SLEAardvarkRenderDemo_BRDF_GeometrySmith_6IVwXuh0yVUxTwB0n7MN2w(bool ilb, float nDotV, float nDotL, float roughness)
454: {
455:     return (SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(ilb, nDotL, roughness) * SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(ilb, nDotV, roughness));
456: }
457: 
458: 
459: vec3 SLEAardvarkRenderDemo_PBR_specularLobeStandard_xCDJ00_OVkhQA4IgP6xweOw(vec3 F, float roughness, float nDotH, float nDotV, float nDotL)
460: {
461:     return (((SLEAardvarkRenderDemo_BRDF_DistributionGGX_nY0za00tv6jWojDhC5JYWXw(nDotH, roughness) * SLEAardvarkRenderDemo_BRDF_GeometrySmith_6IVwXuh0yVUxTwB0n7MN2w(false, nDotV, nDotL, roughness)) * F) / max(0.001, ((4.0 * nDotV) * nDotL)));
462: }
463: 
464: 
465: tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double SLEAardvarkRenderDemo_PBR_directclearCoat_DXfZ7Xna_Buw7PyEpqh40w(float clearCoat, float clearCoatRoughness, vec3 clearCoatNormal, vec3 lDir, vec3 v, vec3 h, float hDotV)
466: {
467:     float ccNDotL = clamp(dot(clearCoatNormal, lDir), 0, 1);
468:     vec3 ccF = (clearCoat * SLEAardvarkRenderDemo_BRDF_fresnelSchlick_oKvmgrrRv31EPsFk6qorKg(vec3(0.04, 0.04, 0.04), hDotV));
469:     return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double(ccF, SLEAardvarkRenderDemo_PBR_specularLobeStandard_xCDJ00_OVkhQA4IgP6xweOw(ccF, clearCoatRoughness, clamp(dot(clearCoatNormal, h), 0, 1), clamp(dot(clearCoatNormal, v), 0, 1), ccNDotL), ccNDotL);
470: }
471: 
472: 
473: 
474: #ifdef Vertex
475: 
476: layout(location = 0) in vec3 Normals;
477: layout(location = 1) in vec4 Positions;
478: layout(location = 0) out vec3 fs_Normals;
479: layout(location = 1) out vec4 fs_WorldPosition;
480: void main()
481: {
482:     vec4 wp = (Positions * ModelTrafo);
483:     vec4 clipPos = ((wp + vec4(CameraLocation, 0.0)) * ViewProjTrafo);
484:     fs_Normals = Normals;
485:     gl_Position = vec4(clipPos.x, clipPos.y, clipPos.w, clipPos.w);
486:     fs_WorldPosition = wp;
487: }
488: 
489: #endif
490: 
491: 
492: 
493: #ifdef Fragment
494: 
495: vec3 SLEAardvarkRenderDemo_PBR_ambientDiffuse_FO200c5yUsICHiCJedhAjRA(vec3 kdA, vec3 albedo, vec3 n)
496: {
497:     return ((kdA * texture(diffuseIrradianceSampler, n).xyz) * albedo);
498: }
499: 
500: tup_Aardvark_Base_V3d_Aardvark_Base_V3d SLEAardvarkRenderDemo_PBR_ambientSheen_ZrpU5vAusEQekIe870lJuw(vec3 sheenColor, float sheenRoughness, float nDotV, vec3 r, vec3 diffuse, vec3 specular)
501: {
502:     if((sheenColor == vec3(0.0, 0.0, 0.0)))
503:     {
504:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d(diffuse, specular);
505:     }
506:     else
507:     {
508:         float sheenDFG = texture(samplerBRDFLtu, vec2(nDotV, sheenRoughness)).z;
509:         float sheenScaling = (1.0 - (max(sheenColor.x,max(sheenColor.y,sheenColor.z)) * sheenDFG));
510:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d((diffuse * sheenScaling), ((specular * sheenScaling) + ((textureLod(prefilteredSpecColorSampler, r, (sheenRoughness * 4.0)).xyz * sheenColor) * sheenDFG)));
511:     }
512: }
513: 
514: vec3 SLEAardvarkRenderDemo_PBR_ambientSpecular_RV5qqg9LWycqoVezPTSlLw(vec3 kSA, float roughness, float nDotV, vec3 r)
515: {
516:     vec3 brdf = texture(samplerBRDFLtu, vec2(nDotV, roughness)).xyz;
517:     return (textureLod(prefilteredSpecColorSampler, r, (roughness * 4.0)).xyz * ((kSA * brdf.x) + brdf.y));
518: }
519: 
520: tup_Aardvark_Base_V3d_Aardvark_Base_V3d SLEAardvarkRenderDemo_PBR_ambienClearCoat_LyzQK3qsGlATrBMN90lCuw(float clearCoat, float clearCoatRoughness, vec3 clearCoatNormal, vec3 v, vec3 r, vec3 diffuse, vec3 specular)
521: {
522:     if((clearCoat == 0.0))
523:     {
524:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d(diffuse, specular);
525:     }
526:     else
527:     {
528:         float ccNDotV = max(0.0, dot(clearCoatNormal, v));
529:         vec3 cckSA = (clearCoat * SLEAardvarkRenderDemo_BRDF_fresnelSchlickRoughness_R3fRwUfkUk_vtBtqu24DwA(vec3(0.04, 0.04, 0.04), clearCoatRoughness, ccNDotV));
530:         vec2 ccbrdf = texture(samplerBRDFLtu, vec2(ccNDotV, clearCoatRoughness)).xy;
531:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d((diffuse * (1.0 - cckSA)), ((specular * (1.0 - cckSA)) + (textureLod(prefilteredSpecColorSampler, r, (clearCoatRoughness * 4.0)).xyz * ((cckSA * ccbrdf.x) + ccbrdf.y))));
532:     }
533: }
534: 
535: tup_Aardvark_Base_V3d_Aardvark_Base_V3d SLEAardvarkRenderDemo_PBR_ambientLight_FS3XKzAEzYSlAL1f00P5PLg(float metallic, vec4 c, vec4 wp, vec3 n, float clearCoat, float roughness, vec3 sheenColor, float sheenRoughness, float clearCoatRoughness, vec3 clearCoatNormal)
536: {
537:     if((metallic < 0.0))
538:     {
539:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d(c.xyz, vec3(0.0, 0.0, 0.0));
540:     }
541:     else
542:     {
543:         vec3 v = normalize((CameraLocation - wp.xyz));
544:         vec3 r = reflect(n, (-v));
545:         vec3 f0Base = mix(vec3(0.04, 0.04, 0.04), c.xyz, metallic);
546:         float nDotV = max(0.0, dot(n, v));
547:         vec3 kSA = SLEAardvarkRenderDemo_BRDF_fresnelSchlickRoughness_R3fRwUfkUk_vtBtqu24DwA(mix(f0Base, SLEAardvarkRenderDemo_PBR_f0ClearCoatToSurface_J558wyL5EFxmvuWviPWtyA(f0Base), clearCoat), roughness, nDotV);
548:         tup_Aardvark_Base_V3d_Aardvark_Base_V3d patternInput = SLEAardvarkRenderDemo_PBR_ambientSheen_ZrpU5vAusEQekIe870lJuw(sheenColor, sheenRoughness, nDotV, r, SLEAardvarkRenderDemo_PBR_ambientDiffuse_FO200c5yUsICHiCJedhAjRA(((1.0 - kSA) * (1.0 - metallic)), c.xyz, n), SLEAardvarkRenderDemo_PBR_ambientSpecular_RV5qqg9LWycqoVezPTSlLw(kSA, roughness, nDotV, r));
549:         tup_Aardvark_Base_V3d_Aardvark_Base_V3d patternInput1 = SLEAardvarkRenderDemo_PBR_ambienClearCoat_LyzQK3qsGlATrBMN90lCuw(clearCoat, clearCoatRoughness, clearCoatNormal, v, r, patternInput.Item0, patternInput.Item1);
550:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d((patternInput1.Item0 * AmbientIntensity), (patternInput1.Item1 * AmbientIntensity));
551:     }
552: }
553: 
554: tup_Aardvark_Base_V3d_Aardvark_Base_V3d SLEAardvarkRenderDemo_PBR_directSheen_0mQlUk_ngWYQ4gtBGreByg(vec3 sheenColor, float sheenRoughness, float nDotH, float nDotV, float nDotL, vec3 diffuse, vec3 specular)
555: {
556:     if((sheenColor == vec3(0.0, 0.0, 0.0)))
557:     {
558:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d(diffuse, specular);
559:     }
560:     else
561:     {
562:         float sheenScaling = (1.0 - (max(sheenColor.x,max(sheenColor.y,sheenColor.z)) * texture(samplerBRDFLtu, vec2(nDotV, sheenRoughness)).z));
563:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d((diffuse * sheenScaling), ((specular * sheenScaling) + SLEAardvarkRenderDemo_PBR_specularLobeCloth_3kg1FHZlm5ky7EgqJuXVoQ(sheenColor, sheenRoughness, nDotH, nDotV, nDotL)));
564:     }
565: }
566: 
567: tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d SLEAardvarkRenderDemo_PBR_directLighting_vnCcBOgIE00UaU7Ie8vn4HA(float metallic, vec4 wp, vec4 c, vec3 n, vec3 clearCoatNormal, float clearCoat, float roughness, vec3 sheenColor, float sheenRoughness, float clearCoatRoughness, SLEAardvarkRenderDemo_SLEUniform_Light light)
568: {
569:     if((metallic < 0.0))
570:     {
571:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0));
572:     }
573:     else
574:     {
575:         vec3 v = normalize((CameraLocation - wp.xyz));
576:         tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d patternInput = SLEAardvarkRenderDemo_LightShader_getLightParams_y4VJUa8M00qwIr8rIzH00WQ(light, wp.xyz, mix(n, clearCoatNormal, clearCoat), v, roughness);
577:         vec3 h = normalize((v + patternInput.Item1));
578:         float nDotL = clamp(dot(n, patternInput.Item1), 0, 1);
579:         float hDotV = clamp(dot(h, v), 0, 1);
580:         float nDotH = clamp(dot(n, h), 0, 1);
581:         float nDotV = clamp(dot(n, v), 0, 1);
582:         vec3 f0Base = mix(vec3(0.04, 0.04, 0.04), c.xyz, metallic);
583:         vec3 F = SLEAardvarkRenderDemo_BRDF_fresnelSchlick_oKvmgrrRv31EPsFk6qorKg(mix(f0Base, SLEAardvarkRenderDemo_PBR_f0ClearCoatToSurface_J558wyL5EFxmvuWviPWtyA(f0Base), clearCoat), hDotV);
584:         tup_Aardvark_Base_V3d_Aardvark_Base_V3d patternInput1 = SLEAardvarkRenderDemo_PBR_directSheen_0mQlUk_ngWYQ4gtBGreByg(sheenColor, sheenRoughness, nDotH, nDotV, nDotL, SLEAardvarkRenderDemo_PBR_diffuseLobe_28BmPU7EzF002N1qCMj5AKQ(F, metallic, c.xyz), (SLEAardvarkRenderDemo_PBR_specularLobeStandard_xCDJ00_OVkhQA4IgP6xweOw(F, roughness, nDotH, nDotV, nDotL) * patternInput.Item3));
585:         vec3 diff1 = ((patternInput1.Item0 * nDotL) * patternInput.Item2);
586:         if((clearCoat == 0.0))
587:         {
588:             return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d(diff1, ((patternInput1.Item1 * patternInput.Item2) * nDotL), patternInput.Item1, patternInput.Item4);
589:         }
590:         else
591:         {
592:             tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double patternInput2 = SLEAardvarkRenderDemo_PBR_directclearCoat_DXfZ7Xna_Buw7PyEpqh40w(clearCoat, clearCoatRoughness, clearCoatNormal, patternInput.Item1, v, h, hDotV);
593:             return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d((diff1 * (vec3(1.0, 1.0, 1.0) - patternInput2.Item0)), ((((patternInput1.Item1 * (vec3(1.0, 1.0, 1.0) - patternInput2.Item0)) * nDotL) + (patternInput2.Item1 * patternInput2.Item2)) * patternInput.Item2), patternInput.Item1, patternInput.Item4);
594:         }
595:     }
596: }
597: 
598: layout(location = 0) in vec3 fs_Normals;
599: layout(location = 1) in vec4 fs_WorldPosition;
600: layout(location = 0) out vec4 DiffuseOut;
601: layout(location = 1) out vec4 SpecularOut;
602: void main()
603: {
604:     vec3 NormalsC = normalize(fs_Normals);
605:     vec4 ColorsC = vec4((texture(skySampler, normalize(fs_WorldPosition.xyz)).xyz * SkyMapIntensity), 1.0);
606:     vec3 diffuseD = vec3(0.0, 0.0, 0.0);
607:     vec3 specularD = vec3(0.0, 0.0, 0.0);
608:     int last = (LightCount - 1);
609:     for(int i = 0; (i <= last); i++)
610:     {
611:         tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d patternInput = SLEAardvarkRenderDemo_PBR_directLighting_vnCcBOgIE00UaU7Ie8vn4HA(-1.0, fs_WorldPosition, ColorsC, NormalsC, vec3(0.0, 0.0, 0.0), 0.0, 0.0, vec3(0.0, 0.0, 0.0), 0.0, 0.0, LightArray[i]);
612:         diffuseD = (diffuseD + patternInput.Item0);
613:         specularD = (specularD + patternInput.Item1);
614:     }
615:     tup_Aardvark_Base_V3d_Aardvark_Base_V3d patternInput1 = SLEAardvarkRenderDemo_PBR_ambientLight_FS3XKzAEzYSlAL1f00P5PLg(-1.0, ColorsC, fs_WorldPosition, NormalsC, 0.0, 0.0, vec3(0.0, 0.0, 0.0), 0.0, 0.0, vec3(0.0, 0.0, 0.0));
616:     vec3 diffuse = (diffuseD + patternInput1.Item0);
617:     vec3 specular = (specularD + patternInput1.Item1);
618:     DiffuseOut = vec4(diffuse, 1.0);
619:     SpecularOut = vec4(specular, 1.0);
620: }
621: 
622: #endif

 2: result created
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: [GL] RenderObjects: +1/-0 (412ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (558ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (7ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: result created
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: [GL] RenderObjects: +1/-0 (9ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (47ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (6ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (10ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (5ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (18ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (48ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: texture created
 2: result created
 2: [GL] RenderObjects: +1/-0 (3ms)
 2: using optimized native program
 2: result created
 2: Compiling shader:
  1: #version 460
  2: #define __SHADER_STAGE__
  3: 
  4: 
  5: 
  6: 
  7: struct tup_Aardvark_Base_V3d_Aardvark_Base_V3d
  8: {
  9:     vec3 Item0;
 10:     vec3 Item1;
 11: };
 12: 
 13: struct tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d
 14: {
 15:     vec3 Item0;
 16:     vec3 Item1;
 17:     vec3 Item2;
 18:     vec3 Item3;
 19: };
 20: 
 21: struct tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d
 22: {
 23:     bool Item0;
 24:     vec3 Item1;
 25:     vec3 Item2;
 26:     float Item3;
 27:     vec3 Item4;
 28: };
 29: 
 30: struct tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double
 31: {
 32:     vec3 Item0;
 33:     vec3 Item1;
 34:     float Item2;
 35: };
 36: 
 37: struct SLEAardvarkRenderDemo_SLEUniform_Light
 38: {
 39:     int lightType;
 40:     vec4 lightPosition;
 41:     vec4 lightDirection;
 42:     vec3 color;
 43:     bool castsShadow;
 44:     float cutOffInner;
 45:     float cutOffOuter;
 46:     float radius;
 47:     vec3 virtualPos;
 48:     vec3 virtualPos2;
 49:     vec3 p1;
 50:     vec3 p2;
 51:     vec3 p3;
 52:     vec3 p4;
 53:     mat4x4 toWorld;
 54:     mat4x4 fromWorld;
 55: };
 56: 
 57: layout(std140, binding = 0)
 58: uniform Global
 59: {
 60:     vec4 AlbedoColor;
 61:     float AlbedoFactor;
 62:     float AmbientIntensity;
 63:     float ClearCoat;
 64:     float ClearCoatNormalStrength;
 65:     float ClearCoatRoughness;
 66:     bool Discard;
 67:     float DisplacmentStrength;
 68:     SLEAardvarkRenderDemo_SLEUniform_Light LightArray[80];
 69:     int LightCount;
 70:     float Metallic;
 71:     float NormalMapStrength;
 72:     float Roughness;
 73:     vec3 SheenColor;
 74:     float SheenColorFactor;
 75:     float SheenRoughness;
 76:     bool UseNormalsForClearCoat;
 77: };
 78: 
 79: 
 80: layout(std140, binding = 1)
 81: uniform PerView
 82: {
 83:     vec3 CameraLocation;
 84:     mat4x4 ViewProjTrafo;
 85: };
 86: 
 87: 
 88: layout(std140, binding = 2)
 89: uniform PerModel
 90: {
 91:     mat4x4 ModelTrafo;
 92:     mat4x4 ModelTrafoInv;
 93: };
 94: 
 95: 
 96: layout(binding = 0)
 97: uniform sampler2D albedoSampler;
 98: 
 99: layout(binding = 1)
100: uniform sampler2D clearCoatNormalSampler;
101: 
102: layout(binding = 2)
103: uniform sampler2D clearCoatRoughnessSampler;
104: 
105: layout(binding = 3)
106: uniform sampler2D clearCoatSampler;
107: 
108: layout(binding = 4)
109: uniform samplerCube diffuseIrradianceSampler;
110: 
111: layout(binding = 5)
112: uniform sampler2D metallicSampler;
113: 
114: layout(binding = 6)
115: uniform sampler2D normalSampler;
116: 
117: layout(binding = 7)
118: uniform samplerCube prefilteredSpecColorSampler;
119: 
120: layout(binding = 8)
121: uniform sampler2D roughnessSampler;
122: 
123: layout(binding = 9)
124: uniform sampler2D samplerBRDFLtu;
125: 
126: layout(binding = 10)
127: uniform sampler2D samplerDisp;
128: 
129: layout(binding = 11)
130: uniform sampler2D sheenColorSampler;
131: 
132: layout(binding = 12)
133: uniform sampler2D sheenRoughnessSampler;
134: 
135: tup_Aardvark_Base_V3d_Aardvark_Base_V3d new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d(vec3 item0, vec3 item1)
136: {
137:     tup_Aardvark_Base_V3d_Aardvark_Base_V3d res;
138:     res.Item0 = item0;
139:     res.Item1 = item1;
140:     return res;
141: }
142: 
143: 
144: vec3 SLEAardvarkRenderDemo_BRDF_fresnelSchlickRoughness_R3fRwUfkUk_vtBtqu24DwA(vec3 f0, float roughness, float cosTheta)
145: {
146:     return (f0 + ((max(vec3((clamp(dot(f0, vec3(16.5, 16.5, 16.5)), 0, 1) - roughness)), f0) - f0) * pow((1.0 - cosTheta), 5.0)));
147: }
148: 
149: 
150: vec3 SLEAardvarkRenderDemo_PBR_f0ClearCoatToSurface_J558wyL5EFxmvuWviPWtyA(vec3 f0Base)
151: {
152:     vec3 sqrtBase = sqrt(f0Base);
153:     vec3 baseIOR = ((1.0 + sqrtBase) / (1.0 - sqrtBase));
154:     return (((baseIOR - 1.5) / (baseIOR + 1.5)) * ((baseIOR - 1.5) / (baseIOR + 1.5)));
155: }
156: 
157: 
158: float SLEAardvarkRenderDemo_BRDF_distributionCharlie_9Ai0hRoW1dnTGa2k_n8d7g(float roughness, float nDotH)
159: {
160:     float rcpR = (1.0 / (roughness * roughness));
161:     return (((2.0 + rcpR) * pow((1.0 - (nDotH * nDotH)), (rcpR * 0.5))) / 6.283185307179586);
162: }
163: 
164: 
165: float SLEAardvarkRenderDemo_BRDF_visibilityAshikhmin_1GWL7ALGseRABCZZ00R7N8g(float nDotV, float nDotL)
166: {
167:     return (1.0 / max(0.001, (4.0 * ((nDotL + nDotV) - (nDotL * nDotV)))));
168: }
169: 
170: 
171: tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d(vec3 item0, vec3 item1, vec3 item2, vec3 item3)
172: {
173:     tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d res;
174:     res.Item0 = item0;
175:     res.Item1 = item1;
176:     res.Item2 = item2;
177:     res.Item3 = item3;
178:     return res;
179: }
180: 
181: 
182: vec3 SLEAardvarkRenderDemo_BRDF_fresnelSchlick_oKvmgrrRv31EPsFk6qorKg(vec3 f0, float cosTheta)
183: {
184:     return (f0 + ((clamp(dot(f0, vec3(16.5, 16.5, 16.5)), 0, 1) - f0) * pow((1.0 - cosTheta), 5.0)));
185: }
186: 
187: 
188: float SLEAardvarkRenderDemo_BRDF_DistributionGGX_nY0za00tv6jWojDhC5JYWXw(float nDotH, float roughness)
189: {
190:     float a = (roughness * roughness);
191:     float a2 = (a * a);
192:     float deno = (((nDotH * nDotH) * (a2 - 1.0)) + 1.0);
193:     return (a2 / ((3.141592653589793 * deno) * deno));
194: }
195: 
196: 
197: float helper2(float roughness)
198: {
199:     float r = (roughness + 1.0);
200:     return ((r * r) / 8.0);
201: }
202: 
203: 
204: vec3 SLEAardvarkRenderDemo_PBR_diffuseLobe_28BmPU7EzF002N1qCMj5AKQ(vec3 F, float metallic, vec3 albedo)
205: {
206:     return (((vec3(1.0, 1.0, 1.0) - F) * ((1.0 - metallic) * albedo)) / 3.141592653589793);
207: }
208: 
209: 
210: tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double(vec3 item0, vec3 item1, float item2)
211: {
212:     tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double res;
213:     res.Item0 = item0;
214:     res.Item1 = item1;
215:     res.Item2 = item2;
216:     return res;
217: }
218: 
219: 
220: float helper1(float cosTheta, float sinSigmaSqr, float sinTheta)
221: {
222:     float x = sqrt(((1.0 / sinSigmaSqr) - 1.0));
223:     float y = ((-x) * (cosTheta / sinTheta));
224:     float sinThetaSqrtY = (sinTheta * sqrt((1.0 - (y * y))));
225:     return ((((cosTheta * acos(y)) - (x * sinThetaSqrtY)) * sinSigmaSqr) + atan((sinThetaSqrtY / x)));
226: }
227: 
228: 
229: vec3 SLEAardvarkRenderDemo_LightShader_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(vec3 n, vec3 v, float roughness)
230: {
231:     return normalize(mix(n, (-reflect(n, v)), (1.0 - roughness)));
232: }
233: 
234: 
235: vec3 SLEAardvarkRenderDemo_LightShader_representativePointSpehre_DvHCJ7t4LLabKB7nbPvi5A(vec3 n, vec3 v, float roughness, vec3 lUnnorm, float radius)
236: {
237:     vec3 r = SLEAardvarkRenderDemo_LightShader_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
238:     vec3 centerToRay = ((dot(lUnnorm, r) * r) - lUnnorm);
239:     return normalize((lUnnorm + (centerToRay * clamp((radius / length(centerToRay)), 0.0, 1.0))));
240: }
241: 
242: 
243: tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(bool item0, vec3 item1, vec3 item2, float item3, vec3 item4)
244: {
245:     tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d res;
246:     res.Item0 = item0;
247:     res.Item1 = item1;
248:     res.Item2 = item2;
249:     res.Item3 = item3;
250:     res.Item4 = item4;
251:     return res;
252: }
253: 
254: 
255: float SLEAardvarkRenderDemo_LightShader_luminousPowerToLuminanceSphere_UrX1ctp5f0mkaCN8lcAp4g(float radius)
256: {
257:     return (1.0 / ((((radius * radius) * 4.0) * 3.141592653589793) * 3.141592653589793));
258: }
259: 
260: 
261: float SLEAardvarkRenderDemo_LightShader_luminousPowerToLuminanceDisk_3Fm00pFf99CfR9hPbaGPImw(float radius)
262: {
263:     return (1.0 / (((radius * radius) * 3.141592653589793) * 3.141592653589793));
264: }
265: 
266: 
267: float SLEAardvarkRenderDemo_LightShader_rectangleSolidAngle_yk0LnyTP2qLGhxTZr4oSHw(vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4)
268: {
269:     vec3 v1 = (p1 - wPos);
270:     vec3 v2 = (p2 - wPos);
271:     vec3 v3 = (p3 - wPos);
272:     vec3 v4 = (p4 - wPos);
273:     vec3 n1 = normalize(cross(v1, v2));
274:     vec3 n2 = normalize(cross(v2, v3));
275:     vec3 n3 = normalize(cross(v3, v4));
276:     vec3 n4 = normalize(cross(v4, v1));
277:     return ((((acos(dot((-n1), n2)) + acos(dot((-n2), n3))) + acos(dot((-n3), n4))) + acos(dot((-n4), n1))) - 6.283185307179586);
278: }
279: 
280: 
281: float SLEAardvarkRenderDemo_LightShader_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(vec3 o, vec3 d, vec3 planeOrigin, vec3 planeNormal)
282: {
283:     return (dot(planeNormal, (planeOrigin - o)) / dot(planeNormal, d));
284: }
285: 
286: 
287: vec3 SLEAardvarkRenderDemo_LightShader_representativePointDisk_wKhAwWDNYwPsVTi00Wbf63g(vec3 r, vec3 wPos, float radius, vec3 ln, vec3 lightPosition, vec3 lUnnorm)
288: {
289:     vec3 centerToRay = ((wPos + (r * SLEAardvarkRenderDemo_LightShader_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(wPos, r, lightPosition, ln))) - lightPosition);
290:     return normalize((lUnnorm + (centerToRay * clamp((radius / length(centerToRay)), 0, 1))));
291: }
292: 
293: 
294: vec3 SLEAardvarkRenderDemo_LightShader_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(vec3 a, vec3 b, vec3 c)
295: {
296:     vec3 ab = (b - a);
297:     return (a + (clamp((dot((c - a), ab) / dot(ab, ab)), 0, 1) * ab));
298: }
299: 
300: 
301: float SLEAardvarkRenderDemo_LightShader_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(float dist)
302: {
303:     float d = max(dist, 0.01);
304:     return (1.0 / (d * d));
305: }
306: 
307: 
308: float SLEAardvarkRenderDemo_LightShader_luminousPowerToLuminanceRectangle_CSsH8PY0AZ5Q9fWUXd5VQ(vec3 p1, vec3 p2, vec3 p4)
309: {
310:     return (1.0 / ((abs(length((p1 - p2))) * abs(length((p1 - p4)))) * 3.141592653589793));
311: }
312: 
313: 
314: float SLEAardvarkRenderDemo_LightShader_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(vec3 lDir, vec3 ln, float cutOffInner, float cutOffOuter)
315: {
316:     return clamp(((dot(lDir, (-ln)) - cutOffOuter) / (cutOffInner - cutOffOuter)), 0, 1);
317: }
318: 
319: 
320: float SLEAardvarkRenderDemo_LightShader_traceTriangle_TUj_88KirlHsDKjIMhJJAQ(vec3 o, vec3 d, vec3 A, vec3 B, vec3 C)
321: {
322:     vec3 p = (o + (d * SLEAardvarkRenderDemo_LightShader_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(o, d, A, normalize(cross((B - A), (C - B))))));
323:     vec3 n2 = normalize(cross((C - B), (p - C)));
324:     if(((dot(normalize(cross((B - A), (p - B))), n2) > 0.999) && (dot(n2, normalize(cross((A - C), (p - A)))) > 0.999)))
325:     {
326:         return 1.0;
327:     }
328:     else
329:     {
330:         return 0.0;
331:     }
332: }
333: 
334: 
335: float SLEAardvarkRenderDemo_LightShader_traceRectangle_Y1YWv5k7o5dZMgAY1V3rCQ(vec3 o, vec3 d, vec3 A, vec3 B, vec3 C, vec3 D)
336: {
337:     return max(SLEAardvarkRenderDemo_LightShader_traceTriangle_TUj_88KirlHsDKjIMhJJAQ(o, d, A, B, C), SLEAardvarkRenderDemo_LightShader_traceTriangle_TUj_88KirlHsDKjIMhJJAQ(o, d, C, D, A));
338: }
339: 
340: 
341: vec3 SLEAardvarkRenderDemo_LightShader_representativePointRectangle_7uXB4Za8_80Ps10k1oBj6A(vec3 r, vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4, vec3 ln, vec3 lightPosition)
342: {
343:     if((SLEAardvarkRenderDemo_LightShader_traceRectangle_Y1YWv5k7o5dZMgAY1V3rCQ(wPos, r, p1, p2, p3, p4) > 0.0))
344:     {
345:         return r;
346:     }
347:     else
348:     {
349:         vec3 tracedPlane = (wPos + (r * SLEAardvarkRenderDemo_LightShader_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(wPos, r, lightPosition, ln)));
350:         vec3 pc1 = SLEAardvarkRenderDemo_LightShader_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p1, p2, tracedPlane);
351:         vec3 pc2 = SLEAardvarkRenderDemo_LightShader_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p2, p3, tracedPlane);
352:         vec3 pc3 = SLEAardvarkRenderDemo_LightShader_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p3, p4, tracedPlane);
353:         vec3 pc4 = SLEAardvarkRenderDemo_LightShader_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p4, p1, tracedPlane);
354:         float d2 = distance(pc2, tracedPlane);
355:         float d3 = distance(pc3, tracedPlane);
356:         float minDist = distance(pc1, tracedPlane);
357:         vec3 p = pc1;
358:         if((d2 < minDist))
359:         {
360:             minDist = d2;
361:             p = pc2;
362:         }
363:         if((d3 < minDist))
364:         {
365:             minDist = d3;
366:             p = pc3;
367:         }
368:         if((distance(pc4, tracedPlane) < minDist))
369:         {
370:             p = pc4;
371:         }
372:         return normalize((p - wPos));
373:     }
374: }
375: 
376: 
377: float SLEAardvarkRenderDemo_LightShader_attenuationRectangle_je2tqG4tNH0N0h4ostr9dQ(vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4, vec3 lUnnorm, vec3 ln, vec3 n)
378: {
379:     if((dot((-lUnnorm), ln) > 0.0))
380:     {
381:         return ((max(0.0, SLEAardvarkRenderDemo_LightShader_rectangleSolidAngle_yk0LnyTP2qLGhxTZr4oSHw(wPos, p1, p2, p3, p4)) * 0.2) * ((((clamp(dot(n, normalize(lUnnorm)), 0, 1) + clamp(dot(n, normalize((p1 - wPos))), 0, 1)) + clamp(dot(n, normalize((p2 - wPos))), 0, 1)) + clamp(dot(n, normalize((p3 - wPos))), 0, 1)) + clamp(dot(n, normalize((p4 - wPos))), 0, 1)));
382:     }
383:     else
384:     {
385:         return 0.0;
386:     }
387: }
388: 
389: 
390: float SLEAardvarkRenderDemo_LightShader_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(float cosTheta, float sinSigmaSqr)
391: {
392:     float sinTheta = sqrt((1.0 - (cosTheta * cosTheta)));
393:     return max(0.0, (((cosTheta * cosTheta) > sinSigmaSqr) ? ((3.141592653589793 * sinSigmaSqr) * clamp(cosTheta, 0.0, 1.0)) : helper1(cosTheta, sinSigmaSqr, sinTheta)));
394: }
395: 
396: 
397: float SLEAardvarkRenderDemo_LightShader_attenuationDisk_hLzuCj5zj00GiLEJKhGz99g(vec3 lUnnorm, float radius, vec3 n, vec3 lDir, vec3 ln)
398: {
399:     float radius2 = (radius * radius);
400:     return (SLEAardvarkRenderDemo_LightShader_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(clamp(dot(n, lDir), -0.999, 0.999), (radius2 / (radius2 + max(radius2, dot(lUnnorm, lUnnorm))))) * clamp(dot(ln, (-lDir)), 0, 1));
401: }
402: 
403: 
404: float SLEAardvarkRenderDemo_LightShader_attenuationSphere_TfcoeJaHdIXDFd7jmK6bvA(vec3 lUnnorm, float radius, vec3 n, vec3 lDir)
405: {
406:     return SLEAardvarkRenderDemo_LightShader_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(clamp(dot(n, lDir), -0.999, 0.999), min(0.9999, ((radius * radius) / dot(lUnnorm, lUnnorm))));
407: }
408: 
409: 
410: tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d SLEAardvarkRenderDemo_LightShader_getLightParams_y4VJUa8M00qwIr8rIzH00WQ(SLEAardvarkRenderDemo_SLEUniform_Light light, vec3 wPos, vec3 n, vec3 v, float roughness)
411: {
412:     if((light.lightType == 0))
413:     {
414:         return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(false, vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), 1.0, vec3(0.0, 0.0, 0.0));
415:     }
416:     else
417:     {
418:         if((light.lightType == 1))
419:         {
420:             return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, normalize((-light.lightDirection.xyz)), light.color, 1.0, light.color);
421:         }
422:         else
423:         {
424:             if((light.lightType == 2))
425:             {
426:                 vec3 illuminannce = ((light.color * SLEAardvarkRenderDemo_LightShader_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))) * 0.07957747154594767);
427:                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, normalize((light.lightPosition.xyz - wPos)), illuminannce, 1.0, illuminannce);
428:             }
429:             else
430:             {
431:                 if((light.lightType == 3))
432:                 {
433:                     vec3 lDir = normalize((light.lightPosition.xyz - wPos));
434:                     vec3 illuminannce1 = (((light.color * SLEAardvarkRenderDemo_LightShader_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(lDir, normalize(light.lightDirection.xyz), light.cutOffInner, light.cutOffOuter)) * SLEAardvarkRenderDemo_LightShader_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))) * 0.3183098861837907);
435:                     return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, lDir, illuminannce1, 1.0, illuminannce1);
436:                 }
437:                 else
438:                 {
439:                     if((light.lightType == 4))
440:                     {
441:                         vec3 lUnnorm = (light.lightPosition.xyz - wPos);
442:                         vec3 l = SLEAardvarkRenderDemo_LightShader_representativePointSpehre_DvHCJ7t4LLabKB7nbPvi5A(n, v, roughness, lUnnorm, light.radius);
443:                         return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, l, (((light.color * SLEAardvarkRenderDemo_LightShader_attenuationSphere_TfcoeJaHdIXDFd7jmK6bvA(lUnnorm, light.radius, n, normalize(lUnnorm))) * SLEAardvarkRenderDemo_LightShader_luminousPowerToLuminanceSphere_UrX1ctp5f0mkaCN8lcAp4g(light.radius)) / dot(n, l)), 1.0, ((light.color * 0.07957747154594767) * SLEAardvarkRenderDemo_LightShader_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))));
444:                     }
445:                     else
446:                     {
447:                         if((light.lightType == 5))
448:                         {
449:                             vec3 lUnnorm1 = (light.lightPosition.xyz - wPos);
450:                             vec3 ln = normalize(light.lightDirection.xyz);
451:                             float intensity = SLEAardvarkRenderDemo_LightShader_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize((light.virtualPos.xyz - wPos)), ln, light.cutOffInner, light.cutOffOuter);
452:                             vec3 r = SLEAardvarkRenderDemo_LightShader_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
453:                             vec3 l1 = SLEAardvarkRenderDemo_LightShader_representativePointDisk_wKhAwWDNYwPsVTi00Wbf63g(r, wPos, light.radius, ln, light.lightPosition.xyz, lUnnorm1);
454:                             return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, l1, ((((light.color * intensity) * SLEAardvarkRenderDemo_LightShader_attenuationDisk_hLzuCj5zj00GiLEJKhGz99g(lUnnorm1, light.radius, n, normalize(lUnnorm1), ln)) * SLEAardvarkRenderDemo_LightShader_luminousPowerToLuminanceDisk_3Fm00pFf99CfR9hPbaGPImw(light.radius)) / dot(n, l1)), clamp(abs(dot(ln, r)), 0, 1), (((light.color * intensity) * 0.3183098861837907) * SLEAardvarkRenderDemo_LightShader_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))));
455:                         }
456:                         else
457:                         {
458:                             if((light.lightType == 6))
459:                             {
460:                                 vec3 ln1 = normalize(light.lightDirection.xyz);
461:                                 vec4 d1 = (vec4(normalize((light.virtualPos.xyz - wPos)), 0.0) * light.fromWorld);
462:                                 vec4 d3 = (vec4(normalize((light.virtualPos2.xyz - wPos)), 0.0) * light.fromWorld);
463:                                 float intensity1 = (SLEAardvarkRenderDemo_LightShader_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize(vec3(d1.x, d1.y, 0.0)), vec3(0.0, 1.0, 0.0), light.cutOffInner, light.cutOffOuter) * SLEAardvarkRenderDemo_LightShader_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize(vec3(0.0, d3.y, d3.z)), vec3(0.0, 1.0, 0.0), light.cutOffInner, light.cutOffOuter));
464:                                 vec3 r1 = SLEAardvarkRenderDemo_LightShader_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
465:                                 vec3 l2 = SLEAardvarkRenderDemo_LightShader_representativePointRectangle_7uXB4Za8_80Ps10k1oBj6A(r1, wPos, light.p1, light.p2, light.p3, light.p4, ln1, light.lightPosition.xyz);
466:                                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, l2, ((((light.color * intensity1) * SLEAardvarkRenderDemo_LightShader_attenuationRectangle_je2tqG4tNH0N0h4ostr9dQ(wPos, light.p1, light.p2, light.p3, light.p4, (light.lightPosition.xyz - wPos), ln1, n)) * SLEAardvarkRenderDemo_LightShader_luminousPowerToLuminanceRectangle_CSsH8PY0AZ5Q9fWUXd5VQ(light.p1, light.p2, light.p4)) / dot(n, l2)), clamp(abs(dot(ln1, r1)), 0, 1), (((light.color * intensity1) * 0.3183098861837907) * SLEAardvarkRenderDemo_LightShader_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))));
467:                             }
468:                             else
469:                             {
470:                                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(false, vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), 1.0, vec3(0.0, 0.0, 0.0));
471:                             }
472:                         }
473:                     }
474:                 }
475:             }
476:         }
477:     }
478: }
479: 
480: 
481: float SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(bool ilb, float nDotV, float roughness)
482: {
483:     float k = (ilb ? ((roughness * roughness) / 2.0) : helper2(roughness));
484:     return (nDotV / ((nDotV * (1.0 - k)) + k));
485: }
486: 
487: 
488: float SLEAardvarkRenderDemo_BRDF_GeometrySmith_6IVwXuh0yVUxTwB0n7MN2w(bool ilb, float nDotV, float nDotL, float roughness)
489: {
490:     return (SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(ilb, nDotL, roughness) * SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(ilb, nDotV, roughness));
491: }
492: 
493: 
494: vec3 SLEAardvarkRenderDemo_PBR_specularLobeStandard_xCDJ00_OVkhQA4IgP6xweOw(vec3 F, float roughness, float nDotH, float nDotV, float nDotL)
495: {
496:     return (((SLEAardvarkRenderDemo_BRDF_DistributionGGX_nY0za00tv6jWojDhC5JYWXw(nDotH, roughness) * SLEAardvarkRenderDemo_BRDF_GeometrySmith_6IVwXuh0yVUxTwB0n7MN2w(false, nDotV, nDotL, roughness)) * F) / max(0.001, ((4.0 * nDotV) * nDotL)));
497: }
498: 
499: 
500: tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double SLEAardvarkRenderDemo_PBR_directclearCoat_DXfZ7Xna_Buw7PyEpqh40w(float clearCoat, float clearCoatRoughness, vec3 clearCoatNormal, vec3 lDir, vec3 v, vec3 h, float hDotV)
501: {
502:     float ccNDotL = clamp(dot(clearCoatNormal, lDir), 0, 1);
503:     vec3 ccF = (clearCoat * SLEAardvarkRenderDemo_BRDF_fresnelSchlick_oKvmgrrRv31EPsFk6qorKg(vec3(0.04, 0.04, 0.04), hDotV));
504:     return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double(ccF, SLEAardvarkRenderDemo_PBR_specularLobeStandard_xCDJ00_OVkhQA4IgP6xweOw(ccF, clearCoatRoughness, clamp(dot(clearCoatNormal, h), 0, 1), clamp(dot(clearCoatNormal, v), 0, 1), ccNDotL), ccNDotL);
505: }
506: 
507: 
508: vec3 SLEAardvarkRenderDemo_PBR_specularLobeCloth_3kg1FHZlm5ky7EgqJuXVoQ(vec3 F, float roughness, float nDotH, float nDotV, float nDotL)
509: {
510:     return ((SLEAardvarkRenderDemo_BRDF_distributionCharlie_9Ai0hRoW1dnTGa2k_n8d7g(roughness, nDotH) * SLEAardvarkRenderDemo_BRDF_visibilityAshikhmin_1GWL7ALGseRABCZZ00R7N8g(nDotV, nDotL)) * F);
511: }
512: 
513: 
514: 
515: #ifdef Vertex
516: 
517: layout(location = 0) in vec2 DiffuseColorCoordinates;
518: layout(location = 1) in vec3 DiffuseColorUTangents;
519: layout(location = 2) in vec3 DiffuseColorVTangents;
520: layout(location = 3) in vec3 Normals;
521: layout(location = 4) in vec4 Positions;
522: layout(location = 0) out vec2 tc_DiffuseColorCoordinates;
523: layout(location = 1) out vec3 tc_DiffuseColorUTangents;
524: layout(location = 2) out vec3 tc_DiffuseColorVTangents;
525: layout(location = 3) out vec3 tc_Normals;
526: layout(location = 4) out vec4 tc_WorldPosition;
527: void main()
528: {
529:     tc_DiffuseColorCoordinates = DiffuseColorCoordinates;
530:     tc_DiffuseColorUTangents = (vec4(DiffuseColorUTangents, 0.0) * ModelTrafo).xyz;
531:     tc_DiffuseColorVTangents = (vec4(DiffuseColorVTangents, 0.0) * ModelTrafo).xyz;
532:     tc_Normals = (ModelTrafoInv * vec4(Normals, 0.0)).xyz;
533:     tc_WorldPosition = (Positions * ModelTrafo);
534: }
535: 
536: #endif
537: 
538: 
539: 
540: #ifdef TessControl
541: 
542: layout(vertices = 3) out;
543: layout(location = 0) in vec2 tc_DiffuseColorCoordinates[];
544: layout(location = 1) in vec3 tc_DiffuseColorUTangents[];
545: layout(location = 2) in vec3 tc_DiffuseColorVTangents[];
546: layout(location = 3) in vec3 tc_Normals[];
547: layout(location = 4) in vec4 tc_WorldPosition[];
548: layout(location = 0) out vec2 te_DiffuseColorCoordinates[];
549: layout(location = 1) out vec3 te_DiffuseColorUTangents[];
550: layout(location = 2) out vec3 te_DiffuseColorVTangents[];
551: layout(location = 3) out vec3 te_Normals[];
552: layout(location = 4) out vec4 te_WorldPosition[];
553: void main()
554: {
555:     if((gl_InvocationID == 0))
556:     {
557:         float level = ((DisplacmentStrength == 0.0) ? 1.0 : 32.0);
558:         gl_TessLevelInner[0] = level;
559:         gl_TessLevelOuter[0] = level;
560:         gl_TessLevelOuter[1] = level;
561:         gl_TessLevelOuter[2] = level;
562:     }
563:     te_DiffuseColorCoordinates[gl_InvocationID] = tc_DiffuseColorCoordinates[gl_InvocationID];
564:     te_DiffuseColorUTangents[gl_InvocationID] = tc_DiffuseColorUTangents[gl_InvocationID];
565:     te_DiffuseColorVTangents[gl_InvocationID] = tc_DiffuseColorVTangents[gl_InvocationID];
566:     te_Normals[gl_InvocationID] = tc_Normals[gl_InvocationID];
567:     te_WorldPosition[gl_InvocationID] = tc_WorldPosition[gl_InvocationID];
568: }
569: 
570: #endif
571: 
572: 
573: 
574: #ifdef TessEval
575: 
576: layout(triangles, equal_spacing, ccw) in;
577: layout(location = 0) in vec2 te_DiffuseColorCoordinates[];
578: layout(location = 1) in vec3 te_DiffuseColorUTangents[];
579: layout(location = 2) in vec3 te_DiffuseColorVTangents[];
580: layout(location = 3) in vec3 te_Normals[];
581: layout(location = 4) in vec4 te_WorldPosition[];
582: layout(location = 0) out vec2 fs_DiffuseColorCoordinates;
583: layout(location = 1) out vec3 fs_DiffuseColorUTangents;
584: layout(location = 2) out vec3 fs_DiffuseColorVTangents;
585: layout(location = 3) out vec3 fs_Normals;
586: layout(location = 4) out vec4 fs_WorldPosition;
587: void main()
588: {
589:     vec3 n = normalize((((gl_TessCoord.x * te_Normals[0]) + (gl_TessCoord.y * te_Normals[1])) + (gl_TessCoord.z * te_Normals[2])));
590:     vec2 tc = (((gl_TessCoord.x * te_DiffuseColorCoordinates[0]) + (gl_TessCoord.y * te_DiffuseColorCoordinates[1])) + (gl_TessCoord.z * te_DiffuseColorCoordinates[2]));
591:     vec4 wp = ((((gl_TessCoord.x * te_WorldPosition[0]) + (gl_TessCoord.y * te_WorldPosition[1])) + (gl_TessCoord.z * te_WorldPosition[2])) + vec4((n * ((-0.5 + texture(samplerDisp, tc).x) * DisplacmentStrength)), 0.0));
592:     fs_DiffuseColorCoordinates = tc;
593:     fs_DiffuseColorUTangents = (((gl_TessCoord.x * te_DiffuseColorUTangents[0]) + (gl_TessCoord.y * te_DiffuseColorUTangents[1])) + (gl_TessCoord.z * te_DiffuseColorUTangents[2]));
594:     fs_DiffuseColorVTangents = (((gl_TessCoord.x * te_DiffuseColorVTangents[0]) + (gl_TessCoord.y * te_DiffuseColorVTangents[1])) + (gl_TessCoord.z * te_DiffuseColorVTangents[2]));
595:     fs_Normals = n;
596:     gl_Position = (wp * ViewProjTrafo);
597:     fs_WorldPosition = wp;
598: }
599: 
600: #endif
601: 
602: 
603: 
604: #ifdef Fragment
605: 
606: tup_Aardvark_Base_V3d_Aardvark_Base_V3d SLEAardvarkRenderDemo_PBR_directSheen_0mQlUk_ngWYQ4gtBGreByg(vec3 sheenColor, float sheenRoughness, float nDotH, float nDotV, float nDotL, vec3 diffuse, vec3 specular)
607: {
608:     if((sheenColor == vec3(0.0, 0.0, 0.0)))
609:     {
610:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d(diffuse, specular);
611:     }
612:     else
613:     {
614:         float sheenScaling = (1.0 - (max(sheenColor.x,max(sheenColor.y,sheenColor.z)) * texture(samplerBRDFLtu, vec2(nDotV, sheenRoughness)).z));
615:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d((diffuse * sheenScaling), ((specular * sheenScaling) + SLEAardvarkRenderDemo_PBR_specularLobeCloth_3kg1FHZlm5ky7EgqJuXVoQ(sheenColor, sheenRoughness, nDotH, nDotV, nDotL)));
616:     }
617: }
618: 
619: tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d SLEAardvarkRenderDemo_PBR_directLighting_vnCcBOgIE00UaU7Ie8vn4HA(float metallic, vec4 wp, vec4 c, vec3 n, vec3 clearCoatNormal, float clearCoat, float roughness, vec3 sheenColor, float sheenRoughness, float clearCoatRoughness, SLEAardvarkRenderDemo_SLEUniform_Light light)
620: {
621:     if((metallic < 0.0))
622:     {
623:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0));
624:     }
625:     else
626:     {
627:         vec3 v = normalize((CameraLocation - wp.xyz));
628:         tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d patternInput = SLEAardvarkRenderDemo_LightShader_getLightParams_y4VJUa8M00qwIr8rIzH00WQ(light, wp.xyz, mix(n, clearCoatNormal, clearCoat), v, roughness);
629:         vec3 h = normalize((v + patternInput.Item1));
630:         float nDotL = clamp(dot(n, patternInput.Item1), 0, 1);
631:         float hDotV = clamp(dot(h, v), 0, 1);
632:         float nDotH = clamp(dot(n, h), 0, 1);
633:         float nDotV = clamp(dot(n, v), 0, 1);
634:         vec3 f0Base = mix(vec3(0.04, 0.04, 0.04), c.xyz, metallic);
635:         vec3 F = SLEAardvarkRenderDemo_BRDF_fresnelSchlick_oKvmgrrRv31EPsFk6qorKg(mix(f0Base, SLEAardvarkRenderDemo_PBR_f0ClearCoatToSurface_J558wyL5EFxmvuWviPWtyA(f0Base), clearCoat), hDotV);
636:         tup_Aardvark_Base_V3d_Aardvark_Base_V3d patternInput1 = SLEAardvarkRenderDemo_PBR_directSheen_0mQlUk_ngWYQ4gtBGreByg(sheenColor, sheenRoughness, nDotH, nDotV, nDotL, SLEAardvarkRenderDemo_PBR_diffuseLobe_28BmPU7EzF002N1qCMj5AKQ(F, metallic, c.xyz), (SLEAardvarkRenderDemo_PBR_specularLobeStandard_xCDJ00_OVkhQA4IgP6xweOw(F, roughness, nDotH, nDotV, nDotL) * patternInput.Item3));
637:         vec3 diff1 = ((patternInput1.Item0 * nDotL) * patternInput.Item2);
638:         if((clearCoat == 0.0))
639:         {
640:             return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d(diff1, ((patternInput1.Item1 * patternInput.Item2) * nDotL), patternInput.Item1, patternInput.Item4);
641:         }
642:         else
643:         {
644:             tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double patternInput2 = SLEAardvarkRenderDemo_PBR_directclearCoat_DXfZ7Xna_Buw7PyEpqh40w(clearCoat, clearCoatRoughness, clearCoatNormal, patternInput.Item1, v, h, hDotV);
645:             return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d((diff1 * (vec3(1.0, 1.0, 1.0) - patternInput2.Item0)), ((((patternInput1.Item1 * (vec3(1.0, 1.0, 1.0) - patternInput2.Item0)) * nDotL) + (patternInput2.Item1 * patternInput2.Item2)) * patternInput.Item2), patternInput.Item1, patternInput.Item4);
646:         }
647:     }
648: }
649: 
650: tup_Aardvark_Base_V3d_Aardvark_Base_V3d SLEAardvarkRenderDemo_PBR_ambienClearCoat_LyzQK3qsGlATrBMN90lCuw(float clearCoat, float clearCoatRoughness, vec3 clearCoatNormal, vec3 v, vec3 r, vec3 diffuse, vec3 specular)
651: {
652:     if((clearCoat == 0.0))
653:     {
654:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d(diffuse, specular);
655:     }
656:     else
657:     {
658:         float ccNDotV = max(0.0, dot(clearCoatNormal, v));
659:         vec3 cckSA = (clearCoat * SLEAardvarkRenderDemo_BRDF_fresnelSchlickRoughness_R3fRwUfkUk_vtBtqu24DwA(vec3(0.04, 0.04, 0.04), clearCoatRoughness, ccNDotV));
660:         vec2 ccbrdf = texture(samplerBRDFLtu, vec2(ccNDotV, clearCoatRoughness)).xy;
661:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d((diffuse * (1.0 - cckSA)), ((specular * (1.0 - cckSA)) + (textureLod(prefilteredSpecColorSampler, r, (clearCoatRoughness * 4.0)).xyz * ((cckSA * ccbrdf.x) + ccbrdf.y))));
662:     }
663: }
664: 
665: vec3 SLEAardvarkRenderDemo_PBR_ambientSpecular_RV5qqg9LWycqoVezPTSlLw(vec3 kSA, float roughness, float nDotV, vec3 r)
666: {
667:     vec3 brdf = texture(samplerBRDFLtu, vec2(nDotV, roughness)).xyz;
668:     return (textureLod(prefilteredSpecColorSampler, r, (roughness * 4.0)).xyz * ((kSA * brdf.x) + brdf.y));
669: }
670: 
671: vec3 SLEAardvarkRenderDemo_PBR_ambientDiffuse_FO200c5yUsICHiCJedhAjRA(vec3 kdA, vec3 albedo, vec3 n)
672: {
673:     return ((kdA * texture(diffuseIrradianceSampler, n).xyz) * albedo);
674: }
675: 
676: tup_Aardvark_Base_V3d_Aardvark_Base_V3d SLEAardvarkRenderDemo_PBR_ambientSheen_ZrpU5vAusEQekIe870lJuw(vec3 sheenColor, float sheenRoughness, float nDotV, vec3 r, vec3 diffuse, vec3 specular)
677: {
678:     if((sheenColor == vec3(0.0, 0.0, 0.0)))
679:     {
680:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d(diffuse, specular);
681:     }
682:     else
683:     {
684:         float sheenDFG = texture(samplerBRDFLtu, vec2(nDotV, sheenRoughness)).z;
685:         float sheenScaling = (1.0 - (max(sheenColor.x,max(sheenColor.y,sheenColor.z)) * sheenDFG));
686:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d((diffuse * sheenScaling), ((specular * sheenScaling) + ((textureLod(prefilteredSpecColorSampler, r, (sheenRoughness * 4.0)).xyz * sheenColor) * sheenDFG)));
687:     }
688: }
689: 
690: tup_Aardvark_Base_V3d_Aardvark_Base_V3d SLEAardvarkRenderDemo_PBR_ambientLight_FS3XKzAEzYSlAL1f00P5PLg(float metallic, vec4 c, vec4 wp, vec3 n, float clearCoat, float roughness, vec3 sheenColor, float sheenRoughness, float clearCoatRoughness, vec3 clearCoatNormal)
691: {
692:     if((metallic < 0.0))
693:     {
694:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d(c.xyz, vec3(0.0, 0.0, 0.0));
695:     }
696:     else
697:     {
698:         vec3 v = normalize((CameraLocation - wp.xyz));
699:         vec3 r = reflect(n, (-v));
700:         vec3 f0Base = mix(vec3(0.04, 0.04, 0.04), c.xyz, metallic);
701:         float nDotV = max(0.0, dot(n, v));
702:         vec3 kSA = SLEAardvarkRenderDemo_BRDF_fresnelSchlickRoughness_R3fRwUfkUk_vtBtqu24DwA(mix(f0Base, SLEAardvarkRenderDemo_PBR_f0ClearCoatToSurface_J558wyL5EFxmvuWviPWtyA(f0Base), clearCoat), roughness, nDotV);
703:         tup_Aardvark_Base_V3d_Aardvark_Base_V3d patternInput = SLEAardvarkRenderDemo_PBR_ambientSheen_ZrpU5vAusEQekIe870lJuw(sheenColor, sheenRoughness, nDotV, r, SLEAardvarkRenderDemo_PBR_ambientDiffuse_FO200c5yUsICHiCJedhAjRA(((1.0 - kSA) * (1.0 - metallic)), c.xyz, n), SLEAardvarkRenderDemo_PBR_ambientSpecular_RV5qqg9LWycqoVezPTSlLw(kSA, roughness, nDotV, r));
704:         tup_Aardvark_Base_V3d_Aardvark_Base_V3d patternInput1 = SLEAardvarkRenderDemo_PBR_ambienClearCoat_LyzQK3qsGlATrBMN90lCuw(clearCoat, clearCoatRoughness, clearCoatNormal, v, r, patternInput.Item0, patternInput.Item1);
705:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d((patternInput1.Item0 * AmbientIntensity), (patternInput1.Item1 * AmbientIntensity));
706:     }
707: }
708: 
709: vec3 helper(vec2 DiffuseColorCoordinates, vec3 DiffuseColorUTangents, vec3 DiffuseColorVTangents, vec3 Normals)
710: {
711:     vec3 cctexNormal = normalize(((2.0 * texture(clearCoatNormalSampler, DiffuseColorCoordinates).xyz) - vec3(1.0, 1.0, 1.0)));
712:     return normalize((((normalize(Normals) * cctexNormal.z) + (normalize(DiffuseColorUTangents) * cctexNormal.x)) + (normalize(DiffuseColorVTangents) * cctexNormal.y)));
713: }
714: 
715: layout(location = 0) in vec2 fs_DiffuseColorCoordinates;
716: layout(location = 1) in vec3 fs_DiffuseColorUTangents;
717: layout(location = 2) in vec3 fs_DiffuseColorVTangents;
718: layout(location = 3) in vec3 fs_Normals;
719: layout(location = 4) in vec4 fs_WorldPosition;
720: layout(location = 0) out vec4 DiffuseOut;
721: layout(location = 1) out vec4 SpecularOut;
722: void main()
723: {
724:     vec3 texNormal = normalize(((2.0 * texture(normalSampler, fs_DiffuseColorCoordinates).xyz) - vec3(1.0, 1.0, 1.0)));
725:     vec3 n = normalize((((normalize(fs_Normals) * texNormal.z) + (normalize(fs_DiffuseColorUTangents) * texNormal.x)) + (normalize(fs_DiffuseColorVTangents) * texNormal.y)));
726:     if(Discard)
727:     {
728:         discard;
729:     }
730:     float sheenRoughnessC = (SheenRoughness * texture(sheenRoughnessSampler, fs_DiffuseColorCoordinates).x);
731:     vec3 sheenColorC = pow(((SheenColor * SheenColorFactor) * texture(sheenColorSampler, fs_DiffuseColorCoordinates).xyz), vec3(2.2, 2.2, 2.2));
732:     float RoughnessC = (Roughness * texture(roughnessSampler, fs_DiffuseColorCoordinates).x);
733:     vec3 NormalsC = normalize(mix(fs_Normals, n, NormalMapStrength));
734:     float MetallicC = (Metallic * texture(metallicSampler, fs_DiffuseColorCoordinates).x);
735:     vec4 ColorsC = vec4(pow(((texture(albedoSampler, fs_DiffuseColorCoordinates) * AlbedoColor).xyz * AlbedoFactor), vec3(2.2, 2.2, 2.2)), 1.0);
736:     float ClearCoatRoughnessC = (ClearCoatRoughness * texture(clearCoatRoughnessSampler, fs_DiffuseColorCoordinates).x);
737:     vec3 ClearCoatNormalC = normalize(mix(fs_Normals, (UseNormalsForClearCoat ? n : helper(fs_DiffuseColorCoordinates, fs_DiffuseColorUTangents, fs_DiffuseColorVTangents, fs_Normals)), ClearCoatNormalStrength));
738:     float ClearCoatC = (ClearCoat * texture(clearCoatSampler, fs_DiffuseColorCoordinates).x);
739:     vec3 diffuseD = vec3(0.0, 0.0, 0.0);
740:     vec3 specularD = vec3(0.0, 0.0, 0.0);
741:     int last = (LightCount - 1);
742:     for(int i = 0; (i <= last); i++)
743:     {
744:         tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d patternInput = SLEAardvarkRenderDemo_PBR_directLighting_vnCcBOgIE00UaU7Ie8vn4HA(MetallicC, fs_WorldPosition, ColorsC, NormalsC, ClearCoatNormalC, ClearCoatC, RoughnessC, sheenColorC, sheenRoughnessC, ClearCoatRoughnessC, LightArray[i]);
745:         diffuseD = (diffuseD + patternInput.Item0);
746:         specularD = (specularD + patternInput.Item1);
747:     }
748:     tup_Aardvark_Base_V3d_Aardvark_Base_V3d patternInput1 = SLEAardvarkRenderDemo_PBR_ambientLight_FS3XKzAEzYSlAL1f00P5PLg(MetallicC, ColorsC, fs_WorldPosition, NormalsC, ClearCoatC, RoughnessC, sheenColorC, sheenRoughnessC, ClearCoatRoughnessC, ClearCoatNormalC);
749:     vec3 diffuse = (diffuseD + patternInput1.Item0);
750:     vec3 specular = (specularD + patternInput1.Item1);
751:     DiffuseOut = vec4(diffuse, 1.0);
752:     SpecularOut = vec4(specular, 1.0);
753: }
754: 
755: #endif

 2: [GL] RenderObjects: +61/-0 (8412ms)
 2: using optimized native program
 2: texture created
 2: result created
 2: texture created
 2: result created
 2: [GL] RenderObjects: +61/-0 (194ms)
 2: using optimized native program
 2: texture created
 2: texture created
 2: result created
 2: texture created
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (275ms)
 2: using optimized native program
 2: [GL] RenderObjects: +2/-0 (8738ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (8766ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (9578ms)
 2: using optimized native program
 3: WARNING: ff0000
 3: WARNING: ff0000
 3: WARNING: 00ffff
 3: WARNING: 00ffff
 1: [Client] 1: stopped
