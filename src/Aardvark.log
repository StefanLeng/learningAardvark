 0: initializing aardvark ........................................................................
 0:   System Information:
 0:     System:      Microsoft Windows 10.0.19041
 0:     Processor:   4 core x64
 0:     Process:     x64
 0:     Framework:   .NET Core 3.1.11
 0:   Loading native dependencies for Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: linux/AMD64/libglfw.so.3
 0:     found: mac/AMD64/libglfw.3.dylib
 0:     found: windows/AMD64/glfw3.dll
 0:     copy glfw3.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Application.Slim.GL-32f42d4c-4cb0-88cf-a5d3-8c852c69d925-64\glfw3.dll
 0:     found: windows/x86/glfw3.dll
 0:   Loading native dependencies for Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 0.007 s
 0:   Loading native dependencies for Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: linux/AMD64/glvm.so
 0:     found: mac/AMD64/glvm.dylib
 0:     found: windows/AMD64/glvm.dll
 0:     copy glvm.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.dll
 0:     found: windows/AMD64/glvm.exp
 0:     copy glvm.exp to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.exp
 0:     found: windows/AMD64/glvm.iobj
 0:     copy glvm.iobj to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.iobj
 0:     found: windows/AMD64/glvm.ipdb
 0:     copy glvm.ipdb to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.ipdb
 0:     found: windows/AMD64/glvm.lib
 0:     copy glvm.lib to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.lib
 0:     found: windows/AMD64/glvm.pdb
 0:     copy glvm.pdb to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.pdb
 0:     found: windows/x86/glvm.dll
 0:     found: windows/x86/glvm.exp
 0:     found: windows/x86/glvm.iobj
 0:     found: windows/x86/glvm.ipdb
 0:     found: windows/x86/glvm.lib
 0:     found: windows/x86/glvm.pdb
 0:   Loading native dependencies for Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 0.000 s
 0:   Loading native dependencies for Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: remap.xml
 0:     found: linux/AMD64/libturbojpeg.so
 0:     found: mac/AMD64/libturbojpeg.dylib
 0:     found: windows/AMD64/turbojpeg.dll
 0:     copy turbojpeg.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Service-6c07790d-9ae8-a533-bcc3-f89762a0781f-64\turbojpeg.dll
 0:     found: windows/x86/turbojpeg.dll
 0:   Loading native dependencies for Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 0.013 s
 0:   Loading plugins ............................................................................
 0:     [LoadPlugins] Using plugin cache file name: C:\Users\Stefan\AppData\Roaming\Aardvark\cache\AardvarkRenderDemo_plugins.bin
 0:     [ReadCacheFile] loaded cache file: C:\Users\Stefan\AppData\Roaming\Aardvark\cache\AardvarkRenderDemo_plugins.bin
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardium.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Application.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Application.Slim.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Application.Slim.GL.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Application.Slim.Vulkan.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.Essentials.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.FSharp.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.Incremental.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.Rendering.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.Runtime.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.Telemetry.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Base.TypeProviders.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.GPGPU.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Rendering.GL.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Rendering.Vulkan.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.SceneGraph.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.SceneGraph.IO.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.Service.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.UI.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Aardvark.UI.Primitives.dll
 0:     [GetPluginAssemblyPaths] retrying to load because not in cache D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\AardvarkRenderDemo.dll
 0:     [GetPluginAssemblyPaths] retrying to load because not in cache D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\AardvarkRenderDemo.exe
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Adaptify.Core.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\AssimpNet.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\DevILSharp.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FShade.Core.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FShade.GLSL.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FShade.Imperative.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FShade.SpirV.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FSharp.Core.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FSharp.Data.Adaptive.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FsPickler.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\FsPickler.Json.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\GLSLangSharp.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Microsoft.DotNet.PlatformAbstractions.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Microsoft.Extensions.DependencyModel.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Newtonsoft.Json.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\OpenTK.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Silk.NET.Core.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Silk.NET.GLFW.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Suave.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\System.Collections.Immutable.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\System.Reactive.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\System.Runtime.CompilerServices.Unsafe.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\System.Text.Json.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Ultz.SuperInvoke.dll
 0:     [GetPluginAssemblyPaths] cache found for: D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1\Ultz.SuperInvoke.Loader.dll
 0:   Loading plugins .................................................................... 0.049 s
 0:   using cache dir: C:\Users\Stefan\AppData\Roaming\Aardvark\cache
 0:   Loading native dependencies for DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: remap.xml
 0:     found: mac/AMD64/libDevIL.dylib
 0:     found: mac/AMD64/libILU.dylib
 0:     found: mac/AMD64/libILUT.dylib
 0:     found: windows/AMD64/DevIL.dll
 0:     copy DevIL.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64\DevIL.dll
 0:     found: windows/AMD64/ILU.dll
 0:     copy ILU.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64\ILU.dll
 0:     found: windows/AMD64/ILUT.dll
 0:     copy ILUT.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64\ILUT.dll
 0:     found: windows/x86/DevIL.dll
 0:     found: windows/x86/ILU.dll
 0:     found: windows/x86/ILUT.dll
 0:   Loading native dependencies for DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null 0.000 s
 0:   Loading native dependencies for Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: remap.xml
 0:     found: linux/AMD64/libvkvm.so
 0:     found: windows/AMD64/vkvm.dll
 0:     copy vkvm.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64\vkvm.dll
 0:     found: windows/AMD64/vkvm.exp
 0:     copy vkvm.exp to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64\vkvm.exp
 0:     found: windows/AMD64/vkvm.lib
 0:     copy vkvm.lib to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64\vkvm.lib
 0:     found: windows/AMD64/vkvm.pdb
 0:     copy vkvm.pdb to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64\vkvm.pdb
 0:     found: windows/x86/vkvm.dll
 0:     found: windows/x86/vkvm.exp
 0:     found: windows/x86/vkvm.lib
 0:     found: windows/x86/vkvm.pdb
 0:   Loading native dependencies for Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null 0.005 s
 0:   Loading native dependencies for GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: linux/AMD64/libGLSLangNative.so
 0:     found: windows/AMD64/GLSLangNative.dll
 0:     copy GLSLangNative.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.dll
 0:     found: windows/AMD64/GLSLangNative.exp
 0:     copy GLSLangNative.exp to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.exp
 0:     found: windows/AMD64/GLSLangNative.iobj
 0:     copy GLSLangNative.iobj to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.iobj
 0:     found: windows/AMD64/GLSLangNative.ipdb
 0:     copy GLSLangNative.ipdb to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.ipdb
 0:     found: windows/AMD64/GLSLangNative.lib
 0:     copy GLSLangNative.lib to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.lib
 0:     found: windows/AMD64/GLSLangNative.pdb
 0:     copy GLSLangNative.pdb to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64\GLSLangNative.pdb
 0:   Loading native dependencies for GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null 0.000 s
 0:   Loading native dependencies for AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null 
 0:     found: linux/AMD64/libassimp.so
 0:     found: mac/AMD64/libassimp.dylib
 0:     found: windows/AMD64/Assimp64.dll
 0:     copy Assimp64.dll to C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64\Assimp64.dll
 0:     found: windows/x86/Assimp32.dll
 0:   Loading native dependencies for AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null 0.000 s
 0:   [cache miss] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:   [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:   [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   initializing PixImageDevil .................................................................
 0:     probing paths for DevIL
 0:       D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:       C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64
 0:     [Introspection] loaded native library DevIL from C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64\DevIL.dll
 0:   initializing PixImageDevil ......................................................... 0.026 s
 0:   [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   initializing CustomPicklerProvider .........................................................
 0:     [cache miss] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     installing pickler: Aardvark.Base.Picklers.AdaptivePicklers
 0:   initializing CustomPicklerProvider ................................................. 0.041 s
 0:   [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   initializing SceneGraphCompletenessCheck ...................................................
 0:     [cache miss] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache miss] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AardvarkRenderDemo, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Adaptify.Core, Version=0.0.46.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51
 0:     [cache hit ] FSharp.Data.Adaptive, Version=0.0.25.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FSharp.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a
 0:     [cache hit ] Aardvark.Base, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] DevILSharp, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Telemetry, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Rendering, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Core, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.Imperative, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.FSharp, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.TypeProviders, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FShade.GLSL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Incremental, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Essentials, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.SceneGraph, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:     [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:     [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   initializing SceneGraphCompletenessCheck ........................................... 0.138 s
 0:   [cache hit ] Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed
 0:   [cache hit ] Aardvark.Application, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Service, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Suave, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Rendering.Vulkan, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] GLSLangSharp, Version=0.4.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.GPGPU, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Rendering.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Base.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] FsPickler.Json, Version=5.2.2.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.UI.Primitives, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] AssimpNet, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.Application.Slim.GL, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Silk.NET.GLFW, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Ultz.SuperInvoke, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Ultz.SuperInvoke.Loader, Version=1.0.4.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Silk.NET.Core, Version=1.2.1.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardium, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   [cache hit ] Aardvark.SceneGraph.IO, Version=5.0.0.0, Culture=neutral, PublicKeyToken=null
 0:   initializing Loader ................................................................ 0.000 s
 0: initializing aardvark ................................................................ 0.538 s
 0: probing paths for nvapi64
 0:   D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Application.Slim.GL-32f42d4c-4cb0-88cf-a5d3-8c852c69d925-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Service-6c07790d-9ae8-a533-bcc3-f89762a0781f-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64
 0: [Introspection] could not load native library nvapi64.dll
 0: trying to resolve native library libEGL.dll
 0: probing paths for libEGL
 0:   D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Application.Slim.GL-32f42d4c-4cb0-88cf-a5d3-8c852c69d925-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Service-6c07790d-9ae8-a533-bcc3-f89762a0781f-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64
 0: [Introspection] could not load native library libEGL.dll
 0: OpenGL 4.5 working
 0: backbuffer
 0:   color: R8G8B8A8
 0:   depth: D24S8
 0: probing paths for glvm
 0:   D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0: [Introspection] loaded native library glvm from C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.dll
 0: backbuffer
 0:   color: R8G8B8A8
 0:   depth: D24S8
 0: initializing OpenGL runtime ..................................................................
 0:   probing paths for glvm
 0:     D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Application.Slim.GL-32f42d4c-4cb0-88cf-a5d3-8c852c69d925-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Service-6c07790d-9ae8-a533-bcc3-f89762a0781f-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64
 0:   [Introspection] loaded native library glvm from C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64\glvm.dll
 0:   probing paths for Opengl32
 0:     D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Application.Slim.GL-32f42d4c-4cb0-88cf-a5d3-8c852c69d925-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Service-6c07790d-9ae8-a533-bcc3-f89762a0781f-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\DevILSharp-936b6fb1-0af2-511d-324b-d21b85e42037-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.Vulkan-bb94696d-9eea-074c-ddff-a32358cb7e99-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\GLSLangSharp-fb08be3f-76ef-01e5-86cb-7c1c69b76b7e-64
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64
 0:   [Introspection] loaded native library Opengl32.dll from Opengl32.dll
 0:   probing paths for opengl32
 0:     D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:   [Introspection] loaded native library opengl32.dll from opengl32.dll
 0:   probing paths for kernel32
 0:     D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:     C:\Users\Stefan\AppData\Local\Temp\aardvark-native\Aardvark.Rendering.GL-96423937-34fa-5842-8198-d81081aad7a9-64
 0:   [Introspection] loaded native library kernel32.dll from kernel32.dll
 0:   vendor:   "ATI Technologies Inc."
 0:   renderer: "AMD Radeon (TM) R9 380 Series"
 0:   version:  OpenGL 4.5.14736 / GLSL 4.6
 0: initializing OpenGL runtime .......................................................... 0.140 s
 0: WARNING: load
 0: probing paths for kernel32
 0:   D:\Users\Stefan\Documents\GitHub\learningAardvark\bin\Debug\netcoreapp3.1
 0:   C:\Users\Stefan\AppData\Local\Temp\aardvark-native\AssimpNet-969d1624-35de-e8ae-f27b-d0ea28a223a6-64
 0: [Introspection] loaded native library kernel32.dll from kernel32.dll
 0: Aardvark.UI serves template.html
 0: Aardvark.UI serves favicon.ico
 0: WARNING: [aardvark.media] currently ThreadPool.MinThreads is (4,4)
 0: WARNING: [aardvark.media] unfortunately, currently we need to adjust this to at least (12,12) due to an open issue https://github.com/aardvark-platform/aardvark.media/issues/19
 0: Aardvark.Service serves aardvark.js
 0: Aardvark.Service serves rgbcolor.js
 0: Aardvark.Service serves docking.js
 0: Aardvark.Service serves semantic.js
 0: Aardvark.Service serves jquery-3-3-1.js
 0: Aardvark.Service serves touchstick.js
 0: Aardvark.Service serves aardfs.js
 0: Aardvark.Service serves essentialstuff.js
 0: Aardvark.Service serves aardvark.css
 0: Aardvark.Service serves docking.css
 0: Aardvark.Service serves semantic.css
 0: Aardvark.Service serves aardfs.css
 0: Aardvark.Service serves semantic-overrides.css
 0: Aardvark.Service serves fonts.css
 0: Aardvark.Service serves index.html
 0: Aardvark.Service serves stats.html
 0: Aardvark.Service serves aardvark-light.svg
 0: Aardvark.Service serves aardvark.svg
 0: Aardvark.Service serves brand-icons.woff2
 0: Aardvark.Service serves outline-icons.woff2
 0: Aardvark.Service serves icons.woff2
 0: Aardvark.Service serves S6u8w4BMUTPHjxsAUi-qJCY.woff2
 0: Aardvark.Service serves S6u8w4BMUTPHjxsAXC-q.woff2
 0: Aardvark.Service serves S6u9w4BMUTPHh6UVSwaPGR_p.woff2
 0: Aardvark.Service serves S6u9w4BMUTPHh6UVSwiPGQ.woff2
 0: Aardvark.Service serves S6uyw4BMUTPHjx4wXg.woff2
 0: Aardvark.Service serves S6uyw4BMUTPHjxAwXjeu.woff2
 0: Aardvark.Service serves S6u_w4BMUTPHjxsI5wq_FQft1dw.woff2
 0: Aardvark.Service serves S6u_w4BMUTPHjxsI5wq_Gwft.woff2
 0: Aardvark.UI serves template.html
 0: Aardvark.UI serves favicon.ico
 0: Aardvark.UI.Primitives serves spectrum.css
 0: Aardvark.UI.Primitives serves spectrum.js
 1: [Server] created client for (07a46bd4-8b49-b1a4-f257-9094bd5fb302/n7), mapping enabled
 1: [Client] 1: running n7
 2: [Scene] n7: created
 2: texture created
 2: result created
 2: texture created
 2: result created
 2: texture created
 2: result created
 2: WARNING: load
 2: result created
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: [GL] RenderObjects: +1/-0 (456ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (3ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (3ms)
 2: using optimized native program
 2: [GL] RenderObjects: +61/-0 (1611ms)
 2: using optimized native program
 2: texture created
 2: texture created
 2: result created
 2: texture created
 2: result created
 2: texture created
 2: result created
 2: texture created
 2: result created
 2: texture created
 2: [GL] RenderObjects: +1/-0 (8ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (28ms)
 2: using optimized native program
 2: texture created
 2: result created
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (5ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (32ms)
 2: using optimized native program
 2: texture created
 2: result created
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: [GL] RenderObjects: +1/-0 (7ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (20ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (10ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (3ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (3ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (6ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (24ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (6ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (37ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (3ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (3ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (1ms)
 2: using optimized native program
 2: texture created
 2: result created
 2: [GL] RenderObjects: +1/-0 (2ms)
 2: using optimized native program
 2: texture created
 2: texture created
 2: Compiling shader:
  1: #version 460
  2: #define __SHADER_STAGE__
  3: 
  4: 
  5: 
  6: 
  7: struct tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d
  8: {
  9:     bool Item0;
 10:     vec3 Item1;
 11:     vec3 Item2;
 12:     float Item3;
 13:     vec3 Item4;
 14: };
 15: 
 16: struct SLEAardvarkRenderDemo_SLEUniform_Light
 17: {
 18:     int lightType;
 19:     vec4 lightPosition;
 20:     vec4 lightDirection;
 21:     vec3 color;
 22:     bool castsShadow;
 23:     float cutOffInner;
 24:     float cutOffOuter;
 25:     float radius;
 26:     vec3 virtualPos;
 27:     vec3 virtualPos2;
 28:     vec3 p1;
 29:     vec3 p2;
 30:     vec3 p3;
 31:     vec3 p4;
 32:     mat4x4 toWorld;
 33:     mat4x4 fromWorld;
 34: };
 35: 
 36: struct tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d
 37: {
 38:     vec3 Item0;
 39:     vec3 Item1;
 40:     vec3 Item2;
 41:     vec3 Item3;
 42: };
 43: 
 44: struct tup_Aardvark_Base_V3d_Aardvark_Base_V3d
 45: {
 46:     vec3 Item0;
 47:     vec3 Item1;
 48: };
 49: 
 50: struct tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double
 51: {
 52:     vec3 Item0;
 53:     vec3 Item1;
 54:     float Item2;
 55: };
 56: 
 57: layout(std140, binding = 0)
 58: uniform PerView
 59: {
 60:     vec3 CameraLocation;
 61: };
 62: 
 63: 
 64: layout(std140, binding = 1)
 65: uniform Global
 66: {
 67:     SLEAardvarkRenderDemo_SLEUniform_Light Light;
 68:     float LightFarZ;
 69:     float LightNearZ;
 70:     mat4x4 LightViewM;
 71:     mat4x4 LightViewProjMatrix;
 72:     float TranslucencyBias[8];
 73:     float TranslucencyStrength[8];
 74:     vec3 sssFalloff[8];
 75:     vec3 sssStrength[8];
 76:     float sssWidth[8];
 77: };
 78: 
 79: 
 80: layout(binding = 0)
 81: uniform sampler2D clearCoat;
 82: 
 83: layout(binding = 1)
 84: uniform sampler2D color;
 85: 
 86: layout(binding = 2)
 87: uniform sampler2D emission;
 88: 
 89: layout(binding = 3)
 90: uniform sampler2D normal;
 91: 
 92: layout(binding = 4)
 93: uniform sampler2D samplerBRDFLtu;
 94: 
 95: layout(binding = 5)
 96: uniform sampler2DShadow samplerShadowMap;
 97: 
 98: layout(binding = 6)
 99: uniform sampler2D samplerShadowMap1;
100: 
101: layout(binding = 7)
102: uniform sampler2D samplerShadowMapTex;
103: 
104: layout(binding = 8)
105: uniform sampler2D sheen;
106: 
107: layout(binding = 9)
108: uniform sampler2D wPos;
109: 
110: tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d(vec3 item0, vec3 item1, vec3 item2, vec3 item3)
111: {
112:     tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d res;
113:     res.Item0 = item0;
114:     res.Item1 = item1;
115:     res.Item2 = item2;
116:     res.Item3 = item3;
117:     return res;
118: }
119: 
120: 
121: float SLEAardvarkRenderDemo_Shadow_random_1MN50IO3BjRacQVcNxGOSw(vec4 seed)
122: {
123:     return fract((sin(dot(seed, vec4(12.9898, 78.233, 45.164, 94.673))) * 43758.5453));
124: }
125: 
126: 
127: vec2 SLEAardvarkRenderDemo_Shadow_vogelDiskOffset_cR3OqSYynaKjhFMpTsd8fQ(int sampleIndex, int sampleCount, float phi)
128: {
129:     float r = (sqrt((float(sampleIndex) + 0.5)) / sqrt(float(sampleCount)));
130:     float theta = ((float(sampleIndex) * 2.39996) + phi);
131:     return vec2((r * cos(theta)), (r * sin(theta)));
132: }
133: 
134: 
135: vec2 SLEAardvarkRenderDemo_Shadow_avgBlockersDepthToPenumbra_ntc5ns5VYYuiRbvrmwQQGw(vec2 lightSize, float surfaceDepth, float avgBlockersDepth)
136: {
137:     return ((lightSize * (surfaceDepth - avgBlockersDepth)) / avgBlockersDepth);
138: }
139: 
140: 
141: int SLEAardvarkRenderDemo_GBuffer_extractProfileIndex_kBjDAbusFqtitZm3MIDG8g(float w)
142: {
143:     float i = trunc((w / 10.0));
144:     if((((i >= 0.0) && (i <= 7.0)) && (w >= 0.0)))
145:     {
146:         return int(i);
147:     }
148:     else
149:     {
150:         return -1;
151:     }
152: }
153: 
154: 
155: vec3 SLEAardvarkRenderDemo_BRDF_fresnelSchlick_oKvmgrrRv31EPsFk6qorKg(vec3 f0, float cosTheta)
156: {
157:     return (f0 + ((clamp(dot(f0, vec3(16.5, 16.5, 16.5)), 0, 1) - f0) * pow((1.0 - cosTheta), 5.0)));
158: }
159: 
160: 
161: tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double(vec3 item0, vec3 item1, float item2)
162: {
163:     tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double res;
164:     res.Item0 = item0;
165:     res.Item1 = item1;
166:     res.Item2 = item2;
167:     return res;
168: }
169: 
170: 
171: float SLEAardvarkRenderDemo_BRDF_DistributionGGX_nY0za00tv6jWojDhC5JYWXw(float nDotH, float roughness)
172: {
173:     float a = (roughness * roughness);
174:     float a2 = (a * a);
175:     float deno = (((nDotH * nDotH) * (a2 - 1.0)) + 1.0);
176:     return (a2 / ((3.141592653589793 * deno) * deno));
177: }
178: 
179: 
180: float helper1(float roughness)
181: {
182:     float r = (roughness + 1.0);
183:     return ((r * r) / 8.0);
184: }
185: 
186: 
187: float SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(vec3 lDir, vec3 ln, float cutOffInner, float cutOffOuter)
188: {
189:     return clamp(((dot(lDir, (-ln)) - cutOffOuter) / (cutOffInner - cutOffOuter)), 0, 1);
190: }
191: 
192: 
193: float SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceRectangle_CSsH8PY0AZ5Q9fWUXd5VQ(vec3 p1, vec3 p2, vec3 p4)
194: {
195:     return (1.0 / ((abs(length((p1 - p2))) * abs(length((p1 - p4)))) * 3.141592653589793));
196: }
197: 
198: 
199: vec3 SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(vec3 n, vec3 v, float roughness)
200: {
201:     return normalize(mix(n, (-reflect(n, v)), (1.0 - roughness)));
202: }
203: 
204: 
205: vec3 SLEAardvarkRenderDemo_PBR_representativePointSpehre_OBJfz00NlqX4woYAFs00nVKQ(vec3 n, vec3 v, float roughness, vec3 lUnnorm, float radius)
206: {
207:     vec3 r = SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
208:     vec3 centerToRay = ((dot(lUnnorm, r) * r) - lUnnorm);
209:     return normalize((lUnnorm + (centerToRay * clamp((radius / length(centerToRay)), 0.0, 1.0))));
210: }
211: 
212: 
213: float SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(float dist)
214: {
215:     float d = max(dist, 0.01);
216:     return (1.0 / (d * d));
217: }
218: 
219: 
220: float helper2(float cosTheta, float sinSigmaSqr, float sinTheta)
221: {
222:     float x = sqrt(((1.0 / sinSigmaSqr) - 1.0));
223:     float y = ((-x) * (cosTheta / sinTheta));
224:     float sinThetaSqrtY = (sinTheta * sqrt((1.0 - (y * y))));
225:     return ((((cosTheta * acos(y)) - (x * sinThetaSqrtY)) * sinSigmaSqr) + atan((sinThetaSqrtY / x)));
226: }
227: 
228: 
229: float SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceSphere_UrX1ctp5f0mkaCN8lcAp4g(float radius)
230: {
231:     return (1.0 / ((((radius * radius) * 4.0) * 3.141592653589793) * 3.141592653589793));
232: }
233: 
234: 
235: float SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceDisk_3Fm00pFf99CfR9hPbaGPImw(float radius)
236: {
237:     return (1.0 / (((radius * radius) * 3.141592653589793) * 3.141592653589793));
238: }
239: 
240: 
241: float SLEAardvarkRenderDemo_PBR_rectangleSolidAngle_yk0LnyTP2qLGhxTZr4oSHw(vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4)
242: {
243:     vec3 v1 = (p1 - wPos);
244:     vec3 v2 = (p2 - wPos);
245:     vec3 v3 = (p3 - wPos);
246:     vec3 v4 = (p4 - wPos);
247:     vec3 n1 = normalize(cross(v1, v2));
248:     vec3 n2 = normalize(cross(v2, v3));
249:     vec3 n3 = normalize(cross(v3, v4));
250:     vec3 n4 = normalize(cross(v4, v1));
251:     return ((((acos(dot((-n1), n2)) + acos(dot((-n2), n3))) + acos(dot((-n3), n4))) + acos(dot((-n4), n1))) - 6.283185307179586);
252: }
253: 
254: 
255: float SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(vec3 o, vec3 d, vec3 planeOrigin, vec3 planeNormal)
256: {
257:     return (dot(planeNormal, (planeOrigin - o)) / dot(planeNormal, d));
258: }
259: 
260: 
261: float SLEAardvarkRenderDemo_PBR_traceTriangle_3zyeXtvfi2Azicu3TsfTxQ(vec3 o, vec3 d, vec3 A, vec3 B, vec3 C)
262: {
263:     vec3 p = (o + (d * SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(o, d, A, normalize(cross((B - A), (C - B))))));
264:     vec3 n2 = normalize(cross((C - B), (p - C)));
265:     if(((dot(normalize(cross((B - A), (p - B))), n2) > 0.999) && (dot(n2, normalize(cross((A - C), (p - A)))) > 0.999)))
266:     {
267:         return 1.0;
268:     }
269:     else
270:     {
271:         return 0.0;
272:     }
273: }
274: 
275: 
276: float SLEAardvarkRenderDemo_PBR_traceRectangle_OSdnOpnvoOU8tTrcn6w3JA(vec3 o, vec3 d, vec3 A, vec3 B, vec3 C, vec3 D)
277: {
278:     return max(SLEAardvarkRenderDemo_PBR_traceTriangle_3zyeXtvfi2Azicu3TsfTxQ(o, d, A, B, C), SLEAardvarkRenderDemo_PBR_traceTriangle_3zyeXtvfi2Azicu3TsfTxQ(o, d, C, D, A));
279: }
280: 
281: 
282: tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(bool item0, vec3 item1, vec3 item2, float item3, vec3 item4)
283: {
284:     tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d res;
285:     res.Item0 = item0;
286:     res.Item1 = item1;
287:     res.Item2 = item2;
288:     res.Item3 = item3;
289:     res.Item4 = item4;
290:     return res;
291: }
292: 
293: 
294: vec3 SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(vec3 a, vec3 b, vec3 c)
295: {
296:     vec3 ab = (b - a);
297:     return (a + (clamp((dot((c - a), ab) / dot(ab, ab)), 0, 1) * ab));
298: }
299: 
300: 
301: vec3 SLEAardvarkRenderDemo_PBR_diffuseLobe_28BmPU7EzF002N1qCMj5AKQ(vec3 F, float metallic, vec3 albedo)
302: {
303:     return (((vec3(1.0, 1.0, 1.0) - F) * ((1.0 - metallic) * albedo)) / 3.141592653589793);
304: }
305: 
306: 
307: tup_Aardvark_Base_V3d_Aardvark_Base_V3d new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d(vec3 item0, vec3 item1)
308: {
309:     tup_Aardvark_Base_V3d_Aardvark_Base_V3d res;
310:     res.Item0 = item0;
311:     res.Item1 = item1;
312:     return res;
313: }
314: 
315: 
316: float SLEAardvarkRenderDemo_BRDF_distributionCharlie_9Ai0hRoW1dnTGa2k_n8d7g(float roughness, float nDotH)
317: {
318:     float rcpR = (1.0 / (roughness * roughness));
319:     return (((2.0 + rcpR) * pow((1.0 - (nDotH * nDotH)), (rcpR * 0.5))) / 6.283185307179586);
320: }
321: 
322: 
323: float SLEAardvarkRenderDemo_BRDF_visibilityAshikhmin_1GWL7ALGseRABCZZ00R7N8g(float nDotV, float nDotL)
324: {
325:     return (1.0 / max(0.001, (4.0 * ((nDotL + nDotV) - (nDotL * nDotV)))));
326: }
327: 
328: 
329: vec3 SLEAardvarkRenderDemo_PBR_f0ClearCoatToSurface_J558wyL5EFxmvuWviPWtyA(vec3 f0Base)
330: {
331:     vec3 sqrtBase = sqrt(f0Base);
332:     vec3 baseIOR = ((1.0 + sqrtBase) / (1.0 - sqrtBase));
333:     return (((baseIOR - 1.5) / (baseIOR + 1.5)) * ((baseIOR - 1.5) / (baseIOR + 1.5)));
334: }
335: 
336: 
337: vec3 SLEAardvarkRenderDemo_PBR_specularLobeCloth_Fwi09ZLZZAMycDWF9TT00Nw(vec3 F, float roughness, float nDotH, float nDotV, float nDotL)
338: {
339:     return ((SLEAardvarkRenderDemo_BRDF_distributionCharlie_9Ai0hRoW1dnTGa2k_n8d7g(roughness, nDotH) * SLEAardvarkRenderDemo_BRDF_visibilityAshikhmin_1GWL7ALGseRABCZZ00R7N8g(nDotV, nDotL)) * F);
340: }
341: 
342: 
343: vec3 SLEAardvarkRenderDemo_PBR_representativePointRectangle_RhNDGSMx9lhdbAUaPy333A(vec3 r, vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4, vec3 ln, vec3 lightPosition)
344: {
345:     if((SLEAardvarkRenderDemo_PBR_traceRectangle_OSdnOpnvoOU8tTrcn6w3JA(wPos, r, p1, p2, p3, p4) > 0.0))
346:     {
347:         return r;
348:     }
349:     else
350:     {
351:         vec3 tracedPlane = (wPos + (r * SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(wPos, r, lightPosition, ln)));
352:         vec3 pc1 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p1, p2, tracedPlane);
353:         vec3 pc2 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p2, p3, tracedPlane);
354:         vec3 pc3 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p3, p4, tracedPlane);
355:         vec3 pc4 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p4, p1, tracedPlane);
356:         float d2 = distance(pc2, tracedPlane);
357:         float d3 = distance(pc3, tracedPlane);
358:         float minDist = distance(pc1, tracedPlane);
359:         vec3 p = pc1;
360:         if((d2 < minDist))
361:         {
362:             minDist = d2;
363:             p = pc2;
364:         }
365:         if((d3 < minDist))
366:         {
367:             minDist = d3;
368:             p = pc3;
369:         }
370:         if((distance(pc4, tracedPlane) < minDist))
371:         {
372:             p = pc4;
373:         }
374:         return normalize((p - wPos));
375:     }
376: }
377: 
378: 
379: vec3 SLEAardvarkRenderDemo_PBR_representativePointDisk_2JPHvvLUgcbUkMatH00ra00Q(vec3 r, vec3 wPos, float radius, vec3 ln, vec3 lightPosition, vec3 lUnnorm)
380: {
381:     vec3 centerToRay = ((wPos + (r * SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(wPos, r, lightPosition, ln))) - lightPosition);
382:     return normalize((lUnnorm + (centerToRay * clamp((radius / length(centerToRay)), 0, 1))));
383: }
384: 
385: 
386: float SLEAardvarkRenderDemo_PBR_attenuationRectangle_rv8niFPySJx9fZLgTLeI9A(vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4, vec3 lUnnorm, vec3 ln, vec3 n)
387: {
388:     if((dot((-lUnnorm), ln) > 0.0))
389:     {
390:         return ((max(0.0, SLEAardvarkRenderDemo_PBR_rectangleSolidAngle_yk0LnyTP2qLGhxTZr4oSHw(wPos, p1, p2, p3, p4)) * 0.2) * ((((clamp(dot(n, normalize(lUnnorm)), 0, 1) + clamp(dot(n, normalize((p1 - wPos))), 0, 1)) + clamp(dot(n, normalize((p2 - wPos))), 0, 1)) + clamp(dot(n, normalize((p3 - wPos))), 0, 1)) + clamp(dot(n, normalize((p4 - wPos))), 0, 1)));
391:     }
392:     else
393:     {
394:         return 0.0;
395:     }
396: }
397: 
398: 
399: float SLEAardvarkRenderDemo_PBR_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(float cosTheta, float sinSigmaSqr)
400: {
401:     float sinTheta = sqrt((1.0 - (cosTheta * cosTheta)));
402:     return max(0.0, (((cosTheta * cosTheta) > sinSigmaSqr) ? ((3.141592653589793 * sinSigmaSqr) * clamp(cosTheta, 0.0, 1.0)) : helper2(cosTheta, sinSigmaSqr, sinTheta)));
403: }
404: 
405: 
406: float SLEAardvarkRenderDemo_PBR_attenuationDisk_VLzSNJsTqkF1zFM_WwDMYA(vec3 lUnnorm, float radius, vec3 n, vec3 lDir, vec3 ln)
407: {
408:     float radius2 = (radius * radius);
409:     return (SLEAardvarkRenderDemo_PBR_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(clamp(dot(n, lDir), -0.999, 0.999), (radius2 / (radius2 + max(radius2, dot(lUnnorm, lUnnorm))))) * clamp(dot(ln, (-lDir)), 0, 1));
410: }
411: 
412: 
413: float SLEAardvarkRenderDemo_PBR_attenuationSphere_8P00kpj_Yqvju9D85LleWPQ(vec3 lUnnorm, float radius, vec3 n, vec3 lDir)
414: {
415:     return SLEAardvarkRenderDemo_PBR_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(clamp(dot(n, lDir), -0.999, 0.999), min(0.9999, ((radius * radius) / dot(lUnnorm, lUnnorm))));
416: }
417: 
418: 
419: tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d SLEAardvarkRenderDemo_PBR_getLightParams_r_MUL_v9kV63L09Maehwg(SLEAardvarkRenderDemo_SLEUniform_Light light, vec3 wPos, vec3 n, vec3 v, float roughness)
420: {
421:     if((light.lightType == 0))
422:     {
423:         return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(false, vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), 1.0, vec3(0.0, 0.0, 0.0));
424:     }
425:     else
426:     {
427:         if((light.lightType == 1))
428:         {
429:             return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, normalize((-light.lightDirection.xyz)), light.color, 1.0, light.color);
430:         }
431:         else
432:         {
433:             if((light.lightType == 2))
434:             {
435:                 vec3 illuminannce = ((light.color * SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))) * 0.07957747154594767);
436:                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, normalize((light.lightPosition.xyz - wPos)), illuminannce, 1.0, illuminannce);
437:             }
438:             else
439:             {
440:                 if((light.lightType == 3))
441:                 {
442:                     vec3 lDir = normalize((light.lightPosition.xyz - wPos));
443:                     vec3 illuminannce1 = (((light.color * SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(lDir, normalize(light.lightDirection.xyz), light.cutOffInner, light.cutOffOuter)) * SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))) * 0.3183098861837907);
444:                     return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, lDir, illuminannce1, 1.0, illuminannce1);
445:                 }
446:                 else
447:                 {
448:                     if((light.lightType == 4))
449:                     {
450:                         vec3 lUnnorm = (light.lightPosition.xyz - wPos);
451:                         vec3 l = SLEAardvarkRenderDemo_PBR_representativePointSpehre_OBJfz00NlqX4woYAFs00nVKQ(n, v, roughness, lUnnorm, light.radius);
452:                         return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, l, (((light.color * SLEAardvarkRenderDemo_PBR_attenuationSphere_8P00kpj_Yqvju9D85LleWPQ(lUnnorm, light.radius, n, normalize(lUnnorm))) * SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceSphere_UrX1ctp5f0mkaCN8lcAp4g(light.radius)) / dot(n, l)), 1.0, ((light.color * 0.07957747154594767) * SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))));
453:                     }
454:                     else
455:                     {
456:                         if((light.lightType == 5))
457:                         {
458:                             vec3 lUnnorm1 = (light.lightPosition.xyz - wPos);
459:                             vec3 ln = normalize(light.lightDirection.xyz);
460:                             float intensity = SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize((light.virtualPos.xyz - wPos)), ln, light.cutOffInner, light.cutOffOuter);
461:                             vec3 r = SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
462:                             vec3 l1 = SLEAardvarkRenderDemo_PBR_representativePointDisk_2JPHvvLUgcbUkMatH00ra00Q(r, wPos, light.radius, ln, light.lightPosition.xyz, lUnnorm1);
463:                             return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, l1, ((((light.color * intensity) * SLEAardvarkRenderDemo_PBR_attenuationDisk_VLzSNJsTqkF1zFM_WwDMYA(lUnnorm1, light.radius, n, normalize(lUnnorm1), ln)) * SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceDisk_3Fm00pFf99CfR9hPbaGPImw(light.radius)) / dot(n, l1)), clamp(abs(dot(ln, r)), 0, 1), (((light.color * intensity) * 0.3183098861837907) * SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))));
464:                         }
465:                         else
466:                         {
467:                             if((light.lightType == 6))
468:                             {
469:                                 vec3 ln1 = normalize(light.lightDirection.xyz);
470:                                 vec4 d1 = (vec4(normalize((light.virtualPos.xyz - wPos)), 0.0) * light.fromWorld);
471:                                 vec4 d3 = (vec4(normalize((light.virtualPos2.xyz - wPos)), 0.0) * light.fromWorld);
472:                                 float intensity1 = (SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize(vec3(d1.x, d1.y, 0.0)), vec3(0.0, 1.0, 0.0), light.cutOffInner, light.cutOffOuter) * SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize(vec3(0.0, d3.y, d3.z)), vec3(0.0, 1.0, 0.0), light.cutOffInner, light.cutOffOuter));
473:                                 vec3 r1 = SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
474:                                 vec3 l2 = SLEAardvarkRenderDemo_PBR_representativePointRectangle_RhNDGSMx9lhdbAUaPy333A(r1, wPos, light.p1, light.p2, light.p3, light.p4, ln1, light.lightPosition.xyz);
475:                                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, l2, ((((light.color * intensity1) * SLEAardvarkRenderDemo_PBR_attenuationRectangle_rv8niFPySJx9fZLgTLeI9A(wPos, light.p1, light.p2, light.p3, light.p4, (light.lightPosition.xyz - wPos), ln1, n)) * SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceRectangle_CSsH8PY0AZ5Q9fWUXd5VQ(light.p1, light.p2, light.p4)) / dot(n, l2)), clamp(abs(dot(ln1, r1)), 0, 1), (((light.color * intensity1) * 0.3183098861837907) * SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))));
476:                             }
477:                             else
478:                             {
479:                                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(false, vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), 1.0, vec3(0.0, 0.0, 0.0));
480:                             }
481:                         }
482:                     }
483:                 }
484:             }
485:         }
486:     }
487: }
488: 
489: 
490: float SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(bool ilb, float nDotV, float roughness)
491: {
492:     float k = (ilb ? ((roughness * roughness) / 2.0) : helper1(roughness));
493:     return (nDotV / ((nDotV * (1.0 - k)) + k));
494: }
495: 
496: 
497: float SLEAardvarkRenderDemo_BRDF_GeometrySmith_U72y2oOMHb00XVgzYW0P6uA(bool ilb, float nDotV, float nDotL, float roughness)
498: {
499:     return (SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(ilb, nDotL, roughness) * SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(ilb, nDotV, roughness));
500: }
501: 
502: 
503: vec3 SLEAardvarkRenderDemo_PBR_specularLobeStandard_CqO00nVcgM1EG00Qi6Zav5og(vec3 F, float roughness, float nDotH, float nDotV, float nDotL)
504: {
505:     return (((SLEAardvarkRenderDemo_BRDF_DistributionGGX_nY0za00tv6jWojDhC5JYWXw(nDotH, roughness) * SLEAardvarkRenderDemo_BRDF_GeometrySmith_U72y2oOMHb00XVgzYW0P6uA(false, nDotV, nDotL, roughness)) * F) / max(0.001, ((4.0 * nDotV) * nDotL)));
506: }
507: 
508: 
509: tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double SLEAardvarkRenderDemo_PBR_directclearCoat_k6yWm00bc468V3YViKkxblg(float clearCoat, float clearCoatRoughness, vec3 clearCoatNormal, vec3 lDir, vec3 v, vec3 h, float hDotV)
510: {
511:     float ccNDotL = clamp(dot(clearCoatNormal, lDir), 0, 1);
512:     vec3 ccF = (clearCoat * SLEAardvarkRenderDemo_BRDF_fresnelSchlick_oKvmgrrRv31EPsFk6qorKg(vec3(0.04, 0.04, 0.04), hDotV));
513:     return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double(ccF, SLEAardvarkRenderDemo_PBR_specularLobeStandard_CqO00nVcgM1EG00Qi6Zav5og(ccF, clearCoatRoughness, clamp(dot(clearCoatNormal, h), 0, 1), clamp(dot(clearCoatNormal, v), 0, 1), ccNDotL), ccNDotL);
514: }
515: 
516: 
517: 
518: #ifdef Vertex
519: layout(location = 0) in vec2 DiffuseColorCoordinates;
520: layout(location = 1) in vec4 Positions;
521: layout(location = 0) out vec2 fs_DiffuseColorCoordinates;
522: void main()
523: {
524:     fs_DiffuseColorCoordinates = DiffuseColorCoordinates;
525:     gl_Position = Positions;
526: }
527: 
528: #endif
529: 
530: 
531: 
532: #ifdef Fragment
533: 
534: float SLEAardvarkRenderDemo_PBR_getShadowLinearDepth_CJdmHPOFpBaJaM3DnhGBOg(vec2 tc)
535: {
536:     if((Light.lightType == 1))
537:     {
538:         return (texture(samplerShadowMap1, tc).x * LightFarZ);
539:     }
540:     else
541:     {
542:         return (((2.0 * LightNearZ) * LightFarZ) / ((LightFarZ + LightNearZ) - (((2.0 * texture(samplerShadowMap1, tc).x) - 1.0) * (LightFarZ - LightNearZ))));
543:     }
544: }
545: 
546: float SLEAardvarkRenderDemo_PBR_getThickness_uG9PEPXS6cJk6ykmeziGuQ(float bias, vec3 wp, vec3 wn)
547: {
548:     vec4 shrinkedPos = vec4((wp - (bias * wn)), 1.0);
549:     vec4 posLightSpace = (shrinkedPos * LightViewM);
550:     vec4 shadowPos = (shrinkedPos * LightViewProjMatrix);
551:     return max(abs((SLEAardvarkRenderDemo_PBR_getShadowLinearDepth_CJdmHPOFpBaJaM3DnhGBOg((((shadowPos.xy / shadowPos.w) * 0.5) + 0.5)) - ((-posLightSpace.z) / posLightSpace.w))), 0.001);
552: }
553: 
554: vec3 SLEAardvarkRenderDemo_PBR_transm_o0izfTE2HCHBVzdfbccS2A(int profileIndex, vec3 wp, vec3 wn, vec3 l)
555: {
556:     float bias = TranslucencyBias[profileIndex];
557:     float sssWidth = sssWidth[profileIndex];
558:     vec3 sssFalloff = sssFalloff[profileIndex];
559:     vec3 sssStrength = sssStrength[profileIndex];
560:     float translucency = (TranslucencyStrength[profileIndex] + 1.0);
561:     vec3 d = ((SLEAardvarkRenderDemo_PBR_getThickness_uG9PEPXS6cJk6ykmeziGuQ(bias, wp, wn) * ((4.0 / translucency) / sssWidth)) / (sssFalloff + 0.001));
562:     vec3 dd = ((-d) * d);
563:     return ((sssStrength * ((((((0.233 * exp((dd / 0.0064))) + (0.1 * exp((dd / 0.0484)))) + (0.118 * exp((dd / 0.187)))) + (0.113 * exp((dd / 0.567)))) + (0.358 * exp((dd / 1.99)))) + (0.078 * exp((dd / 7.41))))) * clamp((0.3 + dot(l, (-wn))), 0, 1));
564: }
565: 
566: tup_Aardvark_Base_V3d_Aardvark_Base_V3d SLEAardvarkRenderDemo_PBR_directSheen_r_UnB2S7PJtOqG00BzUfqtA(vec3 sheenColor, float sheenRoughness, float nDotH, float nDotV, float nDotL, vec3 diffuse, vec3 specular)
567: {
568:     if((sheenColor == vec3(0.0, 0.0, 0.0)))
569:     {
570:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d(diffuse, specular);
571:     }
572:     else
573:     {
574:         float sheenScaling = (1.0 - (max(sheenColor.x,max(sheenColor.y,sheenColor.z)) * texture(samplerBRDFLtu, vec2(nDotV, sheenRoughness)).z));
575:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d((diffuse * sheenScaling), ((specular * sheenScaling) + SLEAardvarkRenderDemo_PBR_specularLobeCloth_Fwi09ZLZZAMycDWF9TT00Nw(sheenColor, sheenRoughness, nDotH, nDotV, nDotL)));
576:     }
577: }
578: 
579: tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d helper(vec2 DiffuseColorCoordinates, vec3 ClearCoatNormalC, vec4 ColorsC, float MetallicC, vec3 NormalsC, vec4 WorldPositionC, vec4 cc, vec4 nr, vec4 sheen)
580: {
581:     vec3 v = normalize((CameraLocation - WorldPositionC.xyz));
582:     tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d patternInput = SLEAardvarkRenderDemo_PBR_getLightParams_r_MUL_v9kV63L09Maehwg(Light, WorldPositionC.xyz, mix(NormalsC, ClearCoatNormalC, cc.w), v, nr.w);
583:     vec3 h = normalize((v + patternInput.Item1));
584:     float nDotL = clamp(dot(NormalsC, patternInput.Item1), 0, 1);
585:     float hDotV = clamp(dot(h, v), 0, 1);
586:     float nDotH = clamp(dot(NormalsC, h), 0, 1);
587:     float nDotV = clamp(dot(NormalsC, v), 0, 1);
588:     vec3 f0Base = mix(vec3(0.04, 0.04, 0.04), ColorsC.xyz, MetallicC);
589:     vec3 F = SLEAardvarkRenderDemo_BRDF_fresnelSchlick_oKvmgrrRv31EPsFk6qorKg(mix(f0Base, SLEAardvarkRenderDemo_PBR_f0ClearCoatToSurface_J558wyL5EFxmvuWviPWtyA(f0Base), cc.w), hDotV);
590:     tup_Aardvark_Base_V3d_Aardvark_Base_V3d patternInput1 = SLEAardvarkRenderDemo_PBR_directSheen_r_UnB2S7PJtOqG00BzUfqtA(sheen.xyz, sheen.w, nDotH, nDotV, nDotL, SLEAardvarkRenderDemo_PBR_diffuseLobe_28BmPU7EzF002N1qCMj5AKQ(F, MetallicC, ColorsC.xyz), (SLEAardvarkRenderDemo_PBR_specularLobeStandard_CqO00nVcgM1EG00Qi6Zav5og(F, nr.w, nDotH, nDotV, nDotL) * patternInput.Item3));
591:     vec3 diff1 = ((patternInput1.Item0 * nDotL) * patternInput.Item2);
592:     if((cc.w == 0.0))
593:     {
594:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d(diff1, ((patternInput1.Item1 * patternInput.Item2) * nDotL), patternInput.Item1, patternInput.Item4);
595:     }
596:     else
597:     {
598:         tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double patternInput2 = SLEAardvarkRenderDemo_PBR_directclearCoat_k6yWm00bc468V3YViKkxblg(cc.w, texture(emission, DiffuseColorCoordinates).w, ClearCoatNormalC, patternInput.Item1, v, h, hDotV);
599:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d((diff1 * (vec3(1.0, 1.0, 1.0) - patternInput2.Item0)), ((((patternInput1.Item1 * (vec3(1.0, 1.0, 1.0) - patternInput2.Item0)) * nDotL) + (patternInput2.Item1 * patternInput2.Item2)) * patternInput.Item2), patternInput.Item1, patternInput.Item4);
600:     }
601: }
602: 
603: vec2 SLEAardvarkRenderDemo_Shadow_penumbra_xPgf541Zi7aStHEY_SGbgw(float noise, vec2 shadowMapUV, float surfaceDepth, vec2 lightSize)
604: {
605:     float avgBlockersDepth = 0.0;
606:     float blockersCount = 0.0;
607:     for(int i = 0; (i < 16); i++)
608:     {
609:         float sampleDepth = texture(samplerShadowMapTex, (shadowMapUV + (SLEAardvarkRenderDemo_Shadow_vogelDiskOffset_cR3OqSYynaKjhFMpTsd8fQ(i, 16, noise) / 100.0))).x;
610:         if((sampleDepth < surfaceDepth))
611:         {
612:             avgBlockersDepth = (avgBlockersDepth + sampleDepth);
613:             blockersCount = (blockersCount + 1.0);
614:         }
615:     }
616:     if((blockersCount > 0.0))
617:     {
618:         avgBlockersDepth = (avgBlockersDepth / blockersCount);
619:         return SLEAardvarkRenderDemo_Shadow_avgBlockersDepthToPenumbra_ntc5ns5VYYuiRbvrmwQQGw(lightSize, surfaceDepth, avgBlockersDepth);
620:     }
621:     else
622:     {
623:         return vec2(0.0, 0.0);
624:     }
625: }
626: 
627: float SLEAardvarkRenderDemo_Shadow_vogelDiskSampling_lwchxL5jglAwqwkoagx25Q(float noise, vec4 pos, vec2 spread)
628: {
629:     float vis = 0.0;
630:     for(int i = 0; (i < 16); i++)
631:     {
632:         vec4 p = (pos + vec4((SLEAardvarkRenderDemo_Shadow_vogelDiskOffset_cR3OqSYynaKjhFMpTsd8fQ(i, 16, noise) * spread), 0.0, 0.0));
633:         vec4 samplePos = (0.5 + (0.5 * (p / p.w)));
634:         vis = (vis + (texture(samplerShadowMap, vec3(samplePos.xy, (samplePos.z - 0.005))) / 16.0));
635:     }
636:     return vis;
637: }
638: 
639: vec2 SLEAardvarkRenderDemo_Shadow_lightWidth_LXD3gVwklkgvV5JWo3yVwg()
640: {
641:     if((Light.lightType == 0))
642:     {
643:         return vec2(0.01, 0.01);
644:     }
645:     else
646:     {
647:         if((Light.lightType == 1))
648:         {
649:             return vec2(0.01, 0.01);
650:         }
651:         else
652:         {
653:             if((Light.lightType == 2))
654:             {
655:                 return vec2(0.01, 0.01);
656:             }
657:             else
658:             {
659:                 if((Light.lightType == 3))
660:                 {
661:                     return vec2(0.01, 0.01);
662:                 }
663:                 else
664:                 {
665:                     if((Light.lightType == 4))
666:                     {
667:                         return vec2(max(0.01, (Light.radius * 2.0)));
668:                     }
669:                     else
670:                     {
671:                         if((Light.lightType == 5))
672:                         {
673:                             return vec2(max(0.01, (Light.radius * 2.0)));
674:                         }
675:                         else
676:                         {
677:                             if((Light.lightType == 6))
678:                             {
679:                                 return vec2(max(0.01, length((Light.p1 - Light.p4))), max(0.01, length((Light.p1 - Light.p2))));
680:                             }
681:                             else
682:                             {
683:                                 return vec2(0.01, 0.01);
684:                             }
685:                         }
686:                     }
687:                 }
688:             }
689:         }
690:     }
691: }
692: 
693: float SLEAardvarkRenderDemo_Shadow_getShadow_weoToE6531isz200PO6ibGQ(vec4 wPos)
694: {
695:     vec4 lightSpacePos = (wPos * LightViewProjMatrix);
696:     vec4 samplePos = (0.5 + (0.5 * (lightSpacePos / lightSpacePos.w)));
697:     float noise = (6.283185307179586 * SLEAardvarkRenderDemo_Shadow_random_1MN50IO3BjRacQVcNxGOSw(samplePos));
698:     return SLEAardvarkRenderDemo_Shadow_vogelDiskSampling_lwchxL5jglAwqwkoagx25Q(noise, lightSpacePos, SLEAardvarkRenderDemo_Shadow_penumbra_xPgf541Zi7aStHEY_SGbgw(noise, samplePos.xy, samplePos.z, SLEAardvarkRenderDemo_Shadow_lightWidth_LXD3gVwklkgvV5JWo3yVwg()));
699: }
700: 
701: layout(location = 0) in vec2 fs_DiffuseColorCoordinates;
702: layout(location = 0) out vec4 DiffuseOut;
703: layout(location = 1) out vec4 SpecularOut;
704: void main()
705: {
706:     vec4 albedo = texture(color, fs_DiffuseColorCoordinates);
707:     vec4 nr = texture(normal, fs_DiffuseColorCoordinates);
708:     vec4 cc = texture(clearCoat, fs_DiffuseColorCoordinates);
709:     vec4 sheen1 = texture(sheen, fs_DiffuseColorCoordinates);
710:     vec4 WorldPositionC = texture(wPos, fs_DiffuseColorCoordinates);
711:     vec3 NormalsC = normalize(nr.xyz);
712:     float MetallicC = ((albedo.w < 0.0) ? albedo.w : (((albedo.w / 10.0) - trunc((albedo.w / 10.0))) * 10.0));
713:     vec4 ColorsC = vec4(albedo.xyz, 1.0);
714:     vec3 ClearCoatNormalC = normalize(cc.xyz);
715:     tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d patternInput = ((MetallicC < 0.0) ? new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)) : helper(fs_DiffuseColorCoordinates, ClearCoatNormalC, ColorsC, MetallicC, NormalsC, WorldPositionC, cc, nr, sheen1));
716:     float shadow = SLEAardvarkRenderDemo_Shadow_getShadow_weoToE6531isz200PO6ibGQ(WorldPositionC);
717:     int sssProfileC = SLEAardvarkRenderDemo_GBuffer_extractProfileIndex_kBjDAbusFqtitZm3MIDG8g(albedo.w);
718:     DiffuseOut = ((vec4(patternInput.Item0, 1.0) * shadow) + vec4(((sssProfileC >= 0) ? (patternInput.Item3 * SLEAardvarkRenderDemo_PBR_transm_o0izfTE2HCHBVzdfbccS2A(sssProfileC, WorldPositionC.xyz, NormalsC, patternInput.Item2)) : vec3(0.0, 0.0, 0.0)), 0.0));
719:     SpecularOut = (vec4(patternInput.Item1, 1.0) * shadow);
720: }
721: 
722: #endif

 2: WARNING: load
 2: [GL] RenderObjects: +60/-0 (13ms)
 2: using optimized native program
 2: [GL] RenderObjects: +2/-0 (5388ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (5401ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (7169ms)
 2: using optimized native program
 2: texture created
 2: [GL] RenderObjects: +2/-0 (7184ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (7210ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-0 (8001ms)
 2: using optimized native program
 2: WARNING: load
 2: WARNING: load
 2: [GL] RenderObjects: +61/-0 (13ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (130ms)
 2: [GL] RenderObjects: +1/-0 (10ms)
 2: [GL] RenderObjects: +61/-0 (11ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (87ms)
 2: [GL] RenderObjects: +61/-0 (18ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (96ms)
 2: WARNING: load
 2: WARNING: load
 2: [GL] RenderObjects: +8219/-0 (16711ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (31313ms)
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: [GL] RenderObjects: +8219/-61 (46721ms)
 2: [GL] RenderObjects: +8219/-0 (2249ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (2898ms)
 2: [GL] RenderObjects: +8219/-0 (2465ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (3468ms)
 2: [GL] RenderObjects: +8219/-0 (2525ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (3524ms)
 2: [GL] RenderObjects: +8219/-0 (1921ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (2606ms)
 2: [GL] RenderObjects: +8219/-0 (2701ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (3391ms)
 2: [GL] RenderObjects: +8219/-0 (2217ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (2990ms)
 2: Compiling shader:
  1: #version 460
  2: #define __SHADER_STAGE__
  3: 
  4: 
  5: 
  6: 
  7: struct tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d
  8: {
  9:     bool Item0;
 10:     vec3 Item1;
 11:     vec3 Item2;
 12:     float Item3;
 13:     vec3 Item4;
 14: };
 15: 
 16: struct SLEAardvarkRenderDemo_SLEUniform_Light
 17: {
 18:     int lightType;
 19:     vec4 lightPosition;
 20:     vec4 lightDirection;
 21:     vec3 color;
 22:     bool castsShadow;
 23:     float cutOffInner;
 24:     float cutOffOuter;
 25:     float radius;
 26:     vec3 virtualPos;
 27:     vec3 virtualPos2;
 28:     vec3 p1;
 29:     vec3 p2;
 30:     vec3 p3;
 31:     vec3 p4;
 32:     mat4x4 toWorld;
 33:     mat4x4 fromWorld;
 34: };
 35: 
 36: struct tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d
 37: {
 38:     vec3 Item0;
 39:     vec3 Item1;
 40:     vec3 Item2;
 41:     vec3 Item3;
 42: };
 43: 
 44: struct tup_Aardvark_Base_V3d_Aardvark_Base_V3d
 45: {
 46:     vec3 Item0;
 47:     vec3 Item1;
 48: };
 49: 
 50: struct tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double
 51: {
 52:     vec3 Item0;
 53:     vec3 Item1;
 54:     float Item2;
 55: };
 56: 
 57: layout(std140, binding = 0)
 58: uniform PerView
 59: {
 60:     vec3 CameraLocation;
 61: };
 62: 
 63: 
 64: layout(std140, binding = 1)
 65: uniform Global
 66: {
 67:     SLEAardvarkRenderDemo_SLEUniform_Light Light;
 68: };
 69: 
 70: 
 71: layout(binding = 0)
 72: uniform sampler2D clearCoat;
 73: 
 74: layout(binding = 1)
 75: uniform sampler2D color;
 76: 
 77: layout(binding = 2)
 78: uniform sampler2D emission;
 79: 
 80: layout(binding = 3)
 81: uniform sampler2D normal;
 82: 
 83: layout(binding = 4)
 84: uniform sampler2D samplerBRDFLtu;
 85: 
 86: layout(binding = 5)
 87: uniform sampler2D sheen;
 88: 
 89: layout(binding = 6)
 90: uniform sampler2D wPos;
 91: 
 92: tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d(vec3 item0, vec3 item1, vec3 item2, vec3 item3)
 93: {
 94:     tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d res;
 95:     res.Item0 = item0;
 96:     res.Item1 = item1;
 97:     res.Item2 = item2;
 98:     res.Item3 = item3;
 99:     return res;
100: }
101: 
102: 
103: tup_Aardvark_Base_V3d_Aardvark_Base_V3d new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d(vec3 item0, vec3 item1)
104: {
105:     tup_Aardvark_Base_V3d_Aardvark_Base_V3d res;
106:     res.Item0 = item0;
107:     res.Item1 = item1;
108:     return res;
109: }
110: 
111: 
112: float SLEAardvarkRenderDemo_BRDF_distributionCharlie_9Ai0hRoW1dnTGa2k_n8d7g(float roughness, float nDotH)
113: {
114:     float rcpR = (1.0 / (roughness * roughness));
115:     return (((2.0 + rcpR) * pow((1.0 - (nDotH * nDotH)), (rcpR * 0.5))) / 6.283185307179586);
116: }
117: 
118: 
119: float SLEAardvarkRenderDemo_BRDF_visibilityAshikhmin_1GWL7ALGseRABCZZ00R7N8g(float nDotV, float nDotL)
120: {
121:     return (1.0 / max(0.001, (4.0 * ((nDotL + nDotV) - (nDotL * nDotV)))));
122: }
123: 
124: 
125: float SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceRectangle_CSsH8PY0AZ5Q9fWUXd5VQ(vec3 p1, vec3 p2, vec3 p4)
126: {
127:     return (1.0 / ((abs(length((p1 - p2))) * abs(length((p1 - p4)))) * 3.141592653589793));
128: }
129: 
130: 
131: float SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(vec3 o, vec3 d, vec3 planeOrigin, vec3 planeNormal)
132: {
133:     return (dot(planeNormal, (planeOrigin - o)) / dot(planeNormal, d));
134: }
135: 
136: 
137: float SLEAardvarkRenderDemo_PBR_traceTriangle_3zyeXtvfi2Azicu3TsfTxQ(vec3 o, vec3 d, vec3 A, vec3 B, vec3 C)
138: {
139:     vec3 p = (o + (d * SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(o, d, A, normalize(cross((B - A), (C - B))))));
140:     vec3 n2 = normalize(cross((C - B), (p - C)));
141:     if(((dot(normalize(cross((B - A), (p - B))), n2) > 0.999) && (dot(n2, normalize(cross((A - C), (p - A)))) > 0.999)))
142:     {
143:         return 1.0;
144:     }
145:     else
146:     {
147:         return 0.0;
148:     }
149: }
150: 
151: 
152: float SLEAardvarkRenderDemo_PBR_traceRectangle_OSdnOpnvoOU8tTrcn6w3JA(vec3 o, vec3 d, vec3 A, vec3 B, vec3 C, vec3 D)
153: {
154:     return max(SLEAardvarkRenderDemo_PBR_traceTriangle_3zyeXtvfi2Azicu3TsfTxQ(o, d, A, B, C), SLEAardvarkRenderDemo_PBR_traceTriangle_3zyeXtvfi2Azicu3TsfTxQ(o, d, C, D, A));
155: }
156: 
157: 
158: float SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(vec3 lDir, vec3 ln, float cutOffInner, float cutOffOuter)
159: {
160:     return clamp(((dot(lDir, (-ln)) - cutOffOuter) / (cutOffInner - cutOffOuter)), 0, 1);
161: }
162: 
163: 
164: float SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceDisk_3Fm00pFf99CfR9hPbaGPImw(float radius)
165: {
166:     return (1.0 / (((radius * radius) * 3.141592653589793) * 3.141592653589793));
167: }
168: 
169: 
170: tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(bool item0, vec3 item1, vec3 item2, float item3, vec3 item4)
171: {
172:     tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d res;
173:     res.Item0 = item0;
174:     res.Item1 = item1;
175:     res.Item2 = item2;
176:     res.Item3 = item3;
177:     res.Item4 = item4;
178:     return res;
179: }
180: 
181: 
182: float helper2(float cosTheta, float sinSigmaSqr, float sinTheta)
183: {
184:     float x = sqrt(((1.0 / sinSigmaSqr) - 1.0));
185:     float y = ((-x) * (cosTheta / sinTheta));
186:     float sinThetaSqrtY = (sinTheta * sqrt((1.0 - (y * y))));
187:     return ((((cosTheta * acos(y)) - (x * sinThetaSqrtY)) * sinSigmaSqr) + atan((sinThetaSqrtY / x)));
188: }
189: 
190: 
191: float SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(float dist)
192: {
193:     float d = max(dist, 0.01);
194:     return (1.0 / (d * d));
195: }
196: 
197: 
198: vec3 SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(vec3 n, vec3 v, float roughness)
199: {
200:     return normalize(mix(n, (-reflect(n, v)), (1.0 - roughness)));
201: }
202: 
203: 
204: vec3 SLEAardvarkRenderDemo_PBR_representativePointSpehre_OBJfz00NlqX4woYAFs00nVKQ(vec3 n, vec3 v, float roughness, vec3 lUnnorm, float radius)
205: {
206:     vec3 r = SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
207:     vec3 centerToRay = ((dot(lUnnorm, r) * r) - lUnnorm);
208:     return normalize((lUnnorm + (centerToRay * clamp((radius / length(centerToRay)), 0.0, 1.0))));
209: }
210: 
211: 
212: float SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceSphere_UrX1ctp5f0mkaCN8lcAp4g(float radius)
213: {
214:     return (1.0 / ((((radius * radius) * 4.0) * 3.141592653589793) * 3.141592653589793));
215: }
216: 
217: 
218: float SLEAardvarkRenderDemo_PBR_rectangleSolidAngle_yk0LnyTP2qLGhxTZr4oSHw(vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4)
219: {
220:     vec3 v1 = (p1 - wPos);
221:     vec3 v2 = (p2 - wPos);
222:     vec3 v3 = (p3 - wPos);
223:     vec3 v4 = (p4 - wPos);
224:     vec3 n1 = normalize(cross(v1, v2));
225:     vec3 n2 = normalize(cross(v2, v3));
226:     vec3 n3 = normalize(cross(v3, v4));
227:     vec3 n4 = normalize(cross(v4, v1));
228:     return ((((acos(dot((-n1), n2)) + acos(dot((-n2), n3))) + acos(dot((-n3), n4))) + acos(dot((-n4), n1))) - 6.283185307179586);
229: }
230: 
231: 
232: vec3 SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(vec3 a, vec3 b, vec3 c)
233: {
234:     vec3 ab = (b - a);
235:     return (a + (clamp((dot((c - a), ab) / dot(ab, ab)), 0, 1) * ab));
236: }
237: 
238: 
239: vec3 SLEAardvarkRenderDemo_PBR_diffuseLobe_28BmPU7EzF002N1qCMj5AKQ(vec3 F, float metallic, vec3 albedo)
240: {
241:     return (((vec3(1.0, 1.0, 1.0) - F) * ((1.0 - metallic) * albedo)) / 3.141592653589793);
242: }
243: 
244: 
245: float SLEAardvarkRenderDemo_BRDF_DistributionGGX_nY0za00tv6jWojDhC5JYWXw(float nDotH, float roughness)
246: {
247:     float a = (roughness * roughness);
248:     float a2 = (a * a);
249:     float deno = (((nDotH * nDotH) * (a2 - 1.0)) + 1.0);
250:     return (a2 / ((3.141592653589793 * deno) * deno));
251: }
252: 
253: 
254: float helper1(float roughness)
255: {
256:     float r = (roughness + 1.0);
257:     return ((r * r) / 8.0);
258: }
259: 
260: 
261: tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double(vec3 item0, vec3 item1, float item2)
262: {
263:     tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double res;
264:     res.Item0 = item0;
265:     res.Item1 = item1;
266:     res.Item2 = item2;
267:     return res;
268: }
269: 
270: 
271: vec3 SLEAardvarkRenderDemo_BRDF_fresnelSchlick_oKvmgrrRv31EPsFk6qorKg(vec3 f0, float cosTheta)
272: {
273:     return (f0 + ((clamp(dot(f0, vec3(16.5, 16.5, 16.5)), 0, 1) - f0) * pow((1.0 - cosTheta), 5.0)));
274: }
275: 
276: 
277: vec3 SLEAardvarkRenderDemo_PBR_f0ClearCoatToSurface_J558wyL5EFxmvuWviPWtyA(vec3 f0Base)
278: {
279:     vec3 sqrtBase = sqrt(f0Base);
280:     vec3 baseIOR = ((1.0 + sqrtBase) / (1.0 - sqrtBase));
281:     return (((baseIOR - 1.5) / (baseIOR + 1.5)) * ((baseIOR - 1.5) / (baseIOR + 1.5)));
282: }
283: 
284: 
285: float SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(bool ilb, float nDotV, float roughness)
286: {
287:     float k = (ilb ? ((roughness * roughness) / 2.0) : helper1(roughness));
288:     return (nDotV / ((nDotV * (1.0 - k)) + k));
289: }
290: 
291: 
292: float SLEAardvarkRenderDemo_BRDF_GeometrySmith_U72y2oOMHb00XVgzYW0P6uA(bool ilb, float nDotV, float nDotL, float roughness)
293: {
294:     return (SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(ilb, nDotL, roughness) * SLEAardvarkRenderDemo_BRDF_GeometrySchlickGGX_26R00oEc3DtK0V8hk2HayMQ(ilb, nDotV, roughness));
295: }
296: 
297: 
298: vec3 SLEAardvarkRenderDemo_PBR_specularLobeStandard_CqO00nVcgM1EG00Qi6Zav5og(vec3 F, float roughness, float nDotH, float nDotV, float nDotL)
299: {
300:     return (((SLEAardvarkRenderDemo_BRDF_DistributionGGX_nY0za00tv6jWojDhC5JYWXw(nDotH, roughness) * SLEAardvarkRenderDemo_BRDF_GeometrySmith_U72y2oOMHb00XVgzYW0P6uA(false, nDotV, nDotL, roughness)) * F) / max(0.001, ((4.0 * nDotV) * nDotL)));
301: }
302: 
303: 
304: tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double SLEAardvarkRenderDemo_PBR_directclearCoat_k6yWm00bc468V3YViKkxblg(float clearCoat, float clearCoatRoughness, vec3 clearCoatNormal, vec3 lDir, vec3 v, vec3 h, float hDotV)
305: {
306:     float ccNDotL = clamp(dot(clearCoatNormal, lDir), 0, 1);
307:     vec3 ccF = (clearCoat * SLEAardvarkRenderDemo_BRDF_fresnelSchlick_oKvmgrrRv31EPsFk6qorKg(vec3(0.04, 0.04, 0.04), hDotV));
308:     return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double(ccF, SLEAardvarkRenderDemo_PBR_specularLobeStandard_CqO00nVcgM1EG00Qi6Zav5og(ccF, clearCoatRoughness, clamp(dot(clearCoatNormal, h), 0, 1), clamp(dot(clearCoatNormal, v), 0, 1), ccNDotL), ccNDotL);
309: }
310: 
311: 
312: vec3 SLEAardvarkRenderDemo_PBR_representativePointRectangle_RhNDGSMx9lhdbAUaPy333A(vec3 r, vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4, vec3 ln, vec3 lightPosition)
313: {
314:     if((SLEAardvarkRenderDemo_PBR_traceRectangle_OSdnOpnvoOU8tTrcn6w3JA(wPos, r, p1, p2, p3, p4) > 0.0))
315:     {
316:         return r;
317:     }
318:     else
319:     {
320:         vec3 tracedPlane = (wPos + (r * SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(wPos, r, lightPosition, ln)));
321:         vec3 pc1 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p1, p2, tracedPlane);
322:         vec3 pc2 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p2, p3, tracedPlane);
323:         vec3 pc3 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p3, p4, tracedPlane);
324:         vec3 pc4 = SLEAardvarkRenderDemo_PBR_closestPointOnSegment_wgkFwPNJgTRyE1qQcnzAkw(p4, p1, tracedPlane);
325:         float d2 = distance(pc2, tracedPlane);
326:         float d3 = distance(pc3, tracedPlane);
327:         float minDist = distance(pc1, tracedPlane);
328:         vec3 p = pc1;
329:         if((d2 < minDist))
330:         {
331:             minDist = d2;
332:             p = pc2;
333:         }
334:         if((d3 < minDist))
335:         {
336:             minDist = d3;
337:             p = pc3;
338:         }
339:         if((distance(pc4, tracedPlane) < minDist))
340:         {
341:             p = pc4;
342:         }
343:         return normalize((p - wPos));
344:     }
345: }
346: 
347: 
348: float SLEAardvarkRenderDemo_PBR_attenuationRectangle_rv8niFPySJx9fZLgTLeI9A(vec3 wPos, vec3 p1, vec3 p2, vec3 p3, vec3 p4, vec3 lUnnorm, vec3 ln, vec3 n)
349: {
350:     if((dot((-lUnnorm), ln) > 0.0))
351:     {
352:         return ((max(0.0, SLEAardvarkRenderDemo_PBR_rectangleSolidAngle_yk0LnyTP2qLGhxTZr4oSHw(wPos, p1, p2, p3, p4)) * 0.2) * ((((clamp(dot(n, normalize(lUnnorm)), 0, 1) + clamp(dot(n, normalize((p1 - wPos))), 0, 1)) + clamp(dot(n, normalize((p2 - wPos))), 0, 1)) + clamp(dot(n, normalize((p3 - wPos))), 0, 1)) + clamp(dot(n, normalize((p4 - wPos))), 0, 1)));
353:     }
354:     else
355:     {
356:         return 0.0;
357:     }
358: }
359: 
360: 
361: float SLEAardvarkRenderDemo_PBR_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(float cosTheta, float sinSigmaSqr)
362: {
363:     float sinTheta = sqrt((1.0 - (cosTheta * cosTheta)));
364:     return max(0.0, (((cosTheta * cosTheta) > sinSigmaSqr) ? ((3.141592653589793 * sinSigmaSqr) * clamp(cosTheta, 0.0, 1.0)) : helper2(cosTheta, sinSigmaSqr, sinTheta)));
365: }
366: 
367: 
368: float SLEAardvarkRenderDemo_PBR_attenuationDisk_VLzSNJsTqkF1zFM_WwDMYA(vec3 lUnnorm, float radius, vec3 n, vec3 lDir, vec3 ln)
369: {
370:     float radius2 = (radius * radius);
371:     return (SLEAardvarkRenderDemo_PBR_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(clamp(dot(n, lDir), -0.999, 0.999), (radius2 / (radius2 + max(radius2, dot(lUnnorm, lUnnorm))))) * clamp(dot(ln, (-lDir)), 0, 1));
372: }
373: 
374: 
375: float SLEAardvarkRenderDemo_PBR_attenuationSphere_8P00kpj_Yqvju9D85LleWPQ(vec3 lUnnorm, float radius, vec3 n, vec3 lDir)
376: {
377:     return SLEAardvarkRenderDemo_PBR_illuminanceSphereDisc_0CS4M8XTusgxGaKgGTrK_A(clamp(dot(n, lDir), -0.999, 0.999), min(0.9999, ((radius * radius) / dot(lUnnorm, lUnnorm))));
378: }
379: 
380: 
381: vec3 SLEAardvarkRenderDemo_PBR_representativePointDisk_2JPHvvLUgcbUkMatH00ra00Q(vec3 r, vec3 wPos, float radius, vec3 ln, vec3 lightPosition, vec3 lUnnorm)
382: {
383:     vec3 centerToRay = ((wPos + (r * SLEAardvarkRenderDemo_PBR_tracePlane_sI5HLjWHcO7mtd2ZbInNOA(wPos, r, lightPosition, ln))) - lightPosition);
384:     return normalize((lUnnorm + (centerToRay * clamp((radius / length(centerToRay)), 0, 1))));
385: }
386: 
387: 
388: tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d SLEAardvarkRenderDemo_PBR_getLightParams_r_MUL_v9kV63L09Maehwg(SLEAardvarkRenderDemo_SLEUniform_Light light, vec3 wPos, vec3 n, vec3 v, float roughness)
389: {
390:     if((light.lightType == 0))
391:     {
392:         return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(false, vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), 1.0, vec3(0.0, 0.0, 0.0));
393:     }
394:     else
395:     {
396:         if((light.lightType == 1))
397:         {
398:             return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, normalize((-light.lightDirection.xyz)), light.color, 1.0, light.color);
399:         }
400:         else
401:         {
402:             if((light.lightType == 2))
403:             {
404:                 vec3 illuminannce = ((light.color * SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))) * 0.07957747154594767);
405:                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, normalize((light.lightPosition.xyz - wPos)), illuminannce, 1.0, illuminannce);
406:             }
407:             else
408:             {
409:                 if((light.lightType == 3))
410:                 {
411:                     vec3 lDir = normalize((light.lightPosition.xyz - wPos));
412:                     vec3 illuminannce1 = (((light.color * SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(lDir, normalize(light.lightDirection.xyz), light.cutOffInner, light.cutOffOuter)) * SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))) * 0.3183098861837907);
413:                     return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, lDir, illuminannce1, 1.0, illuminannce1);
414:                 }
415:                 else
416:                 {
417:                     if((light.lightType == 4))
418:                     {
419:                         vec3 lUnnorm = (light.lightPosition.xyz - wPos);
420:                         vec3 l = SLEAardvarkRenderDemo_PBR_representativePointSpehre_OBJfz00NlqX4woYAFs00nVKQ(n, v, roughness, lUnnorm, light.radius);
421:                         return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, l, (((light.color * SLEAardvarkRenderDemo_PBR_attenuationSphere_8P00kpj_Yqvju9D85LleWPQ(lUnnorm, light.radius, n, normalize(lUnnorm))) * SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceSphere_UrX1ctp5f0mkaCN8lcAp4g(light.radius)) / dot(n, l)), 1.0, ((light.color * 0.07957747154594767) * SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))));
422:                     }
423:                     else
424:                     {
425:                         if((light.lightType == 5))
426:                         {
427:                             vec3 lUnnorm1 = (light.lightPosition.xyz - wPos);
428:                             vec3 ln = normalize(light.lightDirection.xyz);
429:                             float intensity = SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize((light.virtualPos.xyz - wPos)), ln, light.cutOffInner, light.cutOffOuter);
430:                             vec3 r = SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
431:                             vec3 l1 = SLEAardvarkRenderDemo_PBR_representativePointDisk_2JPHvvLUgcbUkMatH00ra00Q(r, wPos, light.radius, ln, light.lightPosition.xyz, lUnnorm1);
432:                             return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, l1, ((((light.color * intensity) * SLEAardvarkRenderDemo_PBR_attenuationDisk_VLzSNJsTqkF1zFM_WwDMYA(lUnnorm1, light.radius, n, normalize(lUnnorm1), ln)) * SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceDisk_3Fm00pFf99CfR9hPbaGPImw(light.radius)) / dot(n, l1)), clamp(abs(dot(ln, r)), 0, 1), (((light.color * intensity) * 0.3183098861837907) * SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))));
433:                         }
434:                         else
435:                         {
436:                             if((light.lightType == 6))
437:                             {
438:                                 vec3 ln1 = normalize(light.lightDirection.xyz);
439:                                 vec4 d1 = (vec4(normalize((light.virtualPos.xyz - wPos)), 0.0) * light.fromWorld);
440:                                 vec4 d3 = (vec4(normalize((light.virtualPos2.xyz - wPos)), 0.0) * light.fromWorld);
441:                                 float intensity1 = (SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize(vec3(d1.x, d1.y, 0.0)), vec3(0.0, 1.0, 0.0), light.cutOffInner, light.cutOffOuter) * SLEAardvarkRenderDemo_PBR_attenuationAgular_6LX81EpbrYsQsMWxFpR6tg(normalize(vec3(0.0, d3.y, d3.z)), vec3(0.0, 1.0, 0.0), light.cutOffInner, light.cutOffOuter));
442:                                 vec3 r1 = SLEAardvarkRenderDemo_PBR_getSpecularDominantDirArea_1ZZJHwQrvhcdzZa00of3JvA(n, v, roughness);
443:                                 vec3 l2 = SLEAardvarkRenderDemo_PBR_representativePointRectangle_RhNDGSMx9lhdbAUaPy333A(r1, wPos, light.p1, light.p2, light.p3, light.p4, ln1, light.lightPosition.xyz);
444:                                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(true, l2, ((((light.color * intensity1) * SLEAardvarkRenderDemo_PBR_attenuationRectangle_rv8niFPySJx9fZLgTLeI9A(wPos, light.p1, light.p2, light.p3, light.p4, (light.lightPosition.xyz - wPos), ln1, n)) * SLEAardvarkRenderDemo_PBR_luminousPowerToLuminanceRectangle_CSsH8PY0AZ5Q9fWUXd5VQ(light.p1, light.p2, light.p4)) / dot(n, l2)), clamp(abs(dot(ln1, r1)), 0, 1), (((light.color * intensity1) * 0.3183098861837907) * SLEAardvarkRenderDemo_PBR_attenuationPunctualLight_1NCNKoz6VseVzAXQwxmhag(distance(light.lightPosition.xyz, wPos))));
445:                             }
446:                             else
447:                             {
448:                                 return new_tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d(false, vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), 1.0, vec3(0.0, 0.0, 0.0));
449:                             }
450:                         }
451:                     }
452:                 }
453:             }
454:         }
455:     }
456: }
457: 
458: 
459: vec3 SLEAardvarkRenderDemo_PBR_specularLobeCloth_Fwi09ZLZZAMycDWF9TT00Nw(vec3 F, float roughness, float nDotH, float nDotV, float nDotL)
460: {
461:     return ((SLEAardvarkRenderDemo_BRDF_distributionCharlie_9Ai0hRoW1dnTGa2k_n8d7g(roughness, nDotH) * SLEAardvarkRenderDemo_BRDF_visibilityAshikhmin_1GWL7ALGseRABCZZ00R7N8g(nDotV, nDotL)) * F);
462: }
463: 
464: 
465: 
466: #ifdef Vertex
467: layout(location = 0) in vec2 DiffuseColorCoordinates;
468: layout(location = 1) in vec4 Positions;
469: layout(location = 0) out vec2 fs_DiffuseColorCoordinates;
470: void main()
471: {
472:     fs_DiffuseColorCoordinates = DiffuseColorCoordinates;
473:     gl_Position = Positions;
474: }
475: 
476: #endif
477: 
478: 
479: 
480: #ifdef Fragment
481: 
482: tup_Aardvark_Base_V3d_Aardvark_Base_V3d SLEAardvarkRenderDemo_PBR_directSheen_r_UnB2S7PJtOqG00BzUfqtA(vec3 sheenColor, float sheenRoughness, float nDotH, float nDotV, float nDotL, vec3 diffuse, vec3 specular)
483: {
484:     if((sheenColor == vec3(0.0, 0.0, 0.0)))
485:     {
486:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d(diffuse, specular);
487:     }
488:     else
489:     {
490:         float sheenScaling = (1.0 - (max(sheenColor.x,max(sheenColor.y,sheenColor.z)) * texture(samplerBRDFLtu, vec2(nDotV, sheenRoughness)).z));
491:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d((diffuse * sheenScaling), ((specular * sheenScaling) + SLEAardvarkRenderDemo_PBR_specularLobeCloth_Fwi09ZLZZAMycDWF9TT00Nw(sheenColor, sheenRoughness, nDotH, nDotV, nDotL)));
492:     }
493: }
494: 
495: tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d helper(vec2 DiffuseColorCoordinates, vec3 ClearCoatNormalC, vec4 ColorsC, float MetallicC, vec3 NormalsC, vec4 WorldPositionC, vec4 cc, vec4 nr, vec4 sheen)
496: {
497:     vec3 v = normalize((CameraLocation - WorldPositionC.xyz));
498:     tup_bool_Aardvark_Base_V3d_Aardvark_Base_V3d_double_Aardvark_Base_V3d patternInput = SLEAardvarkRenderDemo_PBR_getLightParams_r_MUL_v9kV63L09Maehwg(Light, WorldPositionC.xyz, mix(NormalsC, ClearCoatNormalC, cc.w), v, nr.w);
499:     vec3 h = normalize((v + patternInput.Item1));
500:     float nDotL = clamp(dot(NormalsC, patternInput.Item1), 0, 1);
501:     float hDotV = clamp(dot(h, v), 0, 1);
502:     float nDotH = clamp(dot(NormalsC, h), 0, 1);
503:     float nDotV = clamp(dot(NormalsC, v), 0, 1);
504:     vec3 f0Base = mix(vec3(0.04, 0.04, 0.04), ColorsC.xyz, MetallicC);
505:     vec3 F = SLEAardvarkRenderDemo_BRDF_fresnelSchlick_oKvmgrrRv31EPsFk6qorKg(mix(f0Base, SLEAardvarkRenderDemo_PBR_f0ClearCoatToSurface_J558wyL5EFxmvuWviPWtyA(f0Base), cc.w), hDotV);
506:     tup_Aardvark_Base_V3d_Aardvark_Base_V3d patternInput1 = SLEAardvarkRenderDemo_PBR_directSheen_r_UnB2S7PJtOqG00BzUfqtA(sheen.xyz, sheen.w, nDotH, nDotV, nDotL, SLEAardvarkRenderDemo_PBR_diffuseLobe_28BmPU7EzF002N1qCMj5AKQ(F, MetallicC, ColorsC.xyz), (SLEAardvarkRenderDemo_PBR_specularLobeStandard_CqO00nVcgM1EG00Qi6Zav5og(F, nr.w, nDotH, nDotV, nDotL) * patternInput.Item3));
507:     vec3 diff1 = ((patternInput1.Item0 * nDotL) * patternInput.Item2);
508:     if((cc.w == 0.0))
509:     {
510:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d(diff1, ((patternInput1.Item1 * patternInput.Item2) * nDotL), patternInput.Item1, patternInput.Item4);
511:     }
512:     else
513:     {
514:         tup_Aardvark_Base_V3d_Aardvark_Base_V3d_double patternInput2 = SLEAardvarkRenderDemo_PBR_directclearCoat_k6yWm00bc468V3YViKkxblg(cc.w, texture(emission, DiffuseColorCoordinates).w, ClearCoatNormalC, patternInput.Item1, v, h, hDotV);
515:         return new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d((diff1 * (vec3(1.0, 1.0, 1.0) - patternInput2.Item0)), ((((patternInput1.Item1 * (vec3(1.0, 1.0, 1.0) - patternInput2.Item0)) * nDotL) + (patternInput2.Item1 * patternInput2.Item2)) * patternInput.Item2), patternInput.Item1, patternInput.Item4);
516:     }
517: }
518: 
519: layout(location = 0) in vec2 fs_DiffuseColorCoordinates;
520: layout(location = 0) out vec4 DiffuseOut;
521: layout(location = 1) out vec4 SpecularOut;
522: void main()
523: {
524:     vec4 albedo = texture(color, fs_DiffuseColorCoordinates);
525:     vec4 nr = texture(normal, fs_DiffuseColorCoordinates);
526:     vec4 cc = texture(clearCoat, fs_DiffuseColorCoordinates);
527:     vec4 sheen1 = texture(sheen, fs_DiffuseColorCoordinates);
528:     vec4 WorldPositionC = texture(wPos, fs_DiffuseColorCoordinates);
529:     vec3 NormalsC = normalize(nr.xyz);
530:     float MetallicC = ((albedo.w < 0.0) ? albedo.w : (((albedo.w / 10.0) - trunc((albedo.w / 10.0))) * 10.0));
531:     vec4 ColorsC = vec4(albedo.xyz, 1.0);
532:     vec3 ClearCoatNormalC = normalize(cc.xyz);
533:     tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d patternInput = ((MetallicC < 0.0) ? new_tup_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d_Aardvark_Base_V3d(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)) : helper(fs_DiffuseColorCoordinates, ClearCoatNormalC, ColorsC, MetallicC, NormalsC, WorldPositionC, cc, nr, sheen1));
534:     DiffuseOut = vec4(patternInput.Item0, 1.0);
535:     SpecularOut = vec4(patternInput.Item1, 1.0);
536: }
537: 
538: #endif

 2: [GL] RenderObjects: +1/-1 (1934ms)
 2: [GL] RenderObjects: +8219/-0 (2150ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (2866ms)
 2: [GL] RenderObjects: +8219/-0 (2110ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (2961ms)
 2: [GL] RenderObjects: +8219/-0 (3304ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (4131ms)
 2: [GL] RenderObjects: +8219/-0 (2250ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (4449ms)
 2: [GL] RenderObjects: +8219/-0 (2472ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (5082ms)
 2: [GL] RenderObjects: +8219/-0 (2467ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (3276ms)
 2: [GL] RenderObjects: +8219/-0 (3680ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (6211ms)
 2: [GL] RenderObjects: +8219/-0 (2532ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (5340ms)
 2: [GL] RenderObjects: +8219/-0 (2437ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (5297ms)
 2: [GL] RenderObjects: +8219/-0 (2627ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (5499ms)
 2: p1 [-0.5, 3.447213595499958, 0.776393202250021] p2 [-0.5, 2.552786404500042, 1.2236067977499792] p3 [0.5, 2.552786404500042, 1.2236067977499792] p4 [0.5, 3.447213595499958, 0.776393202250021]
 2: [GL] RenderObjects: +8219/-0 (2979ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (4097ms)
 2: p1 [-0.5, 3.353553390593274, 0.6464466094067263] p2 [-0.5, 2.646446609406726, 1.3535533905932737] p3 [0.5, 2.646446609406726, 1.3535533905932737] p4 [0.5, 3.353553390593274, 0.6464466094067263]
 2: [GL] RenderObjects: +8219/-0 (4313ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (7555ms)
 2: p1 [-0.5, 3.353553390593274, 0.6464466094067263] p2 [-0.5, 2.646446609406726, 1.3535533905932737] p3 [0.5, 2.646446609406726, 1.3535533905932737] p4 [0.5, 3.353553390593274, 0.6464466094067263]
 2: [GL] RenderObjects: +1/-1 (99ms)
 2: p1 [-0.5, 3.353553390593274, 0.6464466094067263] p2 [-0.5, 2.646446609406726, 1.3535533905932737] p3 [0.5, 2.646446609406726, 1.3535533905932737] p4 [0.5, 3.353553390593274, 0.6464466094067263]
 2: [GL] RenderObjects: +8219/-0 (2705ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (6006ms)
 2: WARNING: load
 2: WARNING: load
 2: WARNING: load
 2: WARNING: load
 2: [GL] RenderObjects: +61/-0 (323ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (982ms)
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: WARNING: AdaptiveRenderingResultCube.compute
 2: [GL] RenderObjects: +61/-8219 (4083ms)
 2: [GL] RenderObjects: +61/-0 (33ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (164ms)
 2: [GL] RenderObjects: +61/-0 (9ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (135ms)
 2: [GL] RenderObjects: +61/-0 (30ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (179ms)
 2: [GL] RenderObjects: +61/-0 (33ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (160ms)
 2: [GL] RenderObjects: +61/-0 (28ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (163ms)
 2: [GL] RenderObjects: +61/-0 (30ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (154ms)
 2: [GL] RenderObjects: +61/-0 (29ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (183ms)
 2: [GL] RenderObjects: +61/-0 (35ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (183ms)
 2: [GL] RenderObjects: +61/-0 (31ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (158ms)
 2: [GL] RenderObjects: +61/-0 (9ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (157ms)
 2: [GL] RenderObjects: +61/-0 (10ms)
 2: using optimized native program
 2: [GL] RenderObjects: +1/-1 (185ms)
 2: [GL] RenderObjects: +1/-1 (108ms)
 2: [GL] RenderObjects: +1/-1 (114ms)
 2: [GL] RenderObjects: +1/-1 (111ms)
 2: [GL] RenderObjects: +1/-1 (91ms)
 2: [GL] RenderObjects: +1/-1 (103ms)
 2: [GL] RenderObjects: +1/-1 (86ms)
